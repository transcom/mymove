@use 'styles/uswds/milmove' as milmove_uswds;

.descriptionList {
  dt {
    @include milmove_uswds.u-text('bold');
    @include milmove_uswds.u-text('base-darker');
  }

  dd {
    @include milmove_uswds.u-margin(0);
  }

  dt,
  dd {
    @include milmove_uswds.u-border-top('1px');
    @include milmove_uswds.u-border-top('base-lighter');

    @include milmove_uswds.u-padding-x(2);
    @include milmove_uswds.u-padding-y(1.5);
  }

  .row {
    display: flex;
    @include milmove_uswds.u-font('body', 'xs');
    @include milmove_uswds.u-line-height('body', 2);

    .noBorder {
      @include milmove_uswds.u-border(0);
    }
  }

  .noBorder {
    dd,
    dt {
      @include milmove_uswds.u-border(0);
    }
  }

  .rowWithVisualCue::before {
    @include milmove_uswds.u-margin-y(0.5);

    // Only valid values were 1px, 2px, 0 and 05
    // 2px were needed for the outline:
    @include milmove_uswds.u-outline(2px);

    // This is to offset the position of the outline
    // so it lines up next to the row:
    @include milmove_uswds.u-margin-left(-2px);
    @include milmove_uswds.u-margin-right(2px);

    outline-color: milmove_uswds.$mm-gold;
    content: '';
  }
}

.tableDisplay {
  dt,
  dd {
    display: table-cell;
  }

  .row {
    display: table-row;
  }
}

.compact {
  @include milmove_uswds.u-margin(0);

  dt,
  dd {
    @include milmove_uswds.u-padding-x(1);
  }

  .row:first-child {
    dt,
    dd {
      @include milmove_uswds.u-border(0);
    }
  }
}
