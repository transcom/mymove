CREATE TABLE archived_personally_procured_moves (
	id uuid PRIMARY KEY,
    move_id uuid REFERENCES moves,
	FOREIGN KEY (move_id) REFERENCES moves (id) ON DELETE CASCADE,
    weight_estimate INT NULL,
	created_at timestamp without time zone NOT NULL,
	updated_at timestamp without time zone NOT NULL,
    pickup_postal_code text,
    additional_pickup_postal_code text,
    destination_pickup_postal_code text,
    days_in_storage INT,
    status text,
    has_additional_postal_code boolean,
    has_sit boolean,
    has_requested_advance boolean,
    advance_id uuid REFERENCES advances,
    estimated_storage_reimbursement text,
    mileage INT,
    planned_sit_max INT,
    sit_max INT,
    incentive_estimate_min INT,
    incentive_estimate_max INT,
    advance_worksheet_id uuid REFERENCES advance_worksheets,
    net_weight INT,
    original_move_date timestamp with time zone,
    actual_move_date timestamp with time zone,
    total_sit_cost INT,
    submit_date timestamp with time zone,
    approved_date timestamp with time zone,
    reviewed_date timestamp with time zone,
    has_pro_gear boolean,
    has_pro_gear_over_thousand boolean,
    move_document_id uuid REFERENCES move_documents,
    move_document_move_id uuid REFERENCES moves,
    document_id uuid REFERENCES documents,
    move_document_type text,
    move_document_status text,
    notes text,
    move_document_created_at timestamp with time zone NOT NULL,
    move_document_updated_at timestamp with time zone NOT NULL,
    move_document_deleted_at timestamp with time zone NOT NULL,
    title varchar(255),
    move_document_ppm_id uuid REFERENCES personally_procured_moves,
    signed_certificate_id uuid REFERENCES signed_certificates,
    submitting_user_id uuid REFERENCES users,
    signed_certificate_move_id uuid REFERENCES moves,
    certification_text text,
    signature text,
    date timestamp,
	signed_certificate_created_at timestamp without time zone NOT NULL,
	signed_certificate_updated_at timestamp without time zone NOT NULL,
    personally_procured_move_id uuid REFERENCES moves,
    certification_type text,
    weight_ticket_set_documents weight_ticket_set_document[],
    weight_ticket_set_document_id uuid REFERENCES weight_ticket_set_documents,
    weight_ticket_set_type text,
    vehicle_nickname text,
    weight_ticket_set_document_move_document_id uuid REFERENCES move_documents,
    empty_weight INT,
    empty_weight_ticket_mising boolean,
    full_weight INT,
    full_weight_ticket_missing boolean,
    weight_ticket_date date,
    weight_ticket_set_document_created_at timestamp without time zone NOT NULL,
    weight_ticket_set_document_updated_at timestamp without time zone NOT NULL,
    weight_ticket_set_document_deleted_at timestamp without time zone NOT NULL,
    trailer_ownership_missing boolean,
    vehicle_make text,
    vehicle_model text,
    moving_expenses_document_id uuid REFERENCES moving_expenses_documents,
    moving_expense_type varchar(255),
    moving_expenses_document_created_at timestamp without time zone NOT NULL,
    moving_expenses_document_updated_at timestamp without time zone NOT NULL,
    moving_expenses_document_deleted_at timestamp without time zone NOT NULL,
    requested_amount_cents INT,
    payment_method varchar(255),
    receipt_missing boolean,
    storage_start_date date,
    storage_end_date date
);

INSERT INTO archived_personally_procured_moves (signed_certificates)
SELECT * from signed_certificates;

INSERT INTO archived_personally_procured_moves (weight_ticket_set_documents)
SELECT * from weight_ticket_set_documents;

INSERT INTO archived_personally_procured_moves (moving_documents)
SELECT * from moving_documents;

INSERT INTO archived_personally_procured_moves (moving_expenses_documents)
SELECT * from moving_expenses_documents;

INSERT INTO archived_personally_procured_moves (moving_expenses_documents)
SELECT * from personally_procured_moves;