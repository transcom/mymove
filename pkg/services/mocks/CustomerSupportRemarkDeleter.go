// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	uuid "github.com/gofrs/uuid"
)

// CustomerSupportRemarkDeleter is an autogenerated mock type for the CustomerSupportRemarkDeleter type
type CustomerSupportRemarkDeleter struct {
	mock.Mock
}

// DeleteCustomerSupportRemark provides a mock function with given fields: appCtx, customerSupportRemarkID
func (_m *CustomerSupportRemarkDeleter) DeleteCustomerSupportRemark(appCtx appcontext.AppContext, customerSupportRemarkID uuid.UUID) error {
	ret := _m.Called(appCtx, customerSupportRemarkID)

	var r0 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, uuid.UUID) error); ok {
		r0 = rf(appCtx, customerSupportRemarkID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCustomerSupportRemarkDeleter interface {
	mock.TestingT
	Cleanup(func())
}

// NewCustomerSupportRemarkDeleter creates a new instance of CustomerSupportRemarkDeleter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCustomerSupportRemarkDeleter(t mockConstructorTestingTNewCustomerSupportRemarkDeleter) *CustomerSupportRemarkDeleter {
	mock := &CustomerSupportRemarkDeleter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
