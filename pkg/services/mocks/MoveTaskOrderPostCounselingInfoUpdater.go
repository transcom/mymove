// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	ghcmessages "github.com/transcom/mymove/pkg/gen/ghcmessages"

	models "github.com/transcom/mymove/pkg/models"

	strfmt "github.com/go-openapi/strfmt"

	uuid "github.com/gofrs/uuid"
)

// MoveTaskOrderPostCounselingInfoUpdater is an autogenerated mock type for the MoveTaskOrderPostCounselingInfoUpdater type
type MoveTaskOrderPostCounselingInfoUpdater struct {
	mock.Mock
}

// UpdatePostCounselingInfo provides a mock function with given fields: moveTaskOrderID, scheduledMoveDate, secondaryPickupAddress, secondaryDeliveryAddress, ppmIsIncluded
func (_m *MoveTaskOrderPostCounselingInfoUpdater) UpdatePostCounselingInfo(moveTaskOrderID uuid.UUID, scheduledMoveDate strfmt.Date, secondaryPickupAddress ghcmessages.Address, secondaryDeliveryAddress ghcmessages.Address, ppmIsIncluded bool) (*models.MoveTaskOrder, error) {
	ret := _m.Called(moveTaskOrderID, scheduledMoveDate, secondaryPickupAddress, secondaryDeliveryAddress, ppmIsIncluded)

	var r0 *models.MoveTaskOrder
	if rf, ok := ret.Get(0).(func(uuid.UUID, strfmt.Date, ghcmessages.Address, ghcmessages.Address, bool) *models.MoveTaskOrder); ok {
		r0 = rf(moveTaskOrderID, scheduledMoveDate, secondaryPickupAddress, secondaryDeliveryAddress, ppmIsIncluded)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.MoveTaskOrder)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID, strfmt.Date, ghcmessages.Address, ghcmessages.Address, bool) error); ok {
		r1 = rf(moveTaskOrderID, scheduledMoveDate, secondaryPickupAddress, secondaryDeliveryAddress, ppmIsIncluded)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
