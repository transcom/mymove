// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	appcontext "github.com/transcom/mymove/pkg/appcontext"
	ediinvoice "github.com/transcom/mymove/pkg/edi/invoice"

	mock "github.com/stretchr/testify/mock"

	models "github.com/transcom/mymove/pkg/models"
)

// GHCPaymentRequestInvoiceGenerator is an autogenerated mock type for the GHCPaymentRequestInvoiceGenerator type
type GHCPaymentRequestInvoiceGenerator struct {
	mock.Mock
}

// Generate provides a mock function with given fields: appCtx, paymentRequest, sendProductionInvoice
func (_m *GHCPaymentRequestInvoiceGenerator) Generate(appCtx appcontext.AppContext, paymentRequest models.PaymentRequest, sendProductionInvoice bool) (ediinvoice.Invoice858C, error) {
	ret := _m.Called(appCtx, paymentRequest, sendProductionInvoice)

	if len(ret) == 0 {
		panic("no return value specified for Generate")
	}

	var r0 ediinvoice.Invoice858C
	var r1 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, models.PaymentRequest, bool) (ediinvoice.Invoice858C, error)); ok {
		return rf(appCtx, paymentRequest, sendProductionInvoice)
	}
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, models.PaymentRequest, bool) ediinvoice.Invoice858C); ok {
		r0 = rf(appCtx, paymentRequest, sendProductionInvoice)
	} else {
		r0 = ret.Get(0).(ediinvoice.Invoice858C)
	}

	if rf, ok := ret.Get(1).(func(appcontext.AppContext, models.PaymentRequest, bool) error); ok {
		r1 = rf(appCtx, paymentRequest, sendProductionInvoice)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGHCPaymentRequestInvoiceGenerator creates a new instance of GHCPaymentRequestInvoiceGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGHCPaymentRequestInvoiceGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *GHCPaymentRequestInvoiceGenerator {
	mock := &GHCPaymentRequestInvoiceGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
