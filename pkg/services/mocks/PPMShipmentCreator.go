// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	models "github.com/transcom/mymove/pkg/models"

	testing "testing"
)

// PPMShipmentCreator is an autogenerated mock type for the PPMShipmentCreator type
type PPMShipmentCreator struct {
	mock.Mock
}

// CreatePPMShipmentWithDefaultCheck provides a mock function with given fields: appCtx, ppmshipment
func (_m *PPMShipmentCreator) CreatePPMShipmentWithDefaultCheck(appCtx appcontext.AppContext, ppmshipment *models.PPMShipment) (*models.PPMShipment, error) {
	ret := _m.Called(appCtx, ppmshipment)

	var r0 *models.PPMShipment
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *models.PPMShipment) *models.PPMShipment); ok {
		r0 = rf(appCtx, ppmshipment)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.PPMShipment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appcontext.AppContext, *models.PPMShipment) error); ok {
		r1 = rf(appCtx, ppmshipment)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPPMShipmentCreator creates a new instance of PPMShipmentCreator. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewPPMShipmentCreator(t testing.TB) *PPMShipmentCreator {
	mock := &PPMShipmentCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
