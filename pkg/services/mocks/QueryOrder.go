// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// QueryOrder is an autogenerated mock type for the QueryOrder type
type QueryOrder struct {
	mock.Mock
}

// Column provides a mock function with given fields:
func (_m *QueryOrder) Column() *string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Column")
	}

	var r0 *string
	if rf, ok := ret.Get(0).(func() *string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	return r0
}

// SortOrder provides a mock function with given fields:
func (_m *QueryOrder) SortOrder() *bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for SortOrder")
	}

	var r0 *bool
	if rf, ok := ret.Get(0).(func() *bool); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*bool)
		}
	}

	return r0
}

// NewQueryOrder creates a new instance of QueryOrder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewQueryOrder(t interface {
	mock.TestingT
	Cleanup(func())
}) *QueryOrder {
	mock := &QueryOrder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
