// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	models "github.com/transcom/mymove/pkg/models"

	services "github.com/transcom/mymove/pkg/services"

	testing "testing"
)

// TransportationServiceProviderPerformanceFetcher is an autogenerated mock type for the TransportationServiceProviderPerformanceFetcher type
type TransportationServiceProviderPerformanceFetcher struct {
	mock.Mock
}

// FetchTransportationServiceProviderPerformance provides a mock function with given fields: appCtx, filters
func (_m *TransportationServiceProviderPerformanceFetcher) FetchTransportationServiceProviderPerformance(appCtx appcontext.AppContext, filters []services.QueryFilter) (models.TransportationServiceProviderPerformance, error) {
	ret := _m.Called(appCtx, filters)

	var r0 models.TransportationServiceProviderPerformance
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, []services.QueryFilter) models.TransportationServiceProviderPerformance); ok {
		r0 = rf(appCtx, filters)
	} else {
		r0 = ret.Get(0).(models.TransportationServiceProviderPerformance)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appcontext.AppContext, []services.QueryFilter) error); ok {
		r1 = rf(appCtx, filters)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTransportationServiceProviderPerformanceFetcher creates a new instance of TransportationServiceProviderPerformanceFetcher. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransportationServiceProviderPerformanceFetcher(t testing.TB) *TransportationServiceProviderPerformanceFetcher {
	mock := &TransportationServiceProviderPerformanceFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
