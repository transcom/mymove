// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	models "github.com/transcom/mymove/pkg/models"
)

// ProgearUpdater is an autogenerated mock type for the ProgearUpdater type
type ProgearUpdater struct {
	mock.Mock
}

// UpdateProgear provides a mock function with given fields: appCtx, weightTicket, eTag
func (_m *ProgearUpdater) UpdateProgear(appCtx appcontext.AppContext, weightTicket models.WeightTicket, eTag string) (*models.WeightTicket, error) {
	ret := _m.Called(appCtx, weightTicket, eTag)

	var r0 *models.WeightTicket
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, models.WeightTicket, string) *models.WeightTicket); ok {
		r0 = rf(appCtx, weightTicket, eTag)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.WeightTicket)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appcontext.AppContext, models.WeightTicket, string) error); ok {
		r1 = rf(appCtx, weightTicket, eTag)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewProgearUpdater interface {
	mock.TestingT
	Cleanup(func())
}

// NewProgearUpdater creates a new instance of ProgearUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProgearUpdater(t mockConstructorTestingTNewProgearUpdater) *ProgearUpdater {
	mock := &ProgearUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
