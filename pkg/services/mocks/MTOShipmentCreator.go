// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	models "github.com/transcom/mymove/pkg/models"
)

// MTOShipmentCreator is an autogenerated mock type for the MTOShipmentCreator type
type MTOShipmentCreator struct {
	mock.Mock
}

// CreateMTOShipment provides a mock function with given fields: appCtx, MTOShipment, MTOServiceItems
func (_m *MTOShipmentCreator) CreateMTOShipment(appCtx appcontext.AppContext, MTOShipment *models.MTOShipment, MTOServiceItems models.MTOServiceItems) (*models.MTOShipment, error) {
	ret := _m.Called(appCtx, MTOShipment, MTOServiceItems)

	var r0 *models.MTOShipment
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *models.MTOShipment, models.MTOServiceItems) *models.MTOShipment); ok {
		r0 = rf(appCtx, MTOShipment, MTOServiceItems)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.MTOShipment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appcontext.AppContext, *models.MTOShipment, models.MTOServiceItems) error); ok {
		r1 = rf(appCtx, MTOShipment, MTOServiceItems)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMTOShipmentCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMTOShipmentCreator creates a new instance of MTOShipmentCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMTOShipmentCreator(t mockConstructorTestingTNewMTOShipmentCreator) *MTOShipmentCreator {
	mock := &MTOShipmentCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
