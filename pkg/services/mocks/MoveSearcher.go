// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	models "github.com/transcom/mymove/pkg/models"

	testing "testing"
)

// MoveSearcher is an autogenerated mock type for the MoveSearcher type
type MoveSearcher struct {
	mock.Mock
}

// SearchMoves provides a mock function with given fields: appCtx, locator, dodID
func (_m *MoveSearcher) SearchMoves(appCtx appcontext.AppContext, locator *string, dodID *string) (models.Moves, error) {
	ret := _m.Called(appCtx, locator, dodID)

	var r0 models.Moves
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *string, *string) models.Moves); ok {
		r0 = rf(appCtx, locator, dodID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(models.Moves)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appcontext.AppContext, *string, *string) error); ok {
		r1 = rf(appCtx, locator, dodID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMoveSearcher creates a new instance of MoveSearcher. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMoveSearcher(t testing.TB) *MoveSearcher {
	mock := &MoveSearcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
