// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	models "github.com/transcom/mymove/pkg/models"

	uuid "github.com/gofrs/uuid"
)

// PPMShipmentSummaryWorksheetCreator is an autogenerated mock type for the PPMShipmentSummaryWorksheetCreator type
type PPMShipmentSummaryWorksheetCreator struct {
	mock.Mock
}

// FetchDataShipmentSummaryWorksheetFormData provides a mock function with given fields: appCtx, mtoShipmentID
func (_m *PPMShipmentSummaryWorksheetCreator) FetchDataShipmentSummaryWorksheetFormData(appCtx appcontext.AppContext, mtoShipmentID uuid.UUID) (models.ShipmentSummaryFormData, error) {
	ret := _m.Called(appCtx, mtoShipmentID)

	var r0 models.ShipmentSummaryFormData
	var r1 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, uuid.UUID) (models.ShipmentSummaryFormData, error)); ok {
		return rf(appCtx, mtoShipmentID)
	}
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, uuid.UUID) models.ShipmentSummaryFormData); ok {
		r0 = rf(appCtx, mtoShipmentID)
	} else {
		r0 = ret.Get(0).(models.ShipmentSummaryFormData)
	}

	if rf, ok := ret.Get(1).(func(appcontext.AppContext, uuid.UUID) error); ok {
		r1 = rf(appCtx, mtoShipmentID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FormatValuesShipmentSummaryWorksheet provides a mock function with given fields: shipmentSummaryFormData
func (_m *PPMShipmentSummaryWorksheetCreator) FormatValuesShipmentSummaryWorksheet(shipmentSummaryFormData models.ShipmentSummaryFormData) (models.ShipmentSummaryWorksheetPage1Values, models.ShipmentSummaryWorksheetPage2Values, models.ShipmentSummaryWorksheetPage3Values, error) {
	ret := _m.Called(shipmentSummaryFormData)

	var r0 models.ShipmentSummaryWorksheetPage1Values
	var r1 models.ShipmentSummaryWorksheetPage2Values
	var r2 models.ShipmentSummaryWorksheetPage3Values
	var r3 error
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData) (models.ShipmentSummaryWorksheetPage1Values, models.ShipmentSummaryWorksheetPage2Values, models.ShipmentSummaryWorksheetPage3Values, error)); ok {
		return rf(shipmentSummaryFormData)
	}
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData) models.ShipmentSummaryWorksheetPage1Values); ok {
		r0 = rf(shipmentSummaryFormData)
	} else {
		r0 = ret.Get(0).(models.ShipmentSummaryWorksheetPage1Values)
	}

	if rf, ok := ret.Get(1).(func(models.ShipmentSummaryFormData) models.ShipmentSummaryWorksheetPage2Values); ok {
		r1 = rf(shipmentSummaryFormData)
	} else {
		r1 = ret.Get(1).(models.ShipmentSummaryWorksheetPage2Values)
	}

	if rf, ok := ret.Get(2).(func(models.ShipmentSummaryFormData) models.ShipmentSummaryWorksheetPage3Values); ok {
		r2 = rf(shipmentSummaryFormData)
	} else {
		r2 = ret.Get(2).(models.ShipmentSummaryWorksheetPage3Values)
	}

	if rf, ok := ret.Get(3).(func(models.ShipmentSummaryFormData) error); ok {
		r3 = rf(shipmentSummaryFormData)
	} else {
		r3 = ret.Error(3)
	}

	return r0, r1, r2, r3
}

type mockConstructorTestingTNewPPMShipmentSummaryWorksheetCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewPPMShipmentSummaryWorksheetCreator creates a new instance of PPMShipmentSummaryWorksheetCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPPMShipmentSummaryWorksheetCreator(t mockConstructorTestingTNewPPMShipmentSummaryWorksheetCreator) *PPMShipmentSummaryWorksheetCreator {
	mock := &PPMShipmentSummaryWorksheetCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
