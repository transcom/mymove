// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	models "github.com/transcom/mymove/pkg/models"
)

// PPMShipmentRouter is an autogenerated mock type for the PPMShipmentRouter type
type PPMShipmentRouter struct {
	mock.Mock
}

// SendToCustomer provides a mock function with given fields: appCtx, ppmShipment
func (_m *PPMShipmentRouter) SendToCustomer(appCtx appcontext.AppContext, ppmShipment *models.PPMShipment) error {
	ret := _m.Called(appCtx, ppmShipment)

	if len(ret) == 0 {
		panic("no return value specified for SendToCustomer")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *models.PPMShipment) error); ok {
		r0 = rf(appCtx, ppmShipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetToDraft provides a mock function with given fields: appCtx, ppmShipment
func (_m *PPMShipmentRouter) SetToDraft(appCtx appcontext.AppContext, ppmShipment *models.PPMShipment) error {
	ret := _m.Called(appCtx, ppmShipment)

	if len(ret) == 0 {
		panic("no return value specified for SetToDraft")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *models.PPMShipment) error); ok {
		r0 = rf(appCtx, ppmShipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Submit provides a mock function with given fields: appCtx, ppmShipment
func (_m *PPMShipmentRouter) Submit(appCtx appcontext.AppContext, ppmShipment *models.PPMShipment) error {
	ret := _m.Called(appCtx, ppmShipment)

	if len(ret) == 0 {
		panic("no return value specified for Submit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *models.PPMShipment) error); ok {
		r0 = rf(appCtx, ppmShipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubmitCloseOutDocumentation provides a mock function with given fields: appCtx, ppmShipment
func (_m *PPMShipmentRouter) SubmitCloseOutDocumentation(appCtx appcontext.AppContext, ppmShipment *models.PPMShipment) error {
	ret := _m.Called(appCtx, ppmShipment)

	if len(ret) == 0 {
		panic("no return value specified for SubmitCloseOutDocumentation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *models.PPMShipment) error); ok {
		r0 = rf(appCtx, ppmShipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubmitReviewedDocuments provides a mock function with given fields: appCtx, ppmShipment
func (_m *PPMShipmentRouter) SubmitReviewedDocuments(appCtx appcontext.AppContext, ppmShipment *models.PPMShipment) error {
	ret := _m.Called(appCtx, ppmShipment)

	if len(ret) == 0 {
		panic("no return value specified for SubmitReviewedDocuments")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *models.PPMShipment) error); ok {
		r0 = rf(appCtx, ppmShipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPPMShipmentRouter creates a new instance of PPMShipmentRouter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPPMShipmentRouter(t interface {
	mock.TestingT
	Cleanup(func())
}) *PPMShipmentRouter {
	mock := &PPMShipmentRouter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
