// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	appcontext "github.com/transcom/mymove/pkg/appcontext"
	auth "github.com/transcom/mymove/pkg/auth"

	mock "github.com/stretchr/testify/mock"

	models "github.com/transcom/mymove/pkg/models"

	route "github.com/transcom/mymove/pkg/route"

	services "github.com/transcom/mymove/pkg/services"

	uuid "github.com/gofrs/uuid"
)

// SSWPPMComputer is an autogenerated mock type for the SSWPPMComputer type
type SSWPPMComputer struct {
	mock.Mock
}

// ComputeObligations provides a mock function with given fields: _a0, _a1, _a2
func (_m *SSWPPMComputer) ComputeObligations(_a0 appcontext.AppContext, _a1 models.ShipmentSummaryFormData, _a2 route.Planner) (models.Obligations, error) {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for ComputeObligations")
	}

	var r0 models.Obligations
	var r1 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, models.ShipmentSummaryFormData, route.Planner) (models.Obligations, error)); ok {
		return rf(_a0, _a1, _a2)
	}
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, models.ShipmentSummaryFormData, route.Planner) models.Obligations); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(models.Obligations)
	}

	if rf, ok := ret.Get(1).(func(appcontext.AppContext, models.ShipmentSummaryFormData, route.Planner) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FetchDataShipmentSummaryWorksheetFormData provides a mock function with given fields: appCtx, _a1, ppmShipmentID
func (_m *SSWPPMComputer) FetchDataShipmentSummaryWorksheetFormData(appCtx appcontext.AppContext, _a1 *auth.Session, ppmShipmentID uuid.UUID) (*models.ShipmentSummaryFormData, error) {
	ret := _m.Called(appCtx, _a1, ppmShipmentID)

	if len(ret) == 0 {
		panic("no return value specified for FetchDataShipmentSummaryWorksheetFormData")
	}

	var r0 *models.ShipmentSummaryFormData
	var r1 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *auth.Session, uuid.UUID) (*models.ShipmentSummaryFormData, error)); ok {
		return rf(appCtx, _a1, ppmShipmentID)
	}
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, *auth.Session, uuid.UUID) *models.ShipmentSummaryFormData); ok {
		r0 = rf(appCtx, _a1, ppmShipmentID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ShipmentSummaryFormData)
		}
	}

	if rf, ok := ret.Get(1).(func(appcontext.AppContext, *auth.Session, uuid.UUID) error); ok {
		r1 = rf(appCtx, _a1, ppmShipmentID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FormatShipment provides a mock function with given fields: ppm, weightAllotment, isPaymentPacket
func (_m *SSWPPMComputer) FormatShipment(ppm models.PPMShipment, weightAllotment models.SSWMaxWeightEntitlement, isPaymentPacket bool) models.WorkSheetShipment {
	ret := _m.Called(ppm, weightAllotment, isPaymentPacket)

	if len(ret) == 0 {
		panic("no return value specified for FormatShipment")
	}

	var r0 models.WorkSheetShipment
	if rf, ok := ret.Get(0).(func(models.PPMShipment, models.SSWMaxWeightEntitlement, bool) models.WorkSheetShipment); ok {
		r0 = rf(ppm, weightAllotment, isPaymentPacket)
	} else {
		r0 = ret.Get(0).(models.WorkSheetShipment)
	}

	return r0
}

// FormatValuesShipmentSummaryWorksheet provides a mock function with given fields: shipmentSummaryFormData, isPaymentPacket
func (_m *SSWPPMComputer) FormatValuesShipmentSummaryWorksheet(shipmentSummaryFormData models.ShipmentSummaryFormData, isPaymentPacket bool) (services.Page1Values, services.Page2Values, services.Page3Values, error) {
	ret := _m.Called(shipmentSummaryFormData, isPaymentPacket)

	if len(ret) == 0 {
		panic("no return value specified for FormatValuesShipmentSummaryWorksheet")
	}

	var r0 services.Page1Values
	var r1 services.Page2Values
	var r2 services.Page3Values
	var r3 error
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) (services.Page1Values, services.Page2Values, services.Page3Values, error)); ok {
		return rf(shipmentSummaryFormData, isPaymentPacket)
	}
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) services.Page1Values); ok {
		r0 = rf(shipmentSummaryFormData, isPaymentPacket)
	} else {
		r0 = ret.Get(0).(services.Page1Values)
	}

	if rf, ok := ret.Get(1).(func(models.ShipmentSummaryFormData, bool) services.Page2Values); ok {
		r1 = rf(shipmentSummaryFormData, isPaymentPacket)
	} else {
		r1 = ret.Get(1).(services.Page2Values)
	}

	if rf, ok := ret.Get(2).(func(models.ShipmentSummaryFormData, bool) services.Page3Values); ok {
		r2 = rf(shipmentSummaryFormData, isPaymentPacket)
	} else {
		r2 = ret.Get(2).(services.Page3Values)
	}

	if rf, ok := ret.Get(3).(func(models.ShipmentSummaryFormData, bool) error); ok {
		r3 = rf(shipmentSummaryFormData, isPaymentPacket)
	} else {
		r3 = ret.Error(3)
	}

	return r0, r1, r2, r3
}

// FormatValuesShipmentSummaryWorksheetFormPage1 provides a mock function with given fields: data, isPaymentPacket
func (_m *SSWPPMComputer) FormatValuesShipmentSummaryWorksheetFormPage1(data models.ShipmentSummaryFormData, isPaymentPacket bool) (services.Page1Values, error) {
	ret := _m.Called(data, isPaymentPacket)

	if len(ret) == 0 {
		panic("no return value specified for FormatValuesShipmentSummaryWorksheetFormPage1")
	}

	var r0 services.Page1Values
	var r1 error
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) (services.Page1Values, error)); ok {
		return rf(data, isPaymentPacket)
	}
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) services.Page1Values); ok {
		r0 = rf(data, isPaymentPacket)
	} else {
		r0 = ret.Get(0).(services.Page1Values)
	}

	if rf, ok := ret.Get(1).(func(models.ShipmentSummaryFormData, bool) error); ok {
		r1 = rf(data, isPaymentPacket)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FormatValuesShipmentSummaryWorksheetFormPage2 provides a mock function with given fields: data, isPaymentPacket
func (_m *SSWPPMComputer) FormatValuesShipmentSummaryWorksheetFormPage2(data models.ShipmentSummaryFormData, isPaymentPacket bool) (services.Page2Values, error) {
	ret := _m.Called(data, isPaymentPacket)

	if len(ret) == 0 {
		panic("no return value specified for FormatValuesShipmentSummaryWorksheetFormPage2")
	}

	var r0 services.Page2Values
	var r1 error
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) (services.Page2Values, error)); ok {
		return rf(data, isPaymentPacket)
	}
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) services.Page2Values); ok {
		r0 = rf(data, isPaymentPacket)
	} else {
		r0 = ret.Get(0).(services.Page2Values)
	}

	if rf, ok := ret.Get(1).(func(models.ShipmentSummaryFormData, bool) error); ok {
		r1 = rf(data, isPaymentPacket)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FormatValuesShipmentSummaryWorksheetFormPage3 provides a mock function with given fields: data, isPaymentPacket
func (_m *SSWPPMComputer) FormatValuesShipmentSummaryWorksheetFormPage3(data models.ShipmentSummaryFormData, isPaymentPacket bool) (services.Page3Values, error) {
	ret := _m.Called(data, isPaymentPacket)

	if len(ret) == 0 {
		panic("no return value specified for FormatValuesShipmentSummaryWorksheetFormPage3")
	}

	var r0 services.Page3Values
	var r1 error
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) (services.Page3Values, error)); ok {
		return rf(data, isPaymentPacket)
	}
	if rf, ok := ret.Get(0).(func(models.ShipmentSummaryFormData, bool) services.Page3Values); ok {
		r0 = rf(data, isPaymentPacket)
	} else {
		r0 = ret.Get(0).(services.Page3Values)
	}

	if rf, ok := ret.Get(1).(func(models.ShipmentSummaryFormData, bool) error); ok {
		r1 = rf(data, isPaymentPacket)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewSSWPPMComputer creates a new instance of SSWPPMComputer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSSWPPMComputer(t interface {
	mock.TestingT
	Cleanup(func())
}) *SSWPPMComputer {
	mock := &SSWPPMComputer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
