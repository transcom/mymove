// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/transcom/mymove/pkg/models"

	rateengine "github.com/transcom/mymove/pkg/rateengine"

	services "github.com/transcom/mymove/pkg/services"

	uuid "github.com/gofrs/uuid"
)

// EstimateCalculator is an autogenerated mock type for the EstimateCalculator type
type EstimateCalculator struct {
	mock.Mock
}

// CalculateEstimates provides a mock function with given fields: ppm, moveID, logger
func (_m *EstimateCalculator) CalculateEstimates(ppm *models.PersonallyProcuredMove, moveID uuid.UUID, logger services.Logger) (int64, rateengine.CostComputation, error) {
	ret := _m.Called(ppm, moveID, logger)

	var r0 int64
	if rf, ok := ret.Get(0).(func(*models.PersonallyProcuredMove, uuid.UUID, services.Logger) int64); ok {
		r0 = rf(ppm, moveID, logger)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 rateengine.CostComputation
	if rf, ok := ret.Get(1).(func(*models.PersonallyProcuredMove, uuid.UUID, services.Logger) rateengine.CostComputation); ok {
		r1 = rf(ppm, moveID, logger)
	} else {
		r1 = ret.Get(1).(rateengine.CostComputation)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(*models.PersonallyProcuredMove, uuid.UUID, services.Logger) error); ok {
		r2 = rf(ppm, moveID, logger)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
