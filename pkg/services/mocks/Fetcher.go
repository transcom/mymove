// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"

	services "github.com/transcom/mymove/pkg/services"
)

// Fetcher is an autogenerated mock type for the Fetcher type
type Fetcher struct {
	mock.Mock
}

// FetchRecord provides a mock function with given fields: appCtx, model, filters
func (_m *Fetcher) FetchRecord(appCtx appcontext.AppContext, model interface{}, filters []services.QueryFilter) error {
	ret := _m.Called(appCtx, model, filters)

	var r0 error
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, interface{}, []services.QueryFilter) error); ok {
		r0 = rf(appCtx, model, filters)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFetcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewFetcher creates a new instance of Fetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFetcher(t mockConstructorTestingTNewFetcher) *Fetcher {
	mock := &Fetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
