// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/transcom/mymove/pkg/models"

	services "github.com/transcom/mymove/pkg/services"
)

// ShipmentBillableWeightCalculator is an autogenerated mock type for the ShipmentBillableWeightCalculator type
type ShipmentBillableWeightCalculator struct {
	mock.Mock
}

// CalculateShipmentBillableWeight provides a mock function with given fields: shipment
func (_m *ShipmentBillableWeightCalculator) CalculateShipmentBillableWeight(shipment *models.MTOShipment) services.BillableWeightInputs {
	ret := _m.Called(shipment)

	if len(ret) == 0 {
		panic("no return value specified for CalculateShipmentBillableWeight")
	}

	var r0 services.BillableWeightInputs
	if rf, ok := ret.Get(0).(func(*models.MTOShipment) services.BillableWeightInputs); ok {
		r0 = rf(shipment)
	} else {
		r0 = ret.Get(0).(services.BillableWeightInputs)
	}

	return r0
}

// NewShipmentBillableWeightCalculator creates a new instance of ShipmentBillableWeightCalculator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewShipmentBillableWeightCalculator(t interface {
	mock.TestingT
	Cleanup(func())
}) *ShipmentBillableWeightCalculator {
	mock := &ShipmentBillableWeightCalculator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
