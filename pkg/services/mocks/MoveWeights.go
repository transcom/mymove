// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/transcom/mymove/pkg/models"

	pop "github.com/gobuffalo/pop/v5"

	uuid "github.com/gofrs/uuid"

	validate "github.com/gobuffalo/validate/v3"
)

// MoveWeights is an autogenerated mock type for the MoveWeights type
type MoveWeights struct {
	mock.Mock
}

// CheckExcessWeight provides a mock function with given fields: db, moveID, updatedShipment
func (_m *MoveWeights) CheckExcessWeight(db *pop.Connection, moveID uuid.UUID, updatedShipment models.MTOShipment) (*models.Move, *validate.Errors, error) {
	ret := _m.Called(db, moveID, updatedShipment)

	var r0 *models.Move
	if rf, ok := ret.Get(0).(func(*pop.Connection, uuid.UUID, models.MTOShipment) *models.Move); ok {
		r0 = rf(db, moveID, updatedShipment)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Move)
		}
	}

	var r1 *validate.Errors
	if rf, ok := ret.Get(1).(func(*pop.Connection, uuid.UUID, models.MTOShipment) *validate.Errors); ok {
		r1 = rf(db, moveID, updatedShipment)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*validate.Errors)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(*pop.Connection, uuid.UUID, models.MTOShipment) error); ok {
		r2 = rf(db, moveID, updatedShipment)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
