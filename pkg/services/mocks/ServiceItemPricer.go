// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/transcom/mymove/pkg/models"

	pop "github.com/gobuffalo/pop/v5"

	services "github.com/transcom/mymove/pkg/services"

	unit "github.com/transcom/mymove/pkg/unit"
)

// ServiceItemPricer is an autogenerated mock type for the ServiceItemPricer type
type ServiceItemPricer struct {
	mock.Mock
}

// PriceServiceItem provides a mock function with given fields: item
func (_m *ServiceItemPricer) PriceServiceItem(item models.PaymentServiceItem) (unit.Cents, error) {
	ret := _m.Called(item)

	var r0 unit.Cents
	if rf, ok := ret.Get(0).(func(models.PaymentServiceItem) unit.Cents); ok {
		r0 = rf(item)
	} else {
		r0 = ret.Get(0).(unit.Cents)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.PaymentServiceItem) error); ok {
		r1 = rf(item)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UsingConnection provides a mock function with given fields: db
func (_m *ServiceItemPricer) UsingConnection(db *pop.Connection) services.ServiceItemPricer {
	ret := _m.Called(db)

	var r0 services.ServiceItemPricer
	if rf, ok := ret.Get(0).(func(*pop.Connection) services.ServiceItemPricer); ok {
		r0 = rf(db)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(services.ServiceItemPricer)
		}
	}

	return r0
}
