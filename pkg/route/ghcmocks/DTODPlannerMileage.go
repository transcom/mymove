// Code generated by mockery. DO NOT EDIT.

package ghcmocks

import (
	mock "github.com/stretchr/testify/mock"
	appcontext "github.com/transcom/mymove/pkg/appcontext"
)

// DTODPlannerMileage is an autogenerated mock type for the DTODPlannerMileage type
type DTODPlannerMileage struct {
	mock.Mock
}

// DTODZip5Distance provides a mock function with given fields: appCtx, pickup, destination
func (_m *DTODPlannerMileage) DTODZip5Distance(appCtx appcontext.AppContext, pickup string, destination string) (int, error) {
	ret := _m.Called(appCtx, pickup, destination)

	var r0 int
	if rf, ok := ret.Get(0).(func(appcontext.AppContext, string, string) int); ok {
		r0 = rf(appCtx, pickup, destination)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appcontext.AppContext, string, string) error); ok {
		r1 = rf(appCtx, pickup, destination)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewDTODPlannerMileage interface {
	mock.TestingT
	Cleanup(func())
}

// NewDTODPlannerMileage creates a new instance of DTODPlannerMileage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDTODPlannerMileage(t mockConstructorTestingTNewDTODPlannerMileage) *DTODPlannerMileage {
	mock := &DTODPlannerMileage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
