// Code generated by go-swagger; DO NOT EDIT.

package primemessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreatePaymentRequest create payment request
//
// swagger:model CreatePaymentRequest
type CreatePaymentRequest struct {

	// is final
	IsFinal *bool `json:"isFinal,omitempty"`

	// move task order ID
	// Required: true
	// Format: uuid
	MoveTaskOrderID *strfmt.UUID `json:"moveTaskOrderID"`

	// Email or id of a contact person for this update.
	PointOfContact string `json:"pointOfContact,omitempty"`

	// service items
	// Required: true
	// Min Items: 1
	ServiceItems []*ServiceItem `json:"serviceItems"`
}

// Validate validates this create payment request
func (m *CreatePaymentRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMoveTaskOrderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreatePaymentRequest) validateMoveTaskOrderID(formats strfmt.Registry) error {

	if err := validate.Required("moveTaskOrderID", "body", m.MoveTaskOrderID); err != nil {
		return err
	}

	if err := validate.FormatOf("moveTaskOrderID", "body", "uuid", m.MoveTaskOrderID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CreatePaymentRequest) validateServiceItems(formats strfmt.Registry) error {

	if err := validate.Required("serviceItems", "body", m.ServiceItems); err != nil {
		return err
	}

	iServiceItemsSize := int64(len(m.ServiceItems))

	if err := validate.MinItems("serviceItems", "body", iServiceItemsSize, 1); err != nil {
		return err
	}

	for i := 0; i < len(m.ServiceItems); i++ {
		if swag.IsZero(m.ServiceItems[i]) { // not required
			continue
		}

		if m.ServiceItems[i] != nil {
			if err := m.ServiceItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("serviceItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreatePaymentRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreatePaymentRequest) UnmarshalBinary(b []byte) error {
	var res CreatePaymentRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
