// Code generated by go-swagger; DO NOT EDIT.

package ordersoperations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ordersmessages"
)

// GetOrdersByIssuerAndOrdersNumOKCode is the HTTP code returned for type GetOrdersByIssuerAndOrdersNumOK
const GetOrdersByIssuerAndOrdersNumOKCode int = 200

/*
GetOrdersByIssuerAndOrdersNumOK Successful

swagger:response getOrdersByIssuerAndOrdersNumOK
*/
type GetOrdersByIssuerAndOrdersNumOK struct {

	/*
	  In: Body
	*/
	Payload *ordersmessages.Orders `json:"body,omitempty"`
}

// NewGetOrdersByIssuerAndOrdersNumOK creates GetOrdersByIssuerAndOrdersNumOK with default headers values
func NewGetOrdersByIssuerAndOrdersNumOK() *GetOrdersByIssuerAndOrdersNumOK {

	return &GetOrdersByIssuerAndOrdersNumOK{}
}

// WithPayload adds the payload to the get orders by issuer and orders num o k response
func (o *GetOrdersByIssuerAndOrdersNumOK) WithPayload(payload *ordersmessages.Orders) *GetOrdersByIssuerAndOrdersNumOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get orders by issuer and orders num o k response
func (o *GetOrdersByIssuerAndOrdersNumOK) SetPayload(payload *ordersmessages.Orders) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrdersByIssuerAndOrdersNumOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrdersByIssuerAndOrdersNumBadRequestCode is the HTTP code returned for type GetOrdersByIssuerAndOrdersNumBadRequest
const GetOrdersByIssuerAndOrdersNumBadRequestCode int = 400

/*
GetOrdersByIssuerAndOrdersNumBadRequest Invalid

swagger:response getOrdersByIssuerAndOrdersNumBadRequest
*/
type GetOrdersByIssuerAndOrdersNumBadRequest struct {
}

// NewGetOrdersByIssuerAndOrdersNumBadRequest creates GetOrdersByIssuerAndOrdersNumBadRequest with default headers values
func NewGetOrdersByIssuerAndOrdersNumBadRequest() *GetOrdersByIssuerAndOrdersNumBadRequest {

	return &GetOrdersByIssuerAndOrdersNumBadRequest{}
}

// WriteResponse to the client
func (o *GetOrdersByIssuerAndOrdersNumBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetOrdersByIssuerAndOrdersNumUnauthorizedCode is the HTTP code returned for type GetOrdersByIssuerAndOrdersNumUnauthorized
const GetOrdersByIssuerAndOrdersNumUnauthorizedCode int = 401

/*
GetOrdersByIssuerAndOrdersNumUnauthorized must be authenticated to use this endpoint

swagger:response getOrdersByIssuerAndOrdersNumUnauthorized
*/
type GetOrdersByIssuerAndOrdersNumUnauthorized struct {
}

// NewGetOrdersByIssuerAndOrdersNumUnauthorized creates GetOrdersByIssuerAndOrdersNumUnauthorized with default headers values
func NewGetOrdersByIssuerAndOrdersNumUnauthorized() *GetOrdersByIssuerAndOrdersNumUnauthorized {

	return &GetOrdersByIssuerAndOrdersNumUnauthorized{}
}

// WriteResponse to the client
func (o *GetOrdersByIssuerAndOrdersNumUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetOrdersByIssuerAndOrdersNumForbiddenCode is the HTTP code returned for type GetOrdersByIssuerAndOrdersNumForbidden
const GetOrdersByIssuerAndOrdersNumForbiddenCode int = 403

/*
GetOrdersByIssuerAndOrdersNumForbidden Forbidden

swagger:response getOrdersByIssuerAndOrdersNumForbidden
*/
type GetOrdersByIssuerAndOrdersNumForbidden struct {
}

// NewGetOrdersByIssuerAndOrdersNumForbidden creates GetOrdersByIssuerAndOrdersNumForbidden with default headers values
func NewGetOrdersByIssuerAndOrdersNumForbidden() *GetOrdersByIssuerAndOrdersNumForbidden {

	return &GetOrdersByIssuerAndOrdersNumForbidden{}
}

// WriteResponse to the client
func (o *GetOrdersByIssuerAndOrdersNumForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetOrdersByIssuerAndOrdersNumNotFoundCode is the HTTP code returned for type GetOrdersByIssuerAndOrdersNumNotFound
const GetOrdersByIssuerAndOrdersNumNotFoundCode int = 404

/*
GetOrdersByIssuerAndOrdersNumNotFound Orders not found

swagger:response getOrdersByIssuerAndOrdersNumNotFound
*/
type GetOrdersByIssuerAndOrdersNumNotFound struct {
}

// NewGetOrdersByIssuerAndOrdersNumNotFound creates GetOrdersByIssuerAndOrdersNumNotFound with default headers values
func NewGetOrdersByIssuerAndOrdersNumNotFound() *GetOrdersByIssuerAndOrdersNumNotFound {

	return &GetOrdersByIssuerAndOrdersNumNotFound{}
}

// WriteResponse to the client
func (o *GetOrdersByIssuerAndOrdersNumNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetOrdersByIssuerAndOrdersNumInternalServerErrorCode is the HTTP code returned for type GetOrdersByIssuerAndOrdersNumInternalServerError
const GetOrdersByIssuerAndOrdersNumInternalServerErrorCode int = 500

/*
GetOrdersByIssuerAndOrdersNumInternalServerError Server error

swagger:response getOrdersByIssuerAndOrdersNumInternalServerError
*/
type GetOrdersByIssuerAndOrdersNumInternalServerError struct {
}

// NewGetOrdersByIssuerAndOrdersNumInternalServerError creates GetOrdersByIssuerAndOrdersNumInternalServerError with default headers values
func NewGetOrdersByIssuerAndOrdersNumInternalServerError() *GetOrdersByIssuerAndOrdersNumInternalServerError {

	return &GetOrdersByIssuerAndOrdersNumInternalServerError{}
}

// WriteResponse to the client
func (o *GetOrdersByIssuerAndOrdersNumInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
