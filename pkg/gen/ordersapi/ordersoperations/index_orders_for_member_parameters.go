// Code generated by go-swagger; DO NOT EDIT.

package ordersoperations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// NewIndexOrdersForMemberParams creates a new IndexOrdersForMemberParams object
// no default values defined in spec.
func NewIndexOrdersForMemberParams() IndexOrdersForMemberParams {

	return IndexOrdersForMemberParams{}
}

// IndexOrdersForMemberParams contains all the bound params for the index orders for member operation
// typically these are obtained from a http.Request
//
// swagger:parameters indexOrdersForMember
type IndexOrdersForMemberParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*EDIPI of the member to retrieve Orders
	  Required: true
	  Pattern: ^\d{10}$
	  In: path
	*/
	Edipi string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewIndexOrdersForMemberParams() beforehand.
func (o *IndexOrdersForMemberParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rEdipi, rhkEdipi, _ := route.Params.GetOK("edipi")
	if err := o.bindEdipi(rEdipi, rhkEdipi, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindEdipi binds and validates parameter Edipi from path.
func (o *IndexOrdersForMemberParams) bindEdipi(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.Edipi = raw

	if err := o.validateEdipi(formats); err != nil {
		return err
	}

	return nil
}

// validateEdipi carries on validations for parameter Edipi
func (o *IndexOrdersForMemberParams) validateEdipi(formats strfmt.Registry) error {

	if err := validate.Pattern("edipi", "path", o.Edipi, `^\d{10}$`); err != nil {
		return err
	}

	return nil
}
