// Code generated by go-swagger; DO NOT EDIT.

package ordersapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "The Orders API is a RESTful API that enables to submit, amend, and\ncancel orders for MilMove.\n\nAll endpoints are located under ` + "`" + `/orders/v1` + "`" + `.\n",
    "title": "MilMove Orders API",
    "license": {
      "name": "MIT",
      "url": "https://github.com/transcom/mymove/blob/main/LICENSE.md"
    },
    "version": "1.0.0"
  },
  "basePath": "/orders/v1",
  "paths": {
    "/edipis/{edipi}/orders": {
      "get": {
        "description": "Returns all Orders for the specified service member. This endpoint will only return Orders cut by issuers to which the user has read permission.\n",
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve orders for a particular member",
        "operationId": "indexOrdersForMember",
        "parameters": [
          {
            "pattern": "^\\d{10}$",
            "type": "string",
            "description": "EDIPI of the member to retrieve Orders",
            "name": "edipi",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Orders"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/issuers/{issuer}/orders/{ordersNum}": {
      "get": {
        "description": "Return Orders with the provided issuer and orders number.\n# Errors\nUsers of this endpoint must have permission to read Orders for the specified issuer. Otherwise, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nIf there are no Orders with the specified orders number from the specified issuer, then this endpoint will return ` + "`" + `404 Not Found` + "`" + `.",
        "summary": "Retrieve orders by issuer and orders number",
        "operationId": "getOrdersByIssuerAndOrdersNum",
        "parameters": [
          {
            "enum": [
              "army",
              "navy",
              "air-force",
              "marine-corps",
              "coast-guard"
            ],
            "type": "string",
            "description": "Organization that issued the Orders",
            "name": "issuer",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Orders number, corresponding to the ORDERS number (Army), the CT SDN (Navy, Marines), the SPECIAL ORDER NO (Air Force), the Travel Order No (Coast Guard), or the Travel Authorization Number (Civilian).",
            "name": "ordersNum",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Orders not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "description": "Creates a Revision of a set of orders.\n# Identifying the service member\nThe Orders Gateway associates Orders and their Revisions with the member's EDIPI. For users of this API who do not have the member's EDIPI but do have the member's SSN, they can submit the SSN instead. The Orders Gateway will then fetch the member's EDIPI using DMDC's Identity Web Services. Calls using the 9-digit SSN instead of the 10-digit EDIPI will take longer to respond due to the additional overhead.\n# Submitting Orders Revisions\n## New Orders\nThe supplied Revision is considered part of a new set of Orders if the combination of ` + "`" + `ordersNum` + "`" + ` and ` + "`" + `issuer` + "`" + ` has never been seen before. A new UUID is created and associated with the Orders, which is returned along with the supplied Revision.\n## Amended Orders\nIf the system already has Orders with the supplied combination of ` + "`" + `ordersNum` + "`" + ` and ` + "`" + `issuer` + "`" + `, then the supplied Revision is considered to be an amendment of those Orders. The Revision with the highest ` + "`" + `seqNum` + "`" + ` is considered the most recent amendment, which is not necessarily the Revision with the latest ` + "`" + `dateIssued` + "`" + ` or the Revision submitted last.\nIf you stored the UUID of the Orders from a previous call to this API, you have the option of using the ` + "`" + `POST /orders/{uuid}` + "`" + ` API instead to supply a new Revision.\n## Canceled, Rescinded, or Revoked Orders\nTo cancel, rescind, or revoke Orders, POST a new Revision with the status set to \"canceled\".\n# Errors\nUsers of this endpoint must have permission to write Orders for the specified ` + "`" + `issuer` + "`" + `. Otherwise, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nIf SSN instead of EDIPI is provided to identify the member, and DMDC's Identity Web Services does not return an EDIPI for that SSN, then this endpoint will return ` + "`" + `404 Not Found` + "`" + `.\nIf amending existing Orders, the supplied seqNum must be unique when compared to existing Revisions in those Orders. If it has already been used, this endpoint will return ` + "`" + `409 Conflict` + "`" + `.\nIf amending existing Orders, the supplied memberId, as an EDIPI, or as an EDIPI retrieved from DMDC by SSN, must match the EDIPI in the existing Orders. If the EDIPIs do not match, this endpoint will return ` + "`" + `409 Conflict` + "`" + `.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Submit a new set of orders, make an amendment to an existing set of orders, or cancel a set of orders.",
        "operationId": "postRevision",
        "parameters": [
          {
            "type": "string",
            "description": "Orders number, corresponding to the ORDERS number (Army), the CT SDN (Navy, Marines), the SPECIAL ORDER NO (Air Force), the Travel Order No (Coast Guard), or the Travel Authorization Number (Civilian).",
            "name": "ordersNum",
            "in": "query",
            "required": true
          },
          {
            "pattern": "^\\d{9}\\d?$",
            "type": "string",
            "description": "Electronic Data Interchange Personal Identifier of the member (preferred). If the member's EDIPI is unknown, then the Social Security Number may be provided instead.\n",
            "name": "memberId",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "army",
              "navy",
              "air-force",
              "marine-corps",
              "coast-guard"
            ],
            "type": "string",
            "description": "Organization that issued the Orders.",
            "name": "issuer",
            "in": "query",
            "required": true
          },
          {
            "name": "revision",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/orders/{uuid}": {
      "get": {
        "description": "Gets Orders with the supplied UUID.\n## Errors\nUsers of this endpoint must have permission to read Orders for the ` + "`" + `issuer` + "`" + ` associated with the Orders. If not, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nThe UUID must match an existing set of Orders. Otherwise, this endpoint will return ` + "`" + `404 Not Found` + "`" + `.",
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve a set of Orders and all of its Revisions by UUID",
        "operationId": "getOrders",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the orders to return",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Orders not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "description": "Creates a Revision of a set of orders. The Orders to be amended or canceled must already exist with the supplied UUID.\n## Amendment requirements\nThe ` + "`" + `seqNum` + "`" + ` in the supplied Revision must be unique among all Revisions in these Orders. Other than ` + "`" + `seqNum` + "`" + `, nothing else is required to change in the Revision compared to any other Revision in these Orders.\n# Errors\nUsers of this endpoint must have permission to write Orders for the ` + "`" + `issuer` + "`" + ` associated with the Orders that were originally POST'd to the ` + "`" + `orders` + "`" + ` endpoint. If not, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nThe UUID must match an existing set of Orders. Otherwise, this endpoint will return ` + "`" + `404 Not Found` + "`" + `.\nIf amending existing Orders, the supplied seqNum must be unique. If it has already been used, this endpoint will return ` + "`" + `409 Conflict` + "`" + `.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Make an amendment to or cancel an existing set of orders by UUID",
        "operationId": "postRevisionToOrders",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the orders to amend",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "revision",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Orders not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Accounting": {
      "type": "object",
      "properties": {
        "loa": {
          "description": "The full Line Of Accounting. LOA is required if there is no TAC.",
          "type": "string",
          "x-nullable": true
        },
        "sdn": {
          "description": "Standard Document Number. The SDN is one way to connect money that was obligated for a specific member's move at order issuance time to expenses incurred by that member's move at invoicing time. This obviously only works if the SDN is unique to the member and to the specific set of orders.\n## Marine Corps\nThe last four characters of the SDN should be same as the TAC.\nAt the time of this writing, the Marines have separate SDNs for each category of moving expenses (HHG, POV Storage, NTS, etc.), but only one of them is unique to a specific Marine - the Commercial Travel (CT) SDN. The CT SDN **is** the Orders number for the Marines. In the future, the Marines would like to include the first 15 characters of the CT SDN in any transactions with the Third Party Payment System, and for the TPPS to include this unique value with every expense in the resulting report.\n",
          "type": "string",
          "x-nullable": true
        },
        "tac": {
          "description": "Transportation Account Code - a reference to a line of accounting in the Transportation Global Edit Tables (TGET). This is the preferred way to charge a move expense to the correct pool of money.\n\u003e TGET is a centralized repository that contains established transportation LOAs formatted in accordance with Service/Agency LOA requirements and associated TACs.\n## Army\nArmy orders do not include a TAC. Instead, they provide an MDC.\n\u003e A movement designator code (MDC) provides the office of the Deputy Chief of Staff for Personnel with a record of the type of PCS travel performed by Active Army personnel. This record is used to centrally manage PCS funds.\nThe correct TAC can be located by looking up the MDC, move type, and Fiscal Year (corresponding to the orders issuance date) in the CROSSWALK Excel spreadsheet.\n## Navy\nNavy orders include TACs for PCS expenses (if moving expenses are authorized) and (sometimes) for NTS expenses. If present, the NTS TAC will have an underscore in the last column, which would ordinarily be populated with the last digit of the current FY. The Navy always wants to use the current Fiscal Year's TAC to pay NTS invoices, which can appear years after the Orders are cut. In other words, when it comes time to pay an NTS invoice, the underscore in the NTS TAC is replaced with the last digit of the current FY, and then that reconstructed TAC is used to look up the correct LOA in TGET.\n",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Affiliation": {
      "description": "Military branch of service",
      "type": "string",
      "title": "Branch of service",
      "enum": [
        "ARMY",
        "NAVY",
        "MARINES",
        "AIR_FORCE",
        "COAST_GUARD",
        "SPACE_FORCE",
        "NAVY_AND_MARINES",
        "AIR_AND_SPACE_FORCE",
        "OTHER"
      ],
      "x-display-value": {
        "AIR_FORCE": "Air Force",
        "ARMY": "Army",
        "COAST_GUARD": "Coast Guard",
        "MARINES": "Marine Corps",
        "NAVY": "Navy",
        "OTHER": "OTHER",
        "SPACE_FORCE": "Space Force"
      },
      "x-nullable": true
    },
    "Issuer": {
      "description": "Organization that issues orders. If more organizations, especially civilian ones, become clients of this API in the future, this enumeration may need to be expanded.",
      "type": "string",
      "enum": [
        "army",
        "navy",
        "air-force",
        "marine-corps",
        "coast-guard"
      ]
    },
    "Member": {
      "type": "object",
      "required": [
        "givenName",
        "familyName",
        "affiliation",
        "rank"
      ],
      "properties": {
        "affiliation": {
          "$ref": "#/definitions/Affiliation"
        },
        "familyName": {
          "description": "In languages that use Western order, like English, this is the last name.",
          "type": "string",
          "x-nullable": false
        },
        "givenName": {
          "description": "In languages that use Western order, like English, this is the first name.",
          "type": "string",
          "x-nullable": false
        },
        "middleName": {
          "description": "Middle name or middle initial",
          "type": "string",
          "x-nullable": true
        },
        "rank": {
          "$ref": "#/definitions/Rank"
        },
        "suffix": {
          "description": "Jr., Sr., III, etc.",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "description": "If supplied, this is the preferred form of address or preferred human-readable title. This is especially useful when a rank has multiple possible titles. For example, in the Army, an E-4 can be either a Specialist or a Corporal. In the Navy, there are dozens of possible job titles and ratings for enlisted sailors. In the Marine Corps, an E-8 can be either a Master Sergeant or a First Sergeant, and they do care about the distinction.\n\nIf omitted, my.move.mil will show the member the default name for the provided rank and affiliation.\n",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Orders": {
      "type": "object",
      "required": [
        "ordersNum",
        "edipi",
        "issuer",
        "revisions"
      ],
      "properties": {
        "edipi": {
          "description": "Electronic Data Interchange Personal Identifier, AKA the 10 digit DoD ID Number of the member.",
          "type": "string",
          "pattern": "^\\d{10}$",
          "x-nullable": false
        },
        "issuer": {
          "$ref": "#/definitions/Issuer"
        },
        "ordersNum": {
          "description": "Orders number. Supposed to be unique, but in practice uniqueness is not guaranteed for all branches of service.\n# Army\nTypically found in the upper-left hand corner of printed orders. For example, \"030-00362\". At this time, there is no common format for Orders numbers between Army installations.\n# Navy\nCorresponds to the CT (Commercial Travel) SDN. On printed orders, this is found on the SDN line in the ` + "`" + `------- ACCOUNTING DATA -------` + "`" + ` section in the ` + "`" + `PCS ACCOUNTING DATA` + "`" + ` paragraph. For example, \"N0001234ABC5XYZ\".\nThe BUPERS Orders number is not suitable, because it includes the sailor's full SSN, and the included four digit date code could repeat for a sailor if he or she gets orders exactly 10 years apart.\nNo-cost moves do not have a CT SDN, because they involve no travel. Without a CT SDN, USN Orders have nothing to use for the Orders number. Such Orders won't authorize any PCS expenses either, so they do not need to be submitted to this API.\n# Marine Corps\nCorresponds to the CT (Commercial Travel) SDN. On Web Orders, the CT SDN is found in the table at the bottom, in the last column of the row that begins with \"Travel\". For example, \"M7000213CTB28DZ\".\nNo-cost moves do not have a CT SDN, because they involve no travel. Without a CT SDN, USMC Orders have nothing to use for the Orders number. Such Orders won't authorize any PCS expenses either, so they do not need to be submitted to this API.\n# Air Force\nCorresponds to the SPECIAL ORDER NO, found in box 27 on AF Form 899. For example, \"AJ-063322\".\n# Coast Guard\nCorresponds to the Travel Order No. For example, \"1214G85PRAAGK000\".\n# Civilian\nCorresponds to the Travel Authorization Number. For example, \"PS8D000025\".\n",
          "type": "string",
          "x-nullable": false,
          "example": "M7000213CTB28DZ"
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Revision"
          }
        },
        "uuid": {
          "description": "Universally Unique IDentifier. Generated internally.",
          "type": "string",
          "format": "uuid",
          "example": "80200fa9-4ee2-49c5-b4fd-88b3ef4bd5eb"
        }
      }
    },
    "OrdersType": {
      "description": "The common types fit into the acronym ASTRO-U.\n  * **A**ccession - Joining the military\n  * **S**eparation / Retirement - Leaving the military\n  * **T**raining\n  * **R**otational\n  * **O**perational\n  * **U**nit Move - When an entire unit is reassigned to another installation, often as a deployment\n\nAs of this writing, none of the branches of service distinguish between\nseparation and retirement Orders in their systems, even though the NTS\nentitlement lasts longer for retirement.\n\nConsequences of this field include\n  * NTS entitlements are different between Orders types.\n  * Deadlines to create a shipment associated with Orders differs by Orders type.\n  * Accession, separation, and retirement moves currently require the\n    member to go through in-person counseling at the TMO / PPPO.\n",
      "type": "string",
      "enum": [
        "accession",
        "between-duty-stations",
        "brac",
        "cot",
        "emergency-evac",
        "ipcot",
        "low-cost-travel",
        "operational",
        "oteip",
        "rotational",
        "separation",
        "special-purpose",
        "training",
        "unit-move"
      ],
      "x-display-value": {
        "accession": "Accession",
        "between-duty-stations": "Between Duty Stations",
        "brac": "BRAC (Base Realignment And Closure)",
        "cot": "COT (Consecutive Overseas Travel)",
        "emergency-evac": "Emergency Non-Member Evacuation",
        "ipcot": "IPCOT (In-Place Consecutive Overseas Travel)",
        "low-cost-travel": "Low Cost Travel",
        "operational": "Operational",
        "oteip": "OTEIP (Overseas Tour Extension Incentive Program)",
        "rotational": "Rotational",
        "separation": "Separation / Retirement",
        "special-purpose": "Special Purpose Reimbursable",
        "training": "Training",
        "unit-move": "Unit Move"
      }
    },
    "Rank": {
      "description": "DoD paygrade or rank of the service member. Some of these ranks will have identical entitlements.",
      "type": "string",
      "enum": [
        "aviation-cadet",
        "cadet",
        "civilian",
        "e-1",
        "e-2",
        "e-3",
        "e-4",
        "e-5",
        "e-6",
        "e-7",
        "e-8",
        "e-9",
        "E-9-SPECIAL-SENIOR-ENLISTED",
        "midshipman",
        "o-1-ACADEMY-GRADUATE",
        "o-2",
        "o-3",
        "o-4",
        "o-5",
        "o-6",
        "o-7",
        "o-8",
        "o-9",
        "o-10",
        "w-1",
        "w-2",
        "w-3",
        "w-4",
        "w-5"
      ],
      "x-display-value": {
        "E-9-SPECIAL-SENIOR-ENLISTED": "E-9 (Special Senior Enlisted)",
        "aviation-cadet": "Aviation Cadet",
        "cadet": "Service Academy Cadet",
        "civilian": "Civilian",
        "e-1": "E-1",
        "e-2": "E-2",
        "e-3": "E-3",
        "e-4": "E-4",
        "e-5": "E-5",
        "e-6": "E-6",
        "e-7": "E-7",
        "e-8": "E-8",
        "e-9": "E-9",
        "midshipman": "Midshipman",
        "o-1-ACADEMY-GRADUATE": "O-1 or Service Academy Graduate",
        "o-10": "O-10",
        "o-2": "O-2",
        "o-3": "O-3",
        "o-4": "O-4",
        "o-5": "O-5",
        "o-6": "O-6",
        "o-7": "O-7",
        "o-8": "O-8",
        "o-9": "O-9",
        "w-1": "W-1",
        "w-2": "W-2",
        "w-3": "W-3",
        "w-4": "W-4",
        "w-5": "W-5"
      }
    },
    "Revision": {
      "type": "object",
      "required": [
        "seqNum",
        "member",
        "status",
        "ordersType",
        "hasDependents",
        "losingUnit",
        "gainingUnit"
      ],
      "properties": {
        "comments": {
          "description": "Free-form text that may or may not contain information relevant to moving.",
          "type": "string",
          "x-nullable": true
        },
        "dateIssued": {
          "description": "The date and time that these orders were cut. If omitted, the current date and time will be used.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "gainingUnit": {
          "$ref": "#/definitions/Unit"
        },
        "hasDependents": {
          "description": "True if the service member has any dependents (e.g., spouse, children, caring for an elderly parent, etc.), False otherwise.\nWhen the member has dependents, it usually raises their weight entitlement.\n",
          "type": "boolean"
        },
        "losingUnit": {
          "$ref": "#/definitions/Unit"
        },
        "member": {
          "$ref": "#/definitions/Member"
        },
        "noCostMove": {
          "description": "No Cost Move. If true, then these orders do not authorize any move expenses. If omitted or false, then these orders are a PCS and should authorize move expenses.\nOne scenario that leads to a no-cost move is a Permanent Change of Assignment without Permanent Change of Station. A PCA without PCS happens when a member is assigned to a new unit at the same duty station, or to a new duty station geographically close to the current duty station.\nIt is not unheard of for the initial revision of orders to have this set to false and then later to be amended to true and vice-versa.\n",
          "type": "boolean"
        },
        "ntsAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "ordersType": {
          "$ref": "#/definitions/OrdersType"
        },
        "pcsAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "povShipmentAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "povStorageAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "reportNoEarlierThan": {
          "description": "Earliest date that the service member is allowed to report for duty at the new duty station. If omitted, the member is allowed to report as early as desired.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "reportNoLaterThan": {
          "description": "Latest date that the service member is allowed to report for duty at the new duty station. Should be included for most Orders types, but can be missing for Separation / Retirement Orders.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "seqNum": {
          "description": "Sequence number. As Orders are amended, the Revision with the highest sequence number is considered the current, authoritative version of the Orders, even if its dateIssued is earlier.\n\nThe sequence number is NOT required to increase monotonically or sequentially; in other words, if a set of orders is modified twice, the sequence numbers could be 1, 5858300, and 30.\n",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "tdyEnRoute": {
          "description": "TDY (Temporary Duty Yonder) en-route. If omitted, assume false.",
          "type": "boolean"
        },
        "tourType": {
          "$ref": "#/definitions/TourType"
        },
        "ubAccounting": {
          "$ref": "#/definitions/Accounting"
        }
      }
    },
    "Status": {
      "description": "Indicates whether these Orders are authorized, RFO (Request For Orders), or canceled. An RFO is not sufficient to authorize moving expenses; only authorized Orders can do that.",
      "type": "string",
      "enum": [
        "authorized",
        "rfo",
        "canceled"
      ],
      "x-display-value": {
        "authorized": "Authorized",
        "canceled": "Canceled",
        "rfo": "Request For Orders (RFO)"
      }
    },
    "TourType": {
      "description": "Accompanied or Unaccompanied; i.e., are dependents authorized to accompany the service member on the move. For certain OCONUS destinations, the tour type affects the member's entitlement. Otherwise, it doesn't matter.\n\nIf omitted, assume accompanied.\n",
      "type": "string",
      "enum": [
        "accompanied",
        "unaccompanied",
        "unaccompanied-dependents-restricted"
      ],
      "x-display-value": {
        "accompanied": "Accompanied",
        "unaccompanied": "Unaccompanied",
        "unaccompanied-dependents-restricted": "Unaccompanied, Dependents Restricted"
      }
    },
    "Unit": {
      "description": "Information about either the losing or gaining Unit. If these are separation orders, the location information for the gaining Unit may be blank.",
      "type": "object",
      "properties": {
        "city": {
          "description": "May be FPO or APO for OCONUS commands.",
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "ISO 3166-1 alpha-2 country code. If blank, but city and locality or postalCode are not blank, assume US",
          "type": "string",
          "pattern": "^[A-Z]{2}$",
          "x-nullable": true
        },
        "locality": {
          "description": "State (US). OCONUS units may not have the equivalent information available.",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Human-readable name of the Unit.",
          "type": "string",
          "x-nullable": true
        },
        "postalCode": {
          "description": "In the USA, this is the ZIP Code.",
          "type": "string",
          "x-nullable": true
        },
        "uic": {
          "description": "Unit Identification Code - a six character alphanumeric code that uniquely identifies each United States Department of Defense entity. Used in Army, Air Force, and Navy orders.\nNote that the Navy has the habit of omitting the leading character, which is always \"N\" for them.\n",
          "type": "string",
          "pattern": "^[A-Z][A-Z0-9]{5}$",
          "x-nullable": true
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "The Orders API is a RESTful API that enables to submit, amend, and\ncancel orders for MilMove.\n\nAll endpoints are located under ` + "`" + `/orders/v1` + "`" + `.\n",
    "title": "MilMove Orders API",
    "license": {
      "name": "MIT",
      "url": "https://github.com/transcom/mymove/blob/main/LICENSE.md"
    },
    "version": "1.0.0"
  },
  "basePath": "/orders/v1",
  "paths": {
    "/edipis/{edipi}/orders": {
      "get": {
        "description": "Returns all Orders for the specified service member. This endpoint will only return Orders cut by issuers to which the user has read permission.\n",
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve orders for a particular member",
        "operationId": "indexOrdersForMember",
        "parameters": [
          {
            "pattern": "^\\d{10}$",
            "type": "string",
            "description": "EDIPI of the member to retrieve Orders",
            "name": "edipi",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Orders"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/issuers/{issuer}/orders/{ordersNum}": {
      "get": {
        "description": "Return Orders with the provided issuer and orders number.\n# Errors\nUsers of this endpoint must have permission to read Orders for the specified issuer. Otherwise, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nIf there are no Orders with the specified orders number from the specified issuer, then this endpoint will return ` + "`" + `404 Not Found` + "`" + `.",
        "summary": "Retrieve orders by issuer and orders number",
        "operationId": "getOrdersByIssuerAndOrdersNum",
        "parameters": [
          {
            "enum": [
              "army",
              "navy",
              "air-force",
              "marine-corps",
              "coast-guard"
            ],
            "type": "string",
            "description": "Organization that issued the Orders",
            "name": "issuer",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Orders number, corresponding to the ORDERS number (Army), the CT SDN (Navy, Marines), the SPECIAL ORDER NO (Air Force), the Travel Order No (Coast Guard), or the Travel Authorization Number (Civilian).",
            "name": "ordersNum",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Orders not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "description": "Creates a Revision of a set of orders.\n# Identifying the service member\nThe Orders Gateway associates Orders and their Revisions with the member's EDIPI. For users of this API who do not have the member's EDIPI but do have the member's SSN, they can submit the SSN instead. The Orders Gateway will then fetch the member's EDIPI using DMDC's Identity Web Services. Calls using the 9-digit SSN instead of the 10-digit EDIPI will take longer to respond due to the additional overhead.\n# Submitting Orders Revisions\n## New Orders\nThe supplied Revision is considered part of a new set of Orders if the combination of ` + "`" + `ordersNum` + "`" + ` and ` + "`" + `issuer` + "`" + ` has never been seen before. A new UUID is created and associated with the Orders, which is returned along with the supplied Revision.\n## Amended Orders\nIf the system already has Orders with the supplied combination of ` + "`" + `ordersNum` + "`" + ` and ` + "`" + `issuer` + "`" + `, then the supplied Revision is considered to be an amendment of those Orders. The Revision with the highest ` + "`" + `seqNum` + "`" + ` is considered the most recent amendment, which is not necessarily the Revision with the latest ` + "`" + `dateIssued` + "`" + ` or the Revision submitted last.\nIf you stored the UUID of the Orders from a previous call to this API, you have the option of using the ` + "`" + `POST /orders/{uuid}` + "`" + ` API instead to supply a new Revision.\n## Canceled, Rescinded, or Revoked Orders\nTo cancel, rescind, or revoke Orders, POST a new Revision with the status set to \"canceled\".\n# Errors\nUsers of this endpoint must have permission to write Orders for the specified ` + "`" + `issuer` + "`" + `. Otherwise, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nIf SSN instead of EDIPI is provided to identify the member, and DMDC's Identity Web Services does not return an EDIPI for that SSN, then this endpoint will return ` + "`" + `404 Not Found` + "`" + `.\nIf amending existing Orders, the supplied seqNum must be unique when compared to existing Revisions in those Orders. If it has already been used, this endpoint will return ` + "`" + `409 Conflict` + "`" + `.\nIf amending existing Orders, the supplied memberId, as an EDIPI, or as an EDIPI retrieved from DMDC by SSN, must match the EDIPI in the existing Orders. If the EDIPIs do not match, this endpoint will return ` + "`" + `409 Conflict` + "`" + `.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Submit a new set of orders, make an amendment to an existing set of orders, or cancel a set of orders.",
        "operationId": "postRevision",
        "parameters": [
          {
            "type": "string",
            "description": "Orders number, corresponding to the ORDERS number (Army), the CT SDN (Navy, Marines), the SPECIAL ORDER NO (Air Force), the Travel Order No (Coast Guard), or the Travel Authorization Number (Civilian).",
            "name": "ordersNum",
            "in": "query",
            "required": true
          },
          {
            "pattern": "^\\d{9}\\d?$",
            "type": "string",
            "description": "Electronic Data Interchange Personal Identifier of the member (preferred). If the member's EDIPI is unknown, then the Social Security Number may be provided instead.\n",
            "name": "memberId",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "army",
              "navy",
              "air-force",
              "marine-corps",
              "coast-guard"
            ],
            "type": "string",
            "description": "Organization that issued the Orders.",
            "name": "issuer",
            "in": "query",
            "required": true
          },
          {
            "name": "revision",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/orders/{uuid}": {
      "get": {
        "description": "Gets Orders with the supplied UUID.\n## Errors\nUsers of this endpoint must have permission to read Orders for the ` + "`" + `issuer` + "`" + ` associated with the Orders. If not, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nThe UUID must match an existing set of Orders. Otherwise, this endpoint will return ` + "`" + `404 Not Found` + "`" + `.",
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve a set of Orders and all of its Revisions by UUID",
        "operationId": "getOrders",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the orders to return",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Orders not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "description": "Creates a Revision of a set of orders. The Orders to be amended or canceled must already exist with the supplied UUID.\n## Amendment requirements\nThe ` + "`" + `seqNum` + "`" + ` in the supplied Revision must be unique among all Revisions in these Orders. Other than ` + "`" + `seqNum` + "`" + `, nothing else is required to change in the Revision compared to any other Revision in these Orders.\n# Errors\nUsers of this endpoint must have permission to write Orders for the ` + "`" + `issuer` + "`" + ` associated with the Orders that were originally POST'd to the ` + "`" + `orders` + "`" + ` endpoint. If not, this endpoint will return ` + "`" + `403 Forbidden` + "`" + `.\nThe UUID must match an existing set of Orders. Otherwise, this endpoint will return ` + "`" + `404 Not Found` + "`" + `.\nIf amending existing Orders, the supplied seqNum must be unique. If it has already been used, this endpoint will return ` + "`" + `409 Conflict` + "`" + `.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Make an amendment to or cancel an existing set of orders by UUID",
        "operationId": "postRevisionToOrders",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the orders to amend",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "revision",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Orders not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Accounting": {
      "type": "object",
      "properties": {
        "loa": {
          "description": "The full Line Of Accounting. LOA is required if there is no TAC.",
          "type": "string",
          "x-nullable": true
        },
        "sdn": {
          "description": "Standard Document Number. The SDN is one way to connect money that was obligated for a specific member's move at order issuance time to expenses incurred by that member's move at invoicing time. This obviously only works if the SDN is unique to the member and to the specific set of orders.\n## Marine Corps\nThe last four characters of the SDN should be same as the TAC.\nAt the time of this writing, the Marines have separate SDNs for each category of moving expenses (HHG, POV Storage, NTS, etc.), but only one of them is unique to a specific Marine - the Commercial Travel (CT) SDN. The CT SDN **is** the Orders number for the Marines. In the future, the Marines would like to include the first 15 characters of the CT SDN in any transactions with the Third Party Payment System, and for the TPPS to include this unique value with every expense in the resulting report.\n",
          "type": "string",
          "x-nullable": true
        },
        "tac": {
          "description": "Transportation Account Code - a reference to a line of accounting in the Transportation Global Edit Tables (TGET). This is the preferred way to charge a move expense to the correct pool of money.\n\u003e TGET is a centralized repository that contains established transportation LOAs formatted in accordance with Service/Agency LOA requirements and associated TACs.\n## Army\nArmy orders do not include a TAC. Instead, they provide an MDC.\n\u003e A movement designator code (MDC) provides the office of the Deputy Chief of Staff for Personnel with a record of the type of PCS travel performed by Active Army personnel. This record is used to centrally manage PCS funds.\nThe correct TAC can be located by looking up the MDC, move type, and Fiscal Year (corresponding to the orders issuance date) in the CROSSWALK Excel spreadsheet.\n## Navy\nNavy orders include TACs for PCS expenses (if moving expenses are authorized) and (sometimes) for NTS expenses. If present, the NTS TAC will have an underscore in the last column, which would ordinarily be populated with the last digit of the current FY. The Navy always wants to use the current Fiscal Year's TAC to pay NTS invoices, which can appear years after the Orders are cut. In other words, when it comes time to pay an NTS invoice, the underscore in the NTS TAC is replaced with the last digit of the current FY, and then that reconstructed TAC is used to look up the correct LOA in TGET.\n",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Affiliation": {
      "description": "Military branch of service",
      "type": "string",
      "title": "Branch of service",
      "enum": [
        "ARMY",
        "NAVY",
        "MARINES",
        "AIR_FORCE",
        "COAST_GUARD",
        "SPACE_FORCE",
        "NAVY_AND_MARINES",
        "AIR_AND_SPACE_FORCE",
        "OTHER"
      ],
      "x-display-value": {
        "AIR_FORCE": "Air Force",
        "ARMY": "Army",
        "COAST_GUARD": "Coast Guard",
        "MARINES": "Marine Corps",
        "NAVY": "Navy",
        "OTHER": "OTHER",
        "SPACE_FORCE": "Space Force"
      },
      "x-nullable": true
    },
    "Issuer": {
      "description": "Organization that issues orders. If more organizations, especially civilian ones, become clients of this API in the future, this enumeration may need to be expanded.",
      "type": "string",
      "enum": [
        "army",
        "navy",
        "air-force",
        "marine-corps",
        "coast-guard"
      ]
    },
    "Member": {
      "type": "object",
      "required": [
        "givenName",
        "familyName",
        "affiliation",
        "rank"
      ],
      "properties": {
        "affiliation": {
          "$ref": "#/definitions/Affiliation"
        },
        "familyName": {
          "description": "In languages that use Western order, like English, this is the last name.",
          "type": "string",
          "x-nullable": false
        },
        "givenName": {
          "description": "In languages that use Western order, like English, this is the first name.",
          "type": "string",
          "x-nullable": false
        },
        "middleName": {
          "description": "Middle name or middle initial",
          "type": "string",
          "x-nullable": true
        },
        "rank": {
          "$ref": "#/definitions/Rank"
        },
        "suffix": {
          "description": "Jr., Sr., III, etc.",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "description": "If supplied, this is the preferred form of address or preferred human-readable title. This is especially useful when a rank has multiple possible titles. For example, in the Army, an E-4 can be either a Specialist or a Corporal. In the Navy, there are dozens of possible job titles and ratings for enlisted sailors. In the Marine Corps, an E-8 can be either a Master Sergeant or a First Sergeant, and they do care about the distinction.\n\nIf omitted, my.move.mil will show the member the default name for the provided rank and affiliation.\n",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Orders": {
      "type": "object",
      "required": [
        "ordersNum",
        "edipi",
        "issuer",
        "revisions"
      ],
      "properties": {
        "edipi": {
          "description": "Electronic Data Interchange Personal Identifier, AKA the 10 digit DoD ID Number of the member.",
          "type": "string",
          "pattern": "^\\d{10}$",
          "x-nullable": false
        },
        "issuer": {
          "$ref": "#/definitions/Issuer"
        },
        "ordersNum": {
          "description": "Orders number. Supposed to be unique, but in practice uniqueness is not guaranteed for all branches of service.\n# Army\nTypically found in the upper-left hand corner of printed orders. For example, \"030-00362\". At this time, there is no common format for Orders numbers between Army installations.\n# Navy\nCorresponds to the CT (Commercial Travel) SDN. On printed orders, this is found on the SDN line in the ` + "`" + `------- ACCOUNTING DATA -------` + "`" + ` section in the ` + "`" + `PCS ACCOUNTING DATA` + "`" + ` paragraph. For example, \"N0001234ABC5XYZ\".\nThe BUPERS Orders number is not suitable, because it includes the sailor's full SSN, and the included four digit date code could repeat for a sailor if he or she gets orders exactly 10 years apart.\nNo-cost moves do not have a CT SDN, because they involve no travel. Without a CT SDN, USN Orders have nothing to use for the Orders number. Such Orders won't authorize any PCS expenses either, so they do not need to be submitted to this API.\n# Marine Corps\nCorresponds to the CT (Commercial Travel) SDN. On Web Orders, the CT SDN is found in the table at the bottom, in the last column of the row that begins with \"Travel\". For example, \"M7000213CTB28DZ\".\nNo-cost moves do not have a CT SDN, because they involve no travel. Without a CT SDN, USMC Orders have nothing to use for the Orders number. Such Orders won't authorize any PCS expenses either, so they do not need to be submitted to this API.\n# Air Force\nCorresponds to the SPECIAL ORDER NO, found in box 27 on AF Form 899. For example, \"AJ-063322\".\n# Coast Guard\nCorresponds to the Travel Order No. For example, \"1214G85PRAAGK000\".\n# Civilian\nCorresponds to the Travel Authorization Number. For example, \"PS8D000025\".\n",
          "type": "string",
          "x-nullable": false,
          "example": "M7000213CTB28DZ"
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Revision"
          }
        },
        "uuid": {
          "description": "Universally Unique IDentifier. Generated internally.",
          "type": "string",
          "format": "uuid",
          "example": "80200fa9-4ee2-49c5-b4fd-88b3ef4bd5eb"
        }
      }
    },
    "OrdersType": {
      "description": "The common types fit into the acronym ASTRO-U.\n  * **A**ccession - Joining the military\n  * **S**eparation / Retirement - Leaving the military\n  * **T**raining\n  * **R**otational\n  * **O**perational\n  * **U**nit Move - When an entire unit is reassigned to another installation, often as a deployment\n\nAs of this writing, none of the branches of service distinguish between\nseparation and retirement Orders in their systems, even though the NTS\nentitlement lasts longer for retirement.\n\nConsequences of this field include\n  * NTS entitlements are different between Orders types.\n  * Deadlines to create a shipment associated with Orders differs by Orders type.\n  * Accession, separation, and retirement moves currently require the\n    member to go through in-person counseling at the TMO / PPPO.\n",
      "type": "string",
      "enum": [
        "accession",
        "between-duty-stations",
        "brac",
        "cot",
        "emergency-evac",
        "ipcot",
        "low-cost-travel",
        "operational",
        "oteip",
        "rotational",
        "separation",
        "special-purpose",
        "training",
        "unit-move"
      ],
      "x-display-value": {
        "accession": "Accession",
        "between-duty-stations": "Between Duty Stations",
        "brac": "BRAC (Base Realignment And Closure)",
        "cot": "COT (Consecutive Overseas Travel)",
        "emergency-evac": "Emergency Non-Member Evacuation",
        "ipcot": "IPCOT (In-Place Consecutive Overseas Travel)",
        "low-cost-travel": "Low Cost Travel",
        "operational": "Operational",
        "oteip": "OTEIP (Overseas Tour Extension Incentive Program)",
        "rotational": "Rotational",
        "separation": "Separation / Retirement",
        "special-purpose": "Special Purpose Reimbursable",
        "training": "Training",
        "unit-move": "Unit Move"
      }
    },
    "Rank": {
      "description": "DoD paygrade or rank of the service member. Some of these ranks will have identical entitlements.",
      "type": "string",
      "enum": [
        "aviation-cadet",
        "cadet",
        "civilian",
        "e-1",
        "e-2",
        "e-3",
        "e-4",
        "e-5",
        "e-6",
        "e-7",
        "e-8",
        "e-9",
        "E-9-SPECIAL-SENIOR-ENLISTED",
        "midshipman",
        "o-1-ACADEMY-GRADUATE",
        "o-2",
        "o-3",
        "o-4",
        "o-5",
        "o-6",
        "o-7",
        "o-8",
        "o-9",
        "o-10",
        "w-1",
        "w-2",
        "w-3",
        "w-4",
        "w-5"
      ],
      "x-display-value": {
        "E-9-SPECIAL-SENIOR-ENLISTED": "E-9 (Special Senior Enlisted)",
        "aviation-cadet": "Aviation Cadet",
        "cadet": "Service Academy Cadet",
        "civilian": "Civilian",
        "e-1": "E-1",
        "e-2": "E-2",
        "e-3": "E-3",
        "e-4": "E-4",
        "e-5": "E-5",
        "e-6": "E-6",
        "e-7": "E-7",
        "e-8": "E-8",
        "e-9": "E-9",
        "midshipman": "Midshipman",
        "o-1-ACADEMY-GRADUATE": "O-1 or Service Academy Graduate",
        "o-10": "O-10",
        "o-2": "O-2",
        "o-3": "O-3",
        "o-4": "O-4",
        "o-5": "O-5",
        "o-6": "O-6",
        "o-7": "O-7",
        "o-8": "O-8",
        "o-9": "O-9",
        "w-1": "W-1",
        "w-2": "W-2",
        "w-3": "W-3",
        "w-4": "W-4",
        "w-5": "W-5"
      }
    },
    "Revision": {
      "type": "object",
      "required": [
        "seqNum",
        "member",
        "status",
        "ordersType",
        "hasDependents",
        "losingUnit",
        "gainingUnit"
      ],
      "properties": {
        "comments": {
          "description": "Free-form text that may or may not contain information relevant to moving.",
          "type": "string",
          "x-nullable": true
        },
        "dateIssued": {
          "description": "The date and time that these orders were cut. If omitted, the current date and time will be used.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "gainingUnit": {
          "$ref": "#/definitions/Unit"
        },
        "hasDependents": {
          "description": "True if the service member has any dependents (e.g., spouse, children, caring for an elderly parent, etc.), False otherwise.\nWhen the member has dependents, it usually raises their weight entitlement.\n",
          "type": "boolean"
        },
        "losingUnit": {
          "$ref": "#/definitions/Unit"
        },
        "member": {
          "$ref": "#/definitions/Member"
        },
        "noCostMove": {
          "description": "No Cost Move. If true, then these orders do not authorize any move expenses. If omitted or false, then these orders are a PCS and should authorize move expenses.\nOne scenario that leads to a no-cost move is a Permanent Change of Assignment without Permanent Change of Station. A PCA without PCS happens when a member is assigned to a new unit at the same duty station, or to a new duty station geographically close to the current duty station.\nIt is not unheard of for the initial revision of orders to have this set to false and then later to be amended to true and vice-versa.\n",
          "type": "boolean"
        },
        "ntsAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "ordersType": {
          "$ref": "#/definitions/OrdersType"
        },
        "pcsAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "povShipmentAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "povStorageAccounting": {
          "$ref": "#/definitions/Accounting"
        },
        "reportNoEarlierThan": {
          "description": "Earliest date that the service member is allowed to report for duty at the new duty station. If omitted, the member is allowed to report as early as desired.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "reportNoLaterThan": {
          "description": "Latest date that the service member is allowed to report for duty at the new duty station. Should be included for most Orders types, but can be missing for Separation / Retirement Orders.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "seqNum": {
          "description": "Sequence number. As Orders are amended, the Revision with the highest sequence number is considered the current, authoritative version of the Orders, even if its dateIssued is earlier.\n\nThe sequence number is NOT required to increase monotonically or sequentially; in other words, if a set of orders is modified twice, the sequence numbers could be 1, 5858300, and 30.\n",
          "type": "integer",
          "minimum": 0
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "tdyEnRoute": {
          "description": "TDY (Temporary Duty Yonder) en-route. If omitted, assume false.",
          "type": "boolean"
        },
        "tourType": {
          "$ref": "#/definitions/TourType"
        },
        "ubAccounting": {
          "$ref": "#/definitions/Accounting"
        }
      }
    },
    "Status": {
      "description": "Indicates whether these Orders are authorized, RFO (Request For Orders), or canceled. An RFO is not sufficient to authorize moving expenses; only authorized Orders can do that.",
      "type": "string",
      "enum": [
        "authorized",
        "rfo",
        "canceled"
      ],
      "x-display-value": {
        "authorized": "Authorized",
        "canceled": "Canceled",
        "rfo": "Request For Orders (RFO)"
      }
    },
    "TourType": {
      "description": "Accompanied or Unaccompanied; i.e., are dependents authorized to accompany the service member on the move. For certain OCONUS destinations, the tour type affects the member's entitlement. Otherwise, it doesn't matter.\n\nIf omitted, assume accompanied.\n",
      "type": "string",
      "enum": [
        "accompanied",
        "unaccompanied",
        "unaccompanied-dependents-restricted"
      ],
      "x-display-value": {
        "accompanied": "Accompanied",
        "unaccompanied": "Unaccompanied",
        "unaccompanied-dependents-restricted": "Unaccompanied, Dependents Restricted"
      }
    },
    "Unit": {
      "description": "Information about either the losing or gaining Unit. If these are separation orders, the location information for the gaining Unit may be blank.",
      "type": "object",
      "properties": {
        "city": {
          "description": "May be FPO or APO for OCONUS commands.",
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "ISO 3166-1 alpha-2 country code. If blank, but city and locality or postalCode are not blank, assume US",
          "type": "string",
          "pattern": "^[A-Z]{2}$",
          "x-nullable": true
        },
        "locality": {
          "description": "State (US). OCONUS units may not have the equivalent information available.",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Human-readable name of the Unit.",
          "type": "string",
          "x-nullable": true
        },
        "postalCode": {
          "description": "In the USA, this is the ZIP Code.",
          "type": "string",
          "x-nullable": true
        },
        "uic": {
          "description": "Unit Identification Code - a six character alphanumeric code that uniquely identifies each United States Department of Defense entity. Used in Army, Air Force, and Navy orders.\nNote that the Navy has the habit of omitting the leading character, which is always \"N\" for them.\n",
          "type": "string",
          "pattern": "^[A-Z][A-Z0-9]{5}$",
          "x-nullable": true
        }
      }
    }
  }
}`))
}
