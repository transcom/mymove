// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GSRAppealStatusType g s r appeal status type
//
// swagger:model GSRAppealStatusType
type GSRAppealStatusType string

func NewGSRAppealStatusType(value GSRAppealStatusType) *GSRAppealStatusType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GSRAppealStatusType.
func (m GSRAppealStatusType) Pointer() *GSRAppealStatusType {
	return &m
}

const (

	// GSRAppealStatusTypeSUSTAINED captures enum value "SUSTAINED"
	GSRAppealStatusTypeSUSTAINED GSRAppealStatusType = "SUSTAINED"

	// GSRAppealStatusTypeREJECTED captures enum value "REJECTED"
	GSRAppealStatusTypeREJECTED GSRAppealStatusType = "REJECTED"
)

// for schema
var gSRAppealStatusTypeEnum []interface{}

func init() {
	var res []GSRAppealStatusType
	if err := json.Unmarshal([]byte(`["SUSTAINED","REJECTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gSRAppealStatusTypeEnum = append(gSRAppealStatusTypeEnum, v)
	}
}

func (m GSRAppealStatusType) validateGSRAppealStatusTypeEnum(path, location string, value GSRAppealStatusType) error {
	if err := validate.EnumCase(path, location, value, gSRAppealStatusTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this g s r appeal status type
func (m GSRAppealStatusType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGSRAppealStatusTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this g s r appeal status type based on context it is used
func (m GSRAppealStatusType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
