// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Grade grade
//
// swagger:model Grade
type Grade string

func NewGrade(value Grade) *Grade {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Grade.
func (m Grade) Pointer() *Grade {
	return &m
}

const (

	// GradeE1 captures enum value "E_1"
	GradeE1 Grade = "E_1"

	// GradeE2 captures enum value "E_2"
	GradeE2 Grade = "E_2"

	// GradeE3 captures enum value "E_3"
	GradeE3 Grade = "E_3"

	// GradeE4 captures enum value "E_4"
	GradeE4 Grade = "E_4"

	// GradeE5 captures enum value "E_5"
	GradeE5 Grade = "E_5"

	// GradeE6 captures enum value "E_6"
	GradeE6 Grade = "E_6"

	// GradeE7 captures enum value "E_7"
	GradeE7 Grade = "E_7"

	// GradeE8 captures enum value "E_8"
	GradeE8 Grade = "E_8"

	// GradeE9 captures enum value "E_9"
	GradeE9 Grade = "E_9"

	// GradeE9SPECIALSENIORENLISTED captures enum value "E_9_SPECIAL_SENIOR_ENLISTED"
	GradeE9SPECIALSENIORENLISTED Grade = "E_9_SPECIAL_SENIOR_ENLISTED"

	// GradeO1ACADEMYGRADUATE captures enum value "O_1_ACADEMY_GRADUATE"
	GradeO1ACADEMYGRADUATE Grade = "O_1_ACADEMY_GRADUATE"

	// GradeO2 captures enum value "O_2"
	GradeO2 Grade = "O_2"

	// GradeO3 captures enum value "O_3"
	GradeO3 Grade = "O_3"

	// GradeO4 captures enum value "O_4"
	GradeO4 Grade = "O_4"

	// GradeO5 captures enum value "O_5"
	GradeO5 Grade = "O_5"

	// GradeO6 captures enum value "O_6"
	GradeO6 Grade = "O_6"

	// GradeO7 captures enum value "O_7"
	GradeO7 Grade = "O_7"

	// GradeO8 captures enum value "O_8"
	GradeO8 Grade = "O_8"

	// GradeO9 captures enum value "O_9"
	GradeO9 Grade = "O_9"

	// GradeO10 captures enum value "O_10"
	GradeO10 Grade = "O_10"

	// GradeW1 captures enum value "W_1"
	GradeW1 Grade = "W_1"

	// GradeW2 captures enum value "W_2"
	GradeW2 Grade = "W_2"

	// GradeW3 captures enum value "W_3"
	GradeW3 Grade = "W_3"

	// GradeW4 captures enum value "W_4"
	GradeW4 Grade = "W_4"

	// GradeW5 captures enum value "W_5"
	GradeW5 Grade = "W_5"

	// GradeAVIATIONCADET captures enum value "AVIATION_CADET"
	GradeAVIATIONCADET Grade = "AVIATION_CADET"

	// GradeCIVILIANEMPLOYEE captures enum value "CIVILIAN_EMPLOYEE"
	GradeCIVILIANEMPLOYEE Grade = "CIVILIAN_EMPLOYEE"

	// GradeACADEMYCADET captures enum value "ACADEMY_CADET"
	GradeACADEMYCADET Grade = "ACADEMY_CADET"

	// GradeMIDSHIPMAN captures enum value "MIDSHIPMAN"
	GradeMIDSHIPMAN Grade = "MIDSHIPMAN"
)

// for schema
var gradeEnum []interface{}

func init() {
	var res []Grade
	if err := json.Unmarshal([]byte(`["E_1","E_2","E_3","E_4","E_5","E_6","E_7","E_8","E_9","E_9_SPECIAL_SENIOR_ENLISTED","O_1_ACADEMY_GRADUATE","O_2","O_3","O_4","O_5","O_6","O_7","O_8","O_9","O_10","W_1","W_2","W_3","W_4","W_5","AVIATION_CADET","CIVILIAN_EMPLOYEE","ACADEMY_CADET","MIDSHIPMAN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gradeEnum = append(gradeEnum, v)
	}
}

func (m Grade) validateGradeEnum(path, location string, value Grade) error {
	if err := validate.EnumCase(path, location, value, gradeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this grade
func (m Grade) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGradeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this grade based on context it is used
func (m Grade) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
