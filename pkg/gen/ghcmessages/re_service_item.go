// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReServiceItem A Service Item which ties an ReService, Market, and Shipment Type together
//
// swagger:model ReServiceItem
type ReServiceItem struct {

	// is auto approved
	// Example: true
	IsAutoApproved bool `json:"isAutoApproved,omitempty"`

	// market code
	// Example: i (International), d (Domestic)
	// Enum: [i d]
	MarketCode string `json:"marketCode,omitempty"`

	// service code
	// Example: UBP
	// Enum: [CS DBHF DBTF DCRT DCRTSA DDASIT DDDSIT DDFSIT DDP DDSFSC DDSHUT DLH DMHF DNPK DOASIT DOFSIT DOP DOPSIT DOSFSC DOSHUT DPK DSH DUCRT DUPK FSC IBHF IBTF ICRT ICRTSA IDASIT IDDSIT IDFSIT IDSFSC IDSHUT IHPK IHUPK INPK IOASIT IOFSIT IOPSIT IOSFSC IOSHUT ISLH IUBPK IUBUPK IUCRT MS PODFSC POEFSC UBP]
	ServiceCode string `json:"serviceCode,omitempty"`

	// service name
	// Example: International UB, International Shipping \u0026 Linehaul
	ServiceName string `json:"serviceName,omitempty"`

	// shipment type
	// Example: HHG, UNACCOMPANIED_BAGGAGE
	// Enum: [BOAT_HAUL_AWAY BOAT_TOW_AWAY HHG HHG_INTO_NTS HHG_OUTOF_NTS MOBILE_HOME PPM UNACCOMPANIED_BAGGAGE]
	ShipmentType string `json:"shipmentType,omitempty"`
}

// Validate validates this re service item
func (m *ReServiceItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMarketCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShipmentType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var reServiceItemTypeMarketCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["i","d"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		reServiceItemTypeMarketCodePropEnum = append(reServiceItemTypeMarketCodePropEnum, v)
	}
}

const (

	// ReServiceItemMarketCodeI captures enum value "i"
	ReServiceItemMarketCodeI string = "i"

	// ReServiceItemMarketCodeD captures enum value "d"
	ReServiceItemMarketCodeD string = "d"
)

// prop value enum
func (m *ReServiceItem) validateMarketCodeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, reServiceItemTypeMarketCodePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ReServiceItem) validateMarketCode(formats strfmt.Registry) error {
	if swag.IsZero(m.MarketCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateMarketCodeEnum("marketCode", "body", m.MarketCode); err != nil {
		return err
	}

	return nil
}

var reServiceItemTypeServiceCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CS","DBHF","DBTF","DCRT","DCRTSA","DDASIT","DDDSIT","DDFSIT","DDP","DDSFSC","DDSHUT","DLH","DMHF","DNPK","DOASIT","DOFSIT","DOP","DOPSIT","DOSFSC","DOSHUT","DPK","DSH","DUCRT","DUPK","FSC","IBHF","IBTF","ICRT","ICRTSA","IDASIT","IDDSIT","IDFSIT","IDSFSC","IDSHUT","IHPK","IHUPK","INPK","IOASIT","IOFSIT","IOPSIT","IOSFSC","IOSHUT","ISLH","IUBPK","IUBUPK","IUCRT","MS","PODFSC","POEFSC","UBP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		reServiceItemTypeServiceCodePropEnum = append(reServiceItemTypeServiceCodePropEnum, v)
	}
}

const (

	// ReServiceItemServiceCodeCS captures enum value "CS"
	ReServiceItemServiceCodeCS string = "CS"

	// ReServiceItemServiceCodeDBHF captures enum value "DBHF"
	ReServiceItemServiceCodeDBHF string = "DBHF"

	// ReServiceItemServiceCodeDBTF captures enum value "DBTF"
	ReServiceItemServiceCodeDBTF string = "DBTF"

	// ReServiceItemServiceCodeDCRT captures enum value "DCRT"
	ReServiceItemServiceCodeDCRT string = "DCRT"

	// ReServiceItemServiceCodeDCRTSA captures enum value "DCRTSA"
	ReServiceItemServiceCodeDCRTSA string = "DCRTSA"

	// ReServiceItemServiceCodeDDASIT captures enum value "DDASIT"
	ReServiceItemServiceCodeDDASIT string = "DDASIT"

	// ReServiceItemServiceCodeDDDSIT captures enum value "DDDSIT"
	ReServiceItemServiceCodeDDDSIT string = "DDDSIT"

	// ReServiceItemServiceCodeDDFSIT captures enum value "DDFSIT"
	ReServiceItemServiceCodeDDFSIT string = "DDFSIT"

	// ReServiceItemServiceCodeDDP captures enum value "DDP"
	ReServiceItemServiceCodeDDP string = "DDP"

	// ReServiceItemServiceCodeDDSFSC captures enum value "DDSFSC"
	ReServiceItemServiceCodeDDSFSC string = "DDSFSC"

	// ReServiceItemServiceCodeDDSHUT captures enum value "DDSHUT"
	ReServiceItemServiceCodeDDSHUT string = "DDSHUT"

	// ReServiceItemServiceCodeDLH captures enum value "DLH"
	ReServiceItemServiceCodeDLH string = "DLH"

	// ReServiceItemServiceCodeDMHF captures enum value "DMHF"
	ReServiceItemServiceCodeDMHF string = "DMHF"

	// ReServiceItemServiceCodeDNPK captures enum value "DNPK"
	ReServiceItemServiceCodeDNPK string = "DNPK"

	// ReServiceItemServiceCodeDOASIT captures enum value "DOASIT"
	ReServiceItemServiceCodeDOASIT string = "DOASIT"

	// ReServiceItemServiceCodeDOFSIT captures enum value "DOFSIT"
	ReServiceItemServiceCodeDOFSIT string = "DOFSIT"

	// ReServiceItemServiceCodeDOP captures enum value "DOP"
	ReServiceItemServiceCodeDOP string = "DOP"

	// ReServiceItemServiceCodeDOPSIT captures enum value "DOPSIT"
	ReServiceItemServiceCodeDOPSIT string = "DOPSIT"

	// ReServiceItemServiceCodeDOSFSC captures enum value "DOSFSC"
	ReServiceItemServiceCodeDOSFSC string = "DOSFSC"

	// ReServiceItemServiceCodeDOSHUT captures enum value "DOSHUT"
	ReServiceItemServiceCodeDOSHUT string = "DOSHUT"

	// ReServiceItemServiceCodeDPK captures enum value "DPK"
	ReServiceItemServiceCodeDPK string = "DPK"

	// ReServiceItemServiceCodeDSH captures enum value "DSH"
	ReServiceItemServiceCodeDSH string = "DSH"

	// ReServiceItemServiceCodeDUCRT captures enum value "DUCRT"
	ReServiceItemServiceCodeDUCRT string = "DUCRT"

	// ReServiceItemServiceCodeDUPK captures enum value "DUPK"
	ReServiceItemServiceCodeDUPK string = "DUPK"

	// ReServiceItemServiceCodeFSC captures enum value "FSC"
	ReServiceItemServiceCodeFSC string = "FSC"

	// ReServiceItemServiceCodeIBHF captures enum value "IBHF"
	ReServiceItemServiceCodeIBHF string = "IBHF"

	// ReServiceItemServiceCodeIBTF captures enum value "IBTF"
	ReServiceItemServiceCodeIBTF string = "IBTF"

	// ReServiceItemServiceCodeICRT captures enum value "ICRT"
	ReServiceItemServiceCodeICRT string = "ICRT"

	// ReServiceItemServiceCodeICRTSA captures enum value "ICRTSA"
	ReServiceItemServiceCodeICRTSA string = "ICRTSA"

	// ReServiceItemServiceCodeIDASIT captures enum value "IDASIT"
	ReServiceItemServiceCodeIDASIT string = "IDASIT"

	// ReServiceItemServiceCodeIDDSIT captures enum value "IDDSIT"
	ReServiceItemServiceCodeIDDSIT string = "IDDSIT"

	// ReServiceItemServiceCodeIDFSIT captures enum value "IDFSIT"
	ReServiceItemServiceCodeIDFSIT string = "IDFSIT"

	// ReServiceItemServiceCodeIDSFSC captures enum value "IDSFSC"
	ReServiceItemServiceCodeIDSFSC string = "IDSFSC"

	// ReServiceItemServiceCodeIDSHUT captures enum value "IDSHUT"
	ReServiceItemServiceCodeIDSHUT string = "IDSHUT"

	// ReServiceItemServiceCodeIHPK captures enum value "IHPK"
	ReServiceItemServiceCodeIHPK string = "IHPK"

	// ReServiceItemServiceCodeIHUPK captures enum value "IHUPK"
	ReServiceItemServiceCodeIHUPK string = "IHUPK"

	// ReServiceItemServiceCodeINPK captures enum value "INPK"
	ReServiceItemServiceCodeINPK string = "INPK"

	// ReServiceItemServiceCodeIOASIT captures enum value "IOASIT"
	ReServiceItemServiceCodeIOASIT string = "IOASIT"

	// ReServiceItemServiceCodeIOFSIT captures enum value "IOFSIT"
	ReServiceItemServiceCodeIOFSIT string = "IOFSIT"

	// ReServiceItemServiceCodeIOPSIT captures enum value "IOPSIT"
	ReServiceItemServiceCodeIOPSIT string = "IOPSIT"

	// ReServiceItemServiceCodeIOSFSC captures enum value "IOSFSC"
	ReServiceItemServiceCodeIOSFSC string = "IOSFSC"

	// ReServiceItemServiceCodeIOSHUT captures enum value "IOSHUT"
	ReServiceItemServiceCodeIOSHUT string = "IOSHUT"

	// ReServiceItemServiceCodeISLH captures enum value "ISLH"
	ReServiceItemServiceCodeISLH string = "ISLH"

	// ReServiceItemServiceCodeIUBPK captures enum value "IUBPK"
	ReServiceItemServiceCodeIUBPK string = "IUBPK"

	// ReServiceItemServiceCodeIUBUPK captures enum value "IUBUPK"
	ReServiceItemServiceCodeIUBUPK string = "IUBUPK"

	// ReServiceItemServiceCodeIUCRT captures enum value "IUCRT"
	ReServiceItemServiceCodeIUCRT string = "IUCRT"

	// ReServiceItemServiceCodeMS captures enum value "MS"
	ReServiceItemServiceCodeMS string = "MS"

	// ReServiceItemServiceCodePODFSC captures enum value "PODFSC"
	ReServiceItemServiceCodePODFSC string = "PODFSC"

	// ReServiceItemServiceCodePOEFSC captures enum value "POEFSC"
	ReServiceItemServiceCodePOEFSC string = "POEFSC"

	// ReServiceItemServiceCodeUBP captures enum value "UBP"
	ReServiceItemServiceCodeUBP string = "UBP"
)

// prop value enum
func (m *ReServiceItem) validateServiceCodeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, reServiceItemTypeServiceCodePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ReServiceItem) validateServiceCode(formats strfmt.Registry) error {
	if swag.IsZero(m.ServiceCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateServiceCodeEnum("serviceCode", "body", m.ServiceCode); err != nil {
		return err
	}

	return nil
}

var reServiceItemTypeShipmentTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BOAT_HAUL_AWAY","BOAT_TOW_AWAY","HHG","HHG_INTO_NTS","HHG_OUTOF_NTS","MOBILE_HOME","PPM","UNACCOMPANIED_BAGGAGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		reServiceItemTypeShipmentTypePropEnum = append(reServiceItemTypeShipmentTypePropEnum, v)
	}
}

const (

	// ReServiceItemShipmentTypeBOATHAULAWAY captures enum value "BOAT_HAUL_AWAY"
	ReServiceItemShipmentTypeBOATHAULAWAY string = "BOAT_HAUL_AWAY"

	// ReServiceItemShipmentTypeBOATTOWAWAY captures enum value "BOAT_TOW_AWAY"
	ReServiceItemShipmentTypeBOATTOWAWAY string = "BOAT_TOW_AWAY"

	// ReServiceItemShipmentTypeHHG captures enum value "HHG"
	ReServiceItemShipmentTypeHHG string = "HHG"

	// ReServiceItemShipmentTypeHHGINTONTS captures enum value "HHG_INTO_NTS"
	ReServiceItemShipmentTypeHHGINTONTS string = "HHG_INTO_NTS"

	// ReServiceItemShipmentTypeHHGOUTOFNTS captures enum value "HHG_OUTOF_NTS"
	ReServiceItemShipmentTypeHHGOUTOFNTS string = "HHG_OUTOF_NTS"

	// ReServiceItemShipmentTypeMOBILEHOME captures enum value "MOBILE_HOME"
	ReServiceItemShipmentTypeMOBILEHOME string = "MOBILE_HOME"

	// ReServiceItemShipmentTypePPM captures enum value "PPM"
	ReServiceItemShipmentTypePPM string = "PPM"

	// ReServiceItemShipmentTypeUNACCOMPANIEDBAGGAGE captures enum value "UNACCOMPANIED_BAGGAGE"
	ReServiceItemShipmentTypeUNACCOMPANIEDBAGGAGE string = "UNACCOMPANIED_BAGGAGE"
)

// prop value enum
func (m *ReServiceItem) validateShipmentTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, reServiceItemTypeShipmentTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ReServiceItem) validateShipmentType(formats strfmt.Registry) error {
	if swag.IsZero(m.ShipmentType) { // not required
		return nil
	}

	// value enum
	if err := m.validateShipmentTypeEnum("shipmentType", "body", m.ShipmentType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this re service item based on context it is used
func (m *ReServiceItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReServiceItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReServiceItem) UnmarshalBinary(b []byte) error {
	var res ReServiceItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
