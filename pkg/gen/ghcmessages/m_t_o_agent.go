// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MTOAgent m t o agent
//
// swagger:model MTOAgent
type MTOAgent struct {

	// agent type
	// Enum: [RELEASING_AGENT RECEIVING_AGENT]
	AgentType string `json:"agentType,omitempty"`

	// created at
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"createdAt,omitempty"`

	// e tag
	ETag string `json:"eTag,omitempty"`

	// email
	// Pattern: (^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$)|(^$)
	Email *string `json:"email,omitempty"`

	// first name
	FirstName *string `json:"firstName,omitempty"`

	// id
	// Example: 1f2270c7-7166-40ae-981e-b200ebdf3054
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// last name
	LastName *string `json:"lastName,omitempty"`

	// mto shipment ID
	// Example: 1f2270c7-7166-40ae-981e-b200ebdf3054
	// Format: uuid
	MtoShipmentID strfmt.UUID `json:"mtoShipmentID,omitempty"`

	// phone
	// Pattern: (^[2-9]\d{2}-\d{3}-\d{4}$)|(^$)
	Phone *string `json:"phone,omitempty"`

	// updated at
	// Format: date-time
	UpdatedAt strfmt.DateTime `json:"updatedAt,omitempty"`
}

// Validate validates this m t o agent
func (m *MTOAgent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAgentType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMtoShipmentID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhone(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var mTOAgentTypeAgentTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RELEASING_AGENT","RECEIVING_AGENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mTOAgentTypeAgentTypePropEnum = append(mTOAgentTypeAgentTypePropEnum, v)
	}
}

const (

	// MTOAgentAgentTypeRELEASINGAGENT captures enum value "RELEASING_AGENT"
	MTOAgentAgentTypeRELEASINGAGENT string = "RELEASING_AGENT"

	// MTOAgentAgentTypeRECEIVINGAGENT captures enum value "RECEIVING_AGENT"
	MTOAgentAgentTypeRECEIVINGAGENT string = "RECEIVING_AGENT"
)

// prop value enum
func (m *MTOAgent) validateAgentTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mTOAgentTypeAgentTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MTOAgent) validateAgentType(formats strfmt.Registry) error {
	if swag.IsZero(m.AgentType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAgentTypeEnum("agentType", "body", m.AgentType); err != nil {
		return err
	}

	return nil
}

func (m *MTOAgent) validateCreatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("createdAt", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MTOAgent) validateEmail(formats strfmt.Registry) error {
	if swag.IsZero(m.Email) { // not required
		return nil
	}

	if err := validate.Pattern("email", "body", *m.Email, `(^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$)|(^$)`); err != nil {
		return err
	}

	return nil
}

func (m *MTOAgent) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MTOAgent) validateMtoShipmentID(formats strfmt.Registry) error {
	if swag.IsZero(m.MtoShipmentID) { // not required
		return nil
	}

	if err := validate.FormatOf("mtoShipmentID", "body", "uuid", m.MtoShipmentID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MTOAgent) validatePhone(formats strfmt.Registry) error {
	if swag.IsZero(m.Phone) { // not required
		return nil
	}

	if err := validate.Pattern("phone", "body", *m.Phone, `(^[2-9]\d{2}-\d{3}-\d{4}$)|(^$)`); err != nil {
		return err
	}

	return nil
}

func (m *MTOAgent) validateUpdatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("updatedAt", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this m t o agent based on context it is used
func (m *MTOAgent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MTOAgent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MTOAgent) UnmarshalBinary(b []byte) error {
	var res MTOAgent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
