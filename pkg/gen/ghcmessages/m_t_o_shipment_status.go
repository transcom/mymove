// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MTOShipmentStatus Shipment Status
// Example: SUBMITTED
//
// swagger:model MTOShipmentStatus
type MTOShipmentStatus string

func NewMTOShipmentStatus(value MTOShipmentStatus) *MTOShipmentStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated MTOShipmentStatus.
func (m MTOShipmentStatus) Pointer() *MTOShipmentStatus {
	return &m
}

const (

	// MTOShipmentStatusSUBMITTED captures enum value "SUBMITTED"
	MTOShipmentStatusSUBMITTED MTOShipmentStatus = "SUBMITTED"

	// MTOShipmentStatusREJECTED captures enum value "REJECTED"
	MTOShipmentStatusREJECTED MTOShipmentStatus = "REJECTED"

	// MTOShipmentStatusAPPROVED captures enum value "APPROVED"
	MTOShipmentStatusAPPROVED MTOShipmentStatus = "APPROVED"

	// MTOShipmentStatusCANCELLATIONREQUESTED captures enum value "CANCELLATION_REQUESTED"
	MTOShipmentStatusCANCELLATIONREQUESTED MTOShipmentStatus = "CANCELLATION_REQUESTED"

	// MTOShipmentStatusCANCELED captures enum value "CANCELED"
	MTOShipmentStatusCANCELED MTOShipmentStatus = "CANCELED"

	// MTOShipmentStatusDIVERSIONREQUESTED captures enum value "DIVERSION_REQUESTED"
	MTOShipmentStatusDIVERSIONREQUESTED MTOShipmentStatus = "DIVERSION_REQUESTED"
)

// for schema
var mTOShipmentStatusEnum []interface{}

func init() {
	var res []MTOShipmentStatus
	if err := json.Unmarshal([]byte(`["SUBMITTED","REJECTED","APPROVED","CANCELLATION_REQUESTED","CANCELED","DIVERSION_REQUESTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mTOShipmentStatusEnum = append(mTOShipmentStatusEnum, v)
	}
}

func (m MTOShipmentStatus) validateMTOShipmentStatusEnum(path, location string, value MTOShipmentStatus) error {
	if err := validate.EnumCase(path, location, value, mTOShipmentStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this m t o shipment status
func (m MTOShipmentStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMTOShipmentStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this m t o shipment status based on context it is used
func (m MTOShipmentStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
