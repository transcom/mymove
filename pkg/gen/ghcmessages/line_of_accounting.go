// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LineOfAccounting line of accounting
//
// swagger:model LineOfAccounting
type LineOfAccounting struct {

	// created at
	// Example: 2023-08-03T19:17:10.050Z
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"createdAt,omitempty"`

	// id
	// Example: 06254fc3-b763-484c-b555-42855d1ad5cd
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// loa actvty ID
	// Max Length: 11
	LoaActvtyID *string `json:"loaActvtyID,omitempty"`

	// loa agnc acntng cd
	// Max Length: 6
	LoaAgncAcntngCd *string `json:"loaAgncAcntngCd,omitempty"`

	// loa agnc dsbr cd
	// Max Length: 6
	LoaAgncDsbrCd *string `json:"loaAgncDsbrCd,omitempty"`

	// loa allt sn ID
	// Example: 123A
	// Max Length: 5
	LoaAlltSnID *string `json:"loaAlltSnID,omitempty"`

	// loa baf ID
	// Example: 1234
	// Max Length: 4
	LoaBafID *string `json:"loaBafID,omitempty"`

	// loa bdgt acnt cls nm
	// Example: 000000
	// Max Length: 8
	LoaBdgtAcntClsNm *string `json:"loaBdgtAcntClsNm,omitempty"`

	// loa bet cd
	// Max Length: 4
	LoaBetCd *string `json:"loaBetCd,omitempty"`

	// loa bg fy tx
	// Example: 2006
	LoaBgFyTx *int64 `json:"loaBgFyTx,omitempty"`

	// loa bgn dt
	// Example: 2005-10-01
	// Format: date
	LoaBgnDt *strfmt.Date `json:"loaBgnDt,omitempty"`

	// loa bgt ln itm ID
	// Max Length: 8
	LoaBgtLnItmID *string `json:"loaBgtLnItmID,omitempty"`

	// loa bgt rstr cd
	// Max Length: 1
	LoaBgtRstrCd *string `json:"loaBgtRstrCd,omitempty"`

	// loa bgt sub act cd
	// Max Length: 4
	LoaBgtSubActCd *string `json:"loaBgtSubActCd,omitempty"`

	// loa cls ref ID
	// Max Length: 2
	LoaClsRefID *string `json:"loaClsRefID,omitempty"`

	// loa cst cd
	// Max Length: 16
	LoaCstCd *string `json:"loaCstCd,omitempty"`

	// loa cst cntr ID
	// Max Length: 16
	LoaCstCntrID *string `json:"loaCstCntrID,omitempty"`

	// loa cust nm
	// Max Length: 6
	LoaCustNm *string `json:"loaCustNm,omitempty"`

	// loa df agncy alctn rcpnt ID
	// Max Length: 4
	LoaDfAgncyAlctnRcpntID *string `json:"loaDfAgncyAlctnRcpntID,omitempty"`

	// loa doc ID
	// Example: HHG12345678900
	// Max Length: 15
	LoaDocID *string `json:"loaDocID,omitempty"`

	// loa dpt ID
	// Example: 1
	// Max Length: 2
	LoaDptID *string `json:"loaDptID,omitempty"`

	// loa dsc tx
	// Example: PERSONAL PROPERTY - PARANORMAL ACTIVITY DIVISION (OTHER)
	LoaDscTx *string `json:"loaDscTx,omitempty"`

	// loa dtl rmbsmt src ID
	// Max Length: 3
	LoaDtlRmbsmtSrcID *string `json:"loaDtlRmbsmtSrcID,omitempty"`

	// loa end dt
	// Example: 2015-10-01
	// Format: date
	LoaEndDt *strfmt.Date `json:"loaEndDt,omitempty"`

	// loa end fy tx
	// Example: 2016
	LoaEndFyTx *int64 `json:"loaEndFyTx,omitempty"`

	// loa fms trnsactn ID
	// Max Length: 12
	LoaFmsTrnsactnID *string `json:"loaFmsTrnsactnID,omitempty"`

	// loa fncl ar ID
	// Max Length: 6
	LoaFnclArID *string `json:"loaFnclArID,omitempty"`

	// loa fnct prs nm
	// Max Length: 255
	LoaFnctPrsNm *string `json:"loaFnctPrsNm,omitempty"`

	// loa fnd cntr ID
	// Max Length: 12
	LoaFndCntrID *string `json:"loaFndCntrID,omitempty"`

	// loa fnd ty fg cd
	// Max Length: 1
	LoaFndTyFgCd *string `json:"loaFndTyFgCd,omitempty"`

	// loa hist stat cd
	// Max Length: 1
	LoaHistStatCd *string `json:"loaHistStatCd,omitempty"`

	// loa hs gds cd
	// Example: HT
	// Max Length: 2
	LoaHsGdsCd *string `json:"loaHsGdsCd,omitempty"`

	// loa instl acntg act ID
	// Example: 12345
	// Max Length: 6
	LoaInstlAcntgActID *string `json:"loaInstlAcntgActID,omitempty"`

	// loa jb ord nm
	// Max Length: 10
	LoaJbOrdNm *string `json:"loaJbOrdNm,omitempty"`

	// loa lcl instl ID
	// Max Length: 18
	LoaLclInstlID *string `json:"loaLclInstlID,omitempty"`

	// loa maj clm nm
	// Max Length: 4
	LoaMajClmNm *string `json:"loaMajClmNm,omitempty"`

	// loa maj rmbsmt src ID
	// Max Length: 1
	LoaMajRmbsmtSrcID *string `json:"loaMajRmbsmtSrcID,omitempty"`

	// loa obj cls ID
	// Example: 22NL
	// Max Length: 6
	LoaObjClsID *string `json:"loaObjClsID,omitempty"`

	// loa op agncy ID
	// Example: 1A
	// Max Length: 4
	LoaOpAgncyID *string `json:"loaOpAgncyID,omitempty"`

	// loa pgm elmnt ID
	// Example: 00000000
	// Max Length: 12
	LoaPgmElmntID *string `json:"loaPgmElmntID,omitempty"`

	// loa prj ID
	// Max Length: 12
	LoaPrjID *string `json:"loaPrjID,omitempty"`

	// loa sbaltmt rcpnt ID
	// Max Length: 1
	LoaSbaltmtRcpntID *string `json:"loaSbaltmtRcpntID,omitempty"`

	// loa scrty coop cust cd
	// Max Length: 2
	LoaScrtyCoopCustCd *string `json:"loaScrtyCoopCustCd,omitempty"`

	// loa scrty coop dsgntr cd
	// Max Length: 4
	LoaScrtyCoopDsgntrCd *string `json:"loaScrtyCoopDsgntrCd,omitempty"`

	// loa scrty coop impl agnc cd
	// Max Length: 1
	LoaScrtyCoopImplAgncCd *string `json:"loaScrtyCoopImplAgncCd,omitempty"`

	// loa scrty coop ln itm ID
	// Max Length: 3
	LoaScrtyCoopLnItmID *string `json:"loaScrtyCoopLnItmID,omitempty"`

	// loa spcl intr ID
	// Max Length: 2
	LoaSpclIntrID *string `json:"loaSpclIntrID,omitempty"`

	// loa srv src ID
	// Max Length: 1
	LoaSrvSrcID *string `json:"loaSrvSrcID,omitempty"`

	// loa stat cd
	// Example: U
	// Max Length: 1
	LoaStatCd *string `json:"loaStatCd,omitempty"`

	// loa sub acnt ID
	// Max Length: 3
	LoaSubAcntID *string `json:"loaSubAcntID,omitempty"`

	// loa sys Id
	// Example: 10003
	// Max Length: 20
	LoaSysID *string `json:"loaSysId,omitempty"`

	// loa tnsfr dpt nm
	// Max Length: 4
	LoaTnsfrDptNm *string `json:"loaTnsfrDptNm,omitempty"`

	// loa trnsn ID
	// Example: B1
	// Max Length: 3
	LoaTrnsnID *string `json:"loaTrnsnID,omitempty"`

	// loa trsy sfx tx
	// Example: 0000
	// Max Length: 4
	LoaTrsySfxTx *string `json:"loaTrsySfxTx,omitempty"`

	// loa tsk bdgt sbln tx
	// Max Length: 8
	LoaTskBdgtSblnTx *string `json:"loaTskBdgtSblnTx,omitempty"`

	// loa uic
	// Max Length: 6
	LoaUic *string `json:"loaUic,omitempty"`

	// loa wk cntr rcpnt nm
	// Max Length: 6
	LoaWkCntrRcpntNm *string `json:"loaWkCntrRcpntNm,omitempty"`

	// loa wrk ord ID
	// Max Length: 16
	LoaWrkOrdID *string `json:"loaWrkOrdID,omitempty"`

	// org grp dfas cd
	// Example: ZZ
	// Max Length: 2
	OrgGrpDfasCd *string `json:"orgGrpDfasCd,omitempty"`

	// updated at
	// Example: 2023-08-03T19:17:38.776Z
	// Format: date-time
	UpdatedAt strfmt.DateTime `json:"updatedAt,omitempty"`
}

// Validate validates this line of accounting
func (m *LineOfAccounting) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaActvtyID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaAgncAcntngCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaAgncDsbrCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaAlltSnID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaBafID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaBdgtAcntClsNm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaBetCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaBgnDt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaBgtLnItmID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaBgtRstrCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaBgtSubActCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaClsRefID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaCstCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaCstCntrID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaCustNm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaDfAgncyAlctnRcpntID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaDocID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaDptID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaDtlRmbsmtSrcID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaEndDt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaFmsTrnsactnID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaFnclArID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaFnctPrsNm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaFndCntrID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaFndTyFgCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaHistStatCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaHsGdsCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaInstlAcntgActID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaJbOrdNm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaLclInstlID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaMajClmNm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaMajRmbsmtSrcID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaObjClsID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaOpAgncyID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaPgmElmntID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaPrjID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaSbaltmtRcpntID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaScrtyCoopCustCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaScrtyCoopDsgntrCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaScrtyCoopImplAgncCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaScrtyCoopLnItmID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaSpclIntrID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaSrvSrcID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaStatCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaSubAcntID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaSysID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaTnsfrDptNm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaTrnsnID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaTrsySfxTx(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaTskBdgtSblnTx(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaUic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaWkCntrRcpntNm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoaWrkOrdID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrgGrpDfasCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LineOfAccounting) validateCreatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("createdAt", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaActvtyID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaActvtyID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaActvtyID", "body", *m.LoaActvtyID, 11); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaAgncAcntngCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaAgncAcntngCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaAgncAcntngCd", "body", *m.LoaAgncAcntngCd, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaAgncDsbrCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaAgncDsbrCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaAgncDsbrCd", "body", *m.LoaAgncDsbrCd, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaAlltSnID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaAlltSnID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaAlltSnID", "body", *m.LoaAlltSnID, 5); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaBafID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaBafID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaBafID", "body", *m.LoaBafID, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaBdgtAcntClsNm(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaBdgtAcntClsNm) { // not required
		return nil
	}

	if err := validate.MaxLength("loaBdgtAcntClsNm", "body", *m.LoaBdgtAcntClsNm, 8); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaBetCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaBetCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaBetCd", "body", *m.LoaBetCd, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaBgnDt(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaBgnDt) { // not required
		return nil
	}

	if err := validate.FormatOf("loaBgnDt", "body", "date", m.LoaBgnDt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaBgtLnItmID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaBgtLnItmID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaBgtLnItmID", "body", *m.LoaBgtLnItmID, 8); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaBgtRstrCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaBgtRstrCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaBgtRstrCd", "body", *m.LoaBgtRstrCd, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaBgtSubActCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaBgtSubActCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaBgtSubActCd", "body", *m.LoaBgtSubActCd, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaClsRefID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaClsRefID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaClsRefID", "body", *m.LoaClsRefID, 2); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaCstCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaCstCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaCstCd", "body", *m.LoaCstCd, 16); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaCstCntrID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaCstCntrID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaCstCntrID", "body", *m.LoaCstCntrID, 16); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaCustNm(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaCustNm) { // not required
		return nil
	}

	if err := validate.MaxLength("loaCustNm", "body", *m.LoaCustNm, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaDfAgncyAlctnRcpntID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaDfAgncyAlctnRcpntID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaDfAgncyAlctnRcpntID", "body", *m.LoaDfAgncyAlctnRcpntID, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaDocID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaDocID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaDocID", "body", *m.LoaDocID, 15); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaDptID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaDptID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaDptID", "body", *m.LoaDptID, 2); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaDtlRmbsmtSrcID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaDtlRmbsmtSrcID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaDtlRmbsmtSrcID", "body", *m.LoaDtlRmbsmtSrcID, 3); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaEndDt(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaEndDt) { // not required
		return nil
	}

	if err := validate.FormatOf("loaEndDt", "body", "date", m.LoaEndDt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaFmsTrnsactnID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaFmsTrnsactnID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaFmsTrnsactnID", "body", *m.LoaFmsTrnsactnID, 12); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaFnclArID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaFnclArID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaFnclArID", "body", *m.LoaFnclArID, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaFnctPrsNm(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaFnctPrsNm) { // not required
		return nil
	}

	if err := validate.MaxLength("loaFnctPrsNm", "body", *m.LoaFnctPrsNm, 255); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaFndCntrID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaFndCntrID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaFndCntrID", "body", *m.LoaFndCntrID, 12); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaFndTyFgCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaFndTyFgCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaFndTyFgCd", "body", *m.LoaFndTyFgCd, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaHistStatCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaHistStatCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaHistStatCd", "body", *m.LoaHistStatCd, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaHsGdsCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaHsGdsCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaHsGdsCd", "body", *m.LoaHsGdsCd, 2); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaInstlAcntgActID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaInstlAcntgActID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaInstlAcntgActID", "body", *m.LoaInstlAcntgActID, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaJbOrdNm(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaJbOrdNm) { // not required
		return nil
	}

	if err := validate.MaxLength("loaJbOrdNm", "body", *m.LoaJbOrdNm, 10); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaLclInstlID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaLclInstlID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaLclInstlID", "body", *m.LoaLclInstlID, 18); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaMajClmNm(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaMajClmNm) { // not required
		return nil
	}

	if err := validate.MaxLength("loaMajClmNm", "body", *m.LoaMajClmNm, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaMajRmbsmtSrcID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaMajRmbsmtSrcID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaMajRmbsmtSrcID", "body", *m.LoaMajRmbsmtSrcID, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaObjClsID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaObjClsID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaObjClsID", "body", *m.LoaObjClsID, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaOpAgncyID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaOpAgncyID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaOpAgncyID", "body", *m.LoaOpAgncyID, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaPgmElmntID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaPgmElmntID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaPgmElmntID", "body", *m.LoaPgmElmntID, 12); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaPrjID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaPrjID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaPrjID", "body", *m.LoaPrjID, 12); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaSbaltmtRcpntID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaSbaltmtRcpntID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaSbaltmtRcpntID", "body", *m.LoaSbaltmtRcpntID, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaScrtyCoopCustCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaScrtyCoopCustCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaScrtyCoopCustCd", "body", *m.LoaScrtyCoopCustCd, 2); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaScrtyCoopDsgntrCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaScrtyCoopDsgntrCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaScrtyCoopDsgntrCd", "body", *m.LoaScrtyCoopDsgntrCd, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaScrtyCoopImplAgncCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaScrtyCoopImplAgncCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaScrtyCoopImplAgncCd", "body", *m.LoaScrtyCoopImplAgncCd, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaScrtyCoopLnItmID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaScrtyCoopLnItmID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaScrtyCoopLnItmID", "body", *m.LoaScrtyCoopLnItmID, 3); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaSpclIntrID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaSpclIntrID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaSpclIntrID", "body", *m.LoaSpclIntrID, 2); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaSrvSrcID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaSrvSrcID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaSrvSrcID", "body", *m.LoaSrvSrcID, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaStatCd(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaStatCd) { // not required
		return nil
	}

	if err := validate.MaxLength("loaStatCd", "body", *m.LoaStatCd, 1); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaSubAcntID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaSubAcntID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaSubAcntID", "body", *m.LoaSubAcntID, 3); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaSysID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaSysID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaSysId", "body", *m.LoaSysID, 20); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaTnsfrDptNm(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaTnsfrDptNm) { // not required
		return nil
	}

	if err := validate.MaxLength("loaTnsfrDptNm", "body", *m.LoaTnsfrDptNm, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaTrnsnID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaTrnsnID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaTrnsnID", "body", *m.LoaTrnsnID, 3); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaTrsySfxTx(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaTrsySfxTx) { // not required
		return nil
	}

	if err := validate.MaxLength("loaTrsySfxTx", "body", *m.LoaTrsySfxTx, 4); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaTskBdgtSblnTx(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaTskBdgtSblnTx) { // not required
		return nil
	}

	if err := validate.MaxLength("loaTskBdgtSblnTx", "body", *m.LoaTskBdgtSblnTx, 8); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaUic(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaUic) { // not required
		return nil
	}

	if err := validate.MaxLength("loaUic", "body", *m.LoaUic, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaWkCntrRcpntNm(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaWkCntrRcpntNm) { // not required
		return nil
	}

	if err := validate.MaxLength("loaWkCntrRcpntNm", "body", *m.LoaWkCntrRcpntNm, 6); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateLoaWrkOrdID(formats strfmt.Registry) error {
	if swag.IsZero(m.LoaWrkOrdID) { // not required
		return nil
	}

	if err := validate.MaxLength("loaWrkOrdID", "body", *m.LoaWrkOrdID, 16); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateOrgGrpDfasCd(formats strfmt.Registry) error {
	if swag.IsZero(m.OrgGrpDfasCd) { // not required
		return nil
	}

	if err := validate.MaxLength("orgGrpDfasCd", "body", *m.OrgGrpDfasCd, 2); err != nil {
		return err
	}

	return nil
}

func (m *LineOfAccounting) validateUpdatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("updatedAt", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this line of accounting based on context it is used
func (m *LineOfAccounting) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LineOfAccounting) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LineOfAccounting) UnmarshalBinary(b []byte) error {
	var res LineOfAccounting
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
