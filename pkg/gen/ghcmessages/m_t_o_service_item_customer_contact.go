// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MTOServiceItemCustomerContact Customer contact information for a destination SIT service item
//
// swagger:model MTOServiceItemCustomerContact
type MTOServiceItemCustomerContact struct {

	// Date of attempted contact by the prime.
	// Format: date
	DateOfContact strfmt.Date `json:"dateOfContact,omitempty"`

	// First available date that the Prime can deliver SIT service item.
	// Example: 2020-12-31
	// Format: date
	FirstAvailableDeliveryDate strfmt.Date `json:"firstAvailableDeliveryDate,omitempty"`

	// id
	// Example: 1f2270c7-7166-40ae-981e-b200ebdf3054
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// Time of attempted contact by the prime.
	// Example: 0400Z
	TimeMilitary string `json:"timeMilitary,omitempty"`

	// type
	Type CustomerContactType `json:"type,omitempty"`
}

// Validate validates this m t o service item customer contact
func (m *MTOServiceItemCustomerContact) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateOfContact(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstAvailableDeliveryDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MTOServiceItemCustomerContact) validateDateOfContact(formats strfmt.Registry) error {
	if swag.IsZero(m.DateOfContact) { // not required
		return nil
	}

	if err := validate.FormatOf("dateOfContact", "body", "date", m.DateOfContact.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MTOServiceItemCustomerContact) validateFirstAvailableDeliveryDate(formats strfmt.Registry) error {
	if swag.IsZero(m.FirstAvailableDeliveryDate) { // not required
		return nil
	}

	if err := validate.FormatOf("firstAvailableDeliveryDate", "body", "date", m.FirstAvailableDeliveryDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MTOServiceItemCustomerContact) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MTOServiceItemCustomerContact) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("type")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("type")
		}
		return err
	}

	return nil
}

// ContextValidate validate this m t o service item customer contact based on the context it is used
func (m *MTOServiceItemCustomerContact) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MTOServiceItemCustomerContact) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("type")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MTOServiceItemCustomerContact) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MTOServiceItemCustomerContact) UnmarshalBinary(b []byte) error {
	var res MTOServiceItemCustomerContact
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
