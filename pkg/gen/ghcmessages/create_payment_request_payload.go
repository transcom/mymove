// Code generated by go-swagger; DO NOT EDIT.

package ghcmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreatePaymentRequestPayload create payment request payload
// swagger:model createPaymentRequestPayload
type CreatePaymentRequestPayload struct {

	// is final
	IsFinal *bool `json:"isFinal,omitempty"`

	// move order ID
	// Format: uuid
	MoveOrderID strfmt.UUID `json:"moveOrderID,omitempty"`

	// proof of service package
	ProofOfServicePackage *ProofOfServicePackage `json:"proofOfServicePackage,omitempty"`

	// service item i ds
	ServiceItemIDs []strfmt.UUID `json:"serviceItemIDs"`
}

// Validate validates this create payment request payload
func (m *CreatePaymentRequestPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMoveOrderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProofOfServicePackage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceItemIDs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreatePaymentRequestPayload) validateMoveOrderID(formats strfmt.Registry) error {

	if swag.IsZero(m.MoveOrderID) { // not required
		return nil
	}

	if err := validate.FormatOf("moveOrderID", "body", "uuid", m.MoveOrderID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CreatePaymentRequestPayload) validateProofOfServicePackage(formats strfmt.Registry) error {

	if swag.IsZero(m.ProofOfServicePackage) { // not required
		return nil
	}

	if m.ProofOfServicePackage != nil {
		if err := m.ProofOfServicePackage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("proofOfServicePackage")
			}
			return err
		}
	}

	return nil
}

func (m *CreatePaymentRequestPayload) validateServiceItemIDs(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceItemIDs) { // not required
		return nil
	}

	for i := 0; i < len(m.ServiceItemIDs); i++ {

		if err := validate.FormatOf("serviceItemIDs"+"."+strconv.Itoa(i), "body", "uuid", m.ServiceItemIDs[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreatePaymentRequestPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreatePaymentRequestPayload) UnmarshalBinary(b []byte) error {
	var res CreatePaymentRequestPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
