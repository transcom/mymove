// Code generated by go-swagger; DO NOT EDIT.

package primev2api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime V2 API is a RESTful API that enables the Prime contractor to request\ninformation about upcoming moves, update the details and status of those moves,\nand make payment requests. It uses Mutual TLS for authentication procedures.\n\nAll endpoints are located at ` + "`" + `/prime/v2/` + "`" + `.\n",
    "title": "MilMove Prime V2 API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/prime/v2",
  "paths": {
    "/move-task-orders/{moveID}": {
      "get": {
        "description": "### Functionality\nThis endpoint gets an individual MoveTaskOrder by ID.\n\nIt will provide information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.\n\n**NOTE**: New version in v3. Version will return PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress\nsecondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode,\ndestinationPostalCode and secondaryDestinationPostalCode].\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "getMoveTaskOrder",
        "operationId": "getMoveTaskOrder",
        "parameters": [
          {
            "type": "string",
            "description": "UUID or MoveCode of move task order to use.",
            "name": "moveID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve an individual move task order.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/mto-shipments": {
      "post": {
        "description": "Creates a new shipment within the specified move. This endpoint should be used whenever the movers identify a\nneed for an additional shipment. The new shipment will be submitted to the TOO for review, and the TOO must\napprove it before the contractor can proceed with billing.\n\n**NOTE**: When creating a child shipment diversion, you can no longer specify the ` + "`" + `primeActualWeight` + "`" + `.\nIf you create a new diverted shipment with the ` + "`" + `diversion` + "`" + ` and ` + "`" + `divertedFromShipmentId` + "`" + ` parameter, it will automatically\ninherit the primeActualWeight of its ` + "`" + `divertedFromShipmentId` + "`" + ` parent. Payment requests created on a diverted shipment \"chain\" will utilize\nthe lowest weight possible in the chain to prevent overcharging as they are still separate shipments.\n\n**NOTE**: New version in v3. Version will accept PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress\nsecondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode,\ndestinationPostalCode and secondaryDestinationPostalCode].\n\n**WIP**: The Prime should be notified by a push notification whenever the TOO approves a shipment connected to\none of their moves. Otherwise, the Prime can fetch the related move using the\n[getMoveTaskOrder](#operation/getMoveTaskOrder) endpoint and see if this shipment has the status ` + "`" + `\"APPROVED\"` + "`" + `.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "createMTOShipment",
        "operationId": "createMTOShipment",
        "parameters": [
          {
            "x-examples": {
              "application/json": {
                "hhg": {
                  "summary": "HHG",
                  "value": {
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "pickupAddress": {
                      "city": "Muldraugh",
                      "postalCode": "40155",
                      "state": "KY",
                      "streetAddress1": "204 South Prospect Lane"
                    },
                    "requestedPickupDate": "2022-12-31",
                    "shipmentType": "HHG"
                  }
                },
                "nts": {
                  "summary": "NTS",
                  "value": {
                    "agents": [
                      {
                        "agentType": "RELEASING_AGENT",
                        "email": "edgar.taylor@example.com",
                        "firstName": "Edgar",
                        "lastName": "Taylor",
                        "phone": "555-555-5555"
                      }
                    ],
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "pickupAddress": {
                      "city": "Muldraugh",
                      "postalCode": "40155",
                      "state": "KY",
                      "streetAddress1": "204 South Prospect Lane"
                    },
                    "requestedPickupDate": "2022-12-31",
                    "shipmentType": "HHG_INTO_NTS_DOMESTIC"
                  }
                },
                "nts-r": {
                  "summary": "NTS Release",
                  "value": {
                    "agents": [
                      {
                        "agentType": "RECEIVING_AGENT",
                        "email": "edgar.taylor@example.com",
                        "firstName": "Edgar",
                        "lastName": "Taylor",
                        "phone": "555-555-5555"
                      }
                    ],
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "shipmentType": "HHG_OUTOF_NTS_DOMESTIC"
                  }
                },
                "ppm": {
                  "summary": "PPM",
                  "value": {
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "ppmShipment": {
                      "destinationPostalCode": "10001",
                      "estimatedWeight": 4999,
                      "expectedDepartureDate": "2022-10-01",
                      "hasProGear": false,
                      "pickupPostalCode": "90210",
                      "sitExpected": false
                    },
                    "shipmentType": "PPM"
                  }
                }
              }
            },
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateMTOShipment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a MTO shipment.",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/mto-shipments/{mtoShipmentID}": {
      "patch": {
        "description": "Updates an existing shipment for a move.\n\nNote that there are some restrictions on nested objects:\n\n* Service items: You cannot add or update service items using this endpoint. Please use [createMTOServiceItem](#operation/createMTOServiceItem) and [updateMTOServiceItem](#operation/updateMTOServiceItem) instead.\n* Agents: You cannot add or update agents using this endpoint. Please use [createMTOAgent](#operation/createMTOAgent) and [updateMTOAgent](#operation/updateMTOAgent) instead.\n* Addresses: You can add new addresses using this endpoint (and must use this endpoint to do so), but you cannot update existing ones. Please use [updateMTOShipmentAddress](#operation/updateMTOShipmentAddress) instead.\n\nThese restrictions are due to our [optimistic locking/concurrency control](https://transcom.github.io/mymove-docs/docs/dev/contributing/backend/use-optimistic-locking) mechanism.\n\nNote that some fields cannot be manually changed but will still be updated automatically, such as ` + "`" + `primeEstimatedWeightRecordedDate` + "`" + ` and ` + "`" + `requiredDeliveryDate` + "`" + `.\n\n**NOTE**: New version in v3. Version will accept PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress\nsecondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode,\ndestinationPostalCode and secondaryDestinationPostalCode].\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "updateMTOShipment",
        "operationId": "updateMTOShipment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the shipment being updated.",
            "name": "mtoShipmentID",
            "in": "path",
            "required": true
          },
          {
            "x-examples": {
              "application/json": {
                "hhg": {
                  "summary": "HHG",
                  "value": {
                    "actualPickupDate": "2022-12-29",
                    "actualProGearWeight": 1053,
                    "actualSpouseProGearWeight": 253,
                    "destinationAddress": {
                      "city": "Great Bend",
                      "postalCode": "13643",
                      "state": "NY",
                      "streetAddress1": "6622 Airport Way S",
                      "streetAddress2": "#1430"
                    },
                    "firstAvailableDeliveryDate": "2023-01-04",
                    "pointOfContact": "peyton.wing@example.com",
                    "primeActualWeight": 4500,
                    "primeEstimatedWeight": 4250,
                    "scheduledPickupDate": "2022-12-30"
                  }
                },
                "nts": {
                  "summary": "NTS",
                  "value": {
                    "actualPickupDate": "2022-12-29",
                    "actualProGearWeight": 1053,
                    "actualSpouseProGearWeight": 253,
                    "actualWeight": 4500,
                    "counselorRemarks": "Beware of dogs on property",
                    "estimatedWeight": 4250,
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "scheduledPickupDate": "2022-12-30"
                  }
                },
                "nts-r": {
                  "summary": "NTS Release",
                  "value": {
                    "actualProGearWeight": 1053,
                    "actualSpouseProGearWeight": 253,
                    "destinationAddress": {
                      "city": "San Antonio",
                      "postalCode": "78245",
                      "state": "TX",
                      "streetAddress1": "812 S 129th Street"
                    },
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "ntsRecordedWeight": 4500
                  }
                },
                "ppm": {
                  "summary": "PPM",
                  "value": {
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "ppmShipment": {
                      "hasProGear": true,
                      "proGearWeight": 830,
                      "sitEstimatedDepartureDate": "2022-10-13",
                      "sitEstimatedEntryDate": "2022-10-06",
                      "sitEstimatedWeight": 1760,
                      "sitExpected": true,
                      "sitLocation": "DESTINATION",
                      "spouseProGearWeight": 366
                    }
                  }
                }
              }
            },
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOShipment"
            }
          },
          {
            "$ref": "#/parameters/ifMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the MTO shipment.",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "412": {
            "$ref": "#/responses/PreconditionFailed"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "A postal address",
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "county": {
          "type": "string",
          "title": "County",
          "x-nullable": true,
          "example": "LOS ANGELES"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CreateMTOShipment": {
      "type": "object",
      "required": [
        "moveTaskOrderID",
        "shipmentType"
      ],
      "properties": {
        "agents": {
          "$ref": "#/definitions/MTOAgents"
        },
        "counselorRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "counselor approved"
        },
        "customerRemarks": {
          "description": "The customer can use the customer remarks field to inform the services counselor and the movers about any\nspecial circumstances for this shipment. Typical examples:\n  * bulky or fragile items,\n  * weapons,\n  * access info for their address.\n\nCustomer enters this information during onboarding. Optional field.\n",
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "description": "Where the movers should deliver this shipment.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "diversion": {
          "description": "This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion. When this boolean is true, you must link it to a parent shipment with the divertedFromShipmentId parameter.\n",
          "type": "boolean"
        },
        "divertedFromShipmentId": {
          "description": "The ID of the shipment this is a diversion from. Aka the \"Parent\" shipment. The diversion boolean must be true if this parameter is supplied in the request. If provided, and if the diverted from shipment is also a diversion, the previous should must then also have a parent ID.\n",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "description": "The ID of the move this new shipment is for.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoServiceItems": {
          "description": "A list of service items connected to this shipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "pickupAddress": {
          "description": "The address where the movers should pick up this shipment.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "pointOfContact": {
          "description": "Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.\n",
          "type": "string"
        },
        "ppmShipment": {
          "$ref": "#/definitions/CreatePPMShipment"
        },
        "primeEstimatedWeight": {
          "description": "The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contractor will need to contact the TOO to change it.\n",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "requestedPickupDate": {
          "description": "The customer's preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the pack date, are derived from this date.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        }
      }
    },
    "CreatePPMShipment": {
      "description": "Creation object containing the ` + "`" + `PPM` + "`" + ` shipmentType specific data, not used for other shipment types.",
      "type": "object",
      "required": [
        "expectedDepartureDate",
        "pickupPostalCode",
        "destinationPostalCode",
        "sitExpected",
        "estimatedWeight",
        "hasProGear"
      ],
      "properties": {
        "destinationPostalCode": {
          "description": "The postal code of the destination location where goods are being delivered to.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "estimatedWeight": {
          "description": "The estimated weight of the PPM shipment goods being moved in pounds.",
          "type": "integer",
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to begin moving from their origin.\n",
          "type": "string",
          "format": "date"
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear for themselves or their spouse.\n",
          "type": "boolean"
        },
        "pickupPostalCode": {
          "description": "The postal code of the origin location where goods are being moved from.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "proGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to the service member in pounds.",
          "type": "integer",
          "x-nullable": true
        },
        "secondaryDestinationPostalCode": {
          "description": "An optional secondary location near the destination where goods will be dropped off.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "description": "An optional secondary pickup location near the origin where additional goods exist.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "sitEstimatedDepartureDate": {
          "description": "The date that goods will exit the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedEntryDate": {
          "description": "The date that goods will first enter the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedWeight": {
          "description": "The estimated weight of the goods being put into storage in pounds.",
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "sitExpected": {
          "description": "Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.\n\nMust be set to ` + "`" + `true` + "`" + ` when providing ` + "`" + `sitLocation` + "`" + `, ` + "`" + `sitEstimatedWeight` + "`" + `, ` + "`" + `sitEstimatedEntryDate` + "`" + `, and ` + "`" + `sitEstimatedDepartureDate` + "`" + ` values to calculate the ` + "`" + `sitEstimatedCost` + "`" + `.\n",
          "type": "boolean"
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/SITLocationType"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "spouseProGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to a spouse in pounds.",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "CreateSITAddressUpdateRequest": {
      "description": "CreateSITAddressUpdateRequest contains the fields required for the prime to create a SIT address update request.",
      "type": "object",
      "required": [
        "contractorRemarks"
      ],
      "properties": {
        "contractorRemarks": {
          "type": "string",
          "example": "Customer reached out to me this week \u0026 let me know they want to move closer to family."
        },
        "mtoServiceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "CreateSITExtension": {
      "description": "CreateSITExtension contains the fields required for the prime to create a SIT Extension request.",
      "type": "object",
      "required": [
        "requestReason",
        "contractorRemarks",
        "requestedDays"
      ],
      "properties": {
        "contractorRemarks": {
          "type": "string",
          "example": "We need SIT additional days. The customer has not found a house yet."
        },
        "requestReason": {
          "type": "string",
          "enum": [
            "SERIOUS_ILLNESS_MEMBER",
            "SERIOUS_ILLNESS_DEPENDENT",
            "IMPENDING_ASSIGNEMENT",
            "DIRECTED_TEMPORARY_DUTY",
            "NONAVAILABILITY_OF_CIVILIAN_HOUSING",
            "AWAITING_COMPLETION_OF_RESIDENCE",
            "OTHER"
          ]
        },
        "requestedDays": {
          "type": "integer",
          "minimum": 1,
          "example": 30
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "example": "COAST_GUARD"
        },
        "currentAddress": {
          "$ref": "#/definitions/Address"
        },
        "dodID": {
          "type": "string"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "example": "fake@example.com"
        },
        "firstName": {
          "type": "string",
          "example": "Vanya"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lastName": {
          "type": "string",
          "example": "Petrovna"
        },
        "phone": {
          "type": "string",
          "format": "telephone"
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "DestinationType": {
      "type": "string",
      "title": "Destination Type",
      "enum": [
        "HOME_OF_RECORD",
        "HOME_OF_SELECTION",
        "PLACE_ENTERED_ACTIVE_DUTY",
        "OTHER_THAN_AUTHORIZED"
      ],
      "x-nullable": true,
      "example": "OTHER_THAN_AUTHORIZED"
    },
    "DutyLocation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "addressID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "gunSafe": {
          "type": "boolean",
          "example": false
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "organizationalClothingAndIndividualEquipment": {
          "type": "boolean",
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "requiredMedicalEquipmentWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "title",
        "detail"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MTOAgent": {
      "type": "object",
      "properties": {
        "agentType": {
          "$ref": "#/definitions/MTOAgentType"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})?$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "The ID of the agent.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "mtoShipmentID": {
          "description": "The ID of the shipment this agent is permitted to release/receive.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^([2-9]\\d{2}-\\d{3}-\\d{4})?$",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOAgentType": {
      "description": "The type for this agent. ` + "`" + `RELEASING` + "`" + ` means they have authority on pickup, ` + "`" + `RECEIVING` + "`" + ` means they can receive the shipment on delivery.\n",
      "type": "string",
      "title": "Agent Type",
      "enum": [
        "RELEASING_AGENT",
        "RECEIVING_AGENT"
      ],
      "example": "RELEASING_AGENT"
    },
    "MTOAgents": {
      "description": "A list of the agents for a shipment. Agents are the people who the Prime contractor recognize as permitted to release (in the case of pickup) or receive (on delivery) a shipment.\n",
      "type": "array",
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/MTOAgent"
      }
    },
    "MTOServiceItem": {
      "description": "MTOServiceItem describes a base type of a service item. Polymorphic type.",
      "type": "object",
      "required": [
        "modelType",
        "moveTaskOrderID"
      ],
      "properties": {
        "eTag": {
          "description": "A hash unique to this service item that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the service item.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "modelType": {
          "$ref": "#/definitions/MTOServiceItemModelType"
        },
        "moveTaskOrderID": {
          "description": "The ID of the move for this service item.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "description": "The ID of the shipment this service is for, if any. Optional.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "description": "The full descriptive name of the service.",
          "type": "string",
          "readOnly": true
        },
        "rejectionReason": {
          "description": "The reason why this service item was rejected by the TOO.",
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "example": "item was too heavy"
        },
        "serviceRequestDocuments": {
          "$ref": "#/definitions/ServiceRequestDocuments"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        }
      },
      "discriminator": "modelType"
    },
    "MTOServiceItemBasic": {
      "description": "Describes a basic service item subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode"
          ],
          "properties": {
            "reServiceCode": {
              "$ref": "#/definitions/ReServiceCode"
            }
          }
        }
      ]
    },
    "MTOServiceItemDestSIT": {
      "description": "Describes a domestic destination SIT service item. Subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode",
            "sitEntryDate",
            "reason"
          ],
          "properties": {
            "dateOfContact1": {
              "description": "Date of attempted contact by the prime corresponding to ` + "`" + `timeMilitary1` + "`" + `.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "dateOfContact2": {
              "description": "Date of attempted contact by the prime corresponding to ` + "`" + `timeMilitary2` + "`" + `.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate1": {
              "description": "First available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate2": {
              "description": "Second available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DDFSIT",
                "DDASIT"
              ]
            },
            "reason": {
              "description": "The reason item has been placed in SIT.\n",
              "type": "string",
              "x-nullable": true,
              "x-omitempty": false
            },
            "sitAddressUpdates": {
              "$ref": "#/definitions/SitAddressUpdates"
            },
            "sitCustomerContacted": {
              "description": "Date when the customer contacted the prime for a delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDepartureDate": {
              "description": "Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDestinationFinalAddress": {
              "$ref": "#/definitions/Address"
            },
            "sitEntryDate": {
              "description": "Entry date for the SIT",
              "type": "string",
              "format": "date"
            },
            "sitRequestedDelivery": {
              "description": "Date when the customer has requested delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "timeMilitary1": {
              "description": "Time of attempted contact corresponding to ` + "`" + `dateOfContact1` + "`" + `, in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            },
            "timeMilitary2": {
              "description": "Time of attempted contact corresponding to ` + "`" + `dateOfContact2` + "`" + `, in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            }
          }
        }
      ]
    },
    "MTOServiceItemDimension": {
      "description": "The dimensions for either the item or the crate associated with a crating service item.",
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "height": {
          "description": "Height in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "length": {
          "description": "Length in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        },
        "width": {
          "description": "Width in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        }
      }
    },
    "MTOServiceItemDomesticCrating": {
      "description": "Describes a domestic crating/uncrating service item subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode",
            "item",
            "crate",
            "description"
          ],
          "properties": {
            "crate": {
              "description": "The dimensions for the crate the item will be shipped in.",
              "allOf": [
                {
                  "$ref": "#/definitions/MTOServiceItemDimension"
                }
              ]
            },
            "description": {
              "description": "A description of the item being crated.",
              "type": "string",
              "example": "Decorated horse head to be crated."
            },
            "item": {
              "description": "The dimensions of the item being crated.",
              "allOf": [
                {
                  "$ref": "#/definitions/MTOServiceItemDimension"
                }
              ]
            },
            "reServiceCode": {
              "description": "A unique code for the service item. Indicates if the service is for crating (DCRT) or uncrating (DUCRT).",
              "type": "string",
              "enum": [
                "DCRT",
                "DUCRT"
              ]
            },
            "reason": {
              "description": "The contractor's explanation for why an item needed to be crated or uncrated. Used by the TOO while deciding to approve or reject the service item.\n",
              "type": "string",
              "x-nullable": true,
              "x-omitempty": false,
              "example": "Storage items need to be picked up"
            },
            "standaloneCrate": {
              "type": "boolean",
              "x-nullable": true
            }
          }
        }
      ]
    },
    "MTOServiceItemModelType": {
      "description": "Describes all model sub-types for a MTOServiceItem model.\n\nUsing this list, choose the correct modelType in the dropdown, corresponding to the service item type.\n  * DOFSIT, DOASIT - MTOServiceItemOriginSIT\n  * DDFSIT, DDASIT - MTOServiceItemDestSIT\n  * DOSHUT, DDSHUT - MTOServiceItemShuttle\n  * DCRT, DUCRT - MTOServiceItemDomesticCrating\n\nThe documentation will then update with the supported fields.\n",
      "type": "string",
      "enum": [
        "MTOServiceItemBasic",
        "MTOServiceItemOriginSIT",
        "MTOServiceItemDestSIT",
        "MTOServiceItemShuttle",
        "MTOServiceItemDomesticCrating"
      ]
    },
    "MTOServiceItemOriginSIT": {
      "description": "Describes a domestic origin SIT service item. Subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode",
            "reason",
            "sitPostalCode",
            "sitEntryDate"
          ],
          "properties": {
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DOFSIT",
                "DOASIT"
              ]
            },
            "reason": {
              "description": "Explanation of why Prime is picking up SIT item.",
              "type": "string",
              "example": "Storage items need to be picked up"
            },
            "requestApprovalsRequestedStatus": {
              "type": "boolean"
            },
            "sitCustomerContacted": {
              "description": "Date when the customer contacted the prime for a delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDepartureDate": {
              "description": "Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitEntryDate": {
              "description": "Entry date for the SIT",
              "type": "string",
              "format": "date"
            },
            "sitHHGActualOrigin": {
              "$ref": "#/definitions/Address"
            },
            "sitHHGOriginalOrigin": {
              "$ref": "#/definitions/Address"
            },
            "sitPostalCode": {
              "type": "string",
              "format": "zip",
              "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
              "example": "90210"
            },
            "sitRequestedDelivery": {
              "description": "Date when the customer has requested delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            }
          }
        }
      ]
    },
    "MTOServiceItemShuttle": {
      "description": "Describes a shuttle service item.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reason",
            "reServiceCode"
          ],
          "properties": {
            "actualWeight": {
              "description": "A record of the actual weight that was shuttled. Provided by the movers, based on weight tickets.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4000
            },
            "estimatedWeight": {
              "description": "An estimate of how much weight from a shipment will be included in the shuttling service.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4200
            },
            "reServiceCode": {
              "description": "A unique code for the service item. Indicates if shuttling is requested for the shipment origin (` + "`" + `DOSHUT` + "`" + `) or destination (` + "`" + `DDSHUT` + "`" + `).\n",
              "type": "string",
              "enum": [
                "DOSHUT",
                "DDSHUT"
              ]
            },
            "reason": {
              "description": "The contractor's explanation for why a shuttle service is requested. Used by the TOO while deciding to approve or reject the service item.\n",
              "type": "string",
              "example": "Storage items need to be picked up."
            }
          }
        }
      ]
    },
    "MTOServiceItemStatus": {
      "description": "The status of a service item, indicating where it is in the TOO's approval process.",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "REJECTED"
      ],
      "readOnly": true
    },
    "MTOShipment": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MTOShipmentWithoutServiceItems"
        }
      ],
      "properties": {
        "mtoServiceItems": {
          "description": "A list of service items connected to this shipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          },
          "readOnly": true
        }
      }
    },
    "MTOShipmentType": {
      "description": "The type of shipment.\n  * ` + "`" + `HHG` + "`" + ` = Household goods move\n  * ` + "`" + `HHG_INTO_NTS_DOMESTIC` + "`" + ` = HHG into Non-temporary storage (NTS)\n  * ` + "`" + `HHG_OUTOF_NTS_DOMESTIC` + "`" + ` = HHG out of Non-temporary storage (NTS Release)\n  * ` + "`" + `PPM` + "`" + ` = Personally Procured Move also known as Do It Yourself (DITY)\n",
      "type": "string",
      "title": "Shipment Type",
      "enum": [
        "BOAT_HAUL_AWAY",
        "BOAT_TOW_AWAY",
        "HHG",
        "HHG_INTO_NTS_DOMESTIC",
        "HHG_OUTOF_NTS_DOMESTIC",
        "INTERNATIONAL_HHG",
        "INTERNATIONAL_UB",
        "MOTORHOME",
        "PPM"
      ],
      "x-display-value": {
        "HHG": "Household goods move (HHG)",
        "HHG_INTO_NTS_DOMESTIC": "HHG into Non-temporary storage (NTS)",
        "HHG_OUTOF_NTS_DOMESTIC": "HHG out of Non-temporary storage (NTS Release)",
        "PPM": "Personally Procured Move also known as Do It Yourself (DITY)"
      },
      "example": "HHG"
    },
    "MTOShipmentWithoutServiceItems": {
      "type": "object",
      "properties": {
        "actualDeliveryDate": {
          "description": "The date when the Prime contractor actually delivered the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualPickupDate": {
          "description": "The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualProGearWeight": {
          "description": "The actual weight of any pro gear being shipped.\n",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualSpouseProGearWeight": {
          "description": "The actual weight of any spouse pro gear being shipped.\n",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "agents": {
          "$ref": "#/definitions/MTOAgents"
        },
        "approvedDate": {
          "description": "The date when the Task Ordering Officer first approved this shipment for the move.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "counselorRemarks": {
          "description": "The counselor can use the counselor remarks field to inform the movers about any\nspecial circumstances for this shipment. Typical examples:\n  * bulky or fragile items,\n  * weapons,\n  * access info for their address.\n\nCounselors enters this information when creating or editing an MTO Shipment. Optional field.\n",
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "example": "handle with care"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "customerRemarks": {
          "description": "The customer can use the customer remarks field to inform the services counselor and the movers about any\nspecial circumstances for this shipment. Typical examples:\n  * bulky or fragile items,\n  * weapons,\n  * access info for their address.\n\nCustomer enters this information during onboarding. Optional field.\n",
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "example": "handle with care"
        },
        "deliveryAddressUpdate": {
          "$ref": "#/definitions/ShipmentAddressUpdate"
        },
        "destinationAddress": {
          "description": "Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details\nduring onboarding, if they know their new address already.\n\nMay be blank when entered by the customer, required when entered by the Prime. May not represent the true\nfinal destination due to the shipment being diverted or placed in SIT.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "destinationSitAuthEndDate": {
          "description": "The SIT authorized end date for destination SIT.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "destinationType": {
          "$ref": "#/definitions/DestinationType"
        },
        "diversion": {
          "description": "This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion.\n",
          "type": "boolean"
        },
        "eTag": {
          "description": "A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "firstAvailableDeliveryDate": {
          "description": "The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "description": "The ID of the shipment.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "description": "The ID of the move for this shipment.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "ntsRecordedWeight": {
          "description": "The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 4500
        },
        "originSitAuthEndDate": {
          "description": "The SIT authorized end date for origin SIT.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "pickupAddress": {
          "description": "The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "pointOfContact": {
          "description": "Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.\n",
          "type": "string"
        },
        "ppmShipment": {
          "$ref": "#/definitions/PPMShipment"
        },
        "primeActualWeight": {
          "description": "The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "primeEstimatedWeight": {
          "description": "The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it.\n",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "primeEstimatedWeightRecordedDate": {
          "description": "The date when the Prime contractor recorded the shipment's estimated weight.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "requestedDeliveryDate": {
          "description": "The customer's preferred delivery date.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "requestedPickupDate": {
          "description": "The date the customer selects during onboarding as their preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the pack date, are derived from this date.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "requiredDeliveryDate": {
          "description": "The latest date by which the Prime can deliver a customer's shipment without violating the contract. This is calculated based on weight, distance, and the scheduled pickup date. It cannot be modified.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "reweigh": {
          "$ref": "#/definitions/Reweigh"
        },
        "scheduledDeliveryDate": {
          "description": "The date the Prime contractor scheduled to deliver this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "scheduledPickupDate": {
          "description": "The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "secondaryDeliveryAddress": {
          "description": "A second delivery address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "secondaryPickupAddress": {
          "description": "A second pickup address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        },
        "sitExtensions": {
          "$ref": "#/definitions/SITExtensions"
        },
        "status": {
          "description": "The status of a shipment, indicating where it is in the TOO's approval process. Can only be updated by the contractor in special circumstances.\n",
          "type": "string",
          "enum": [
            "SUBMITTED",
            "APPROVED",
            "REJECTED",
            "CANCELLATION_REQUESTED",
            "CANCELED",
            "DIVERSION_REQUESTED"
          ],
          "readOnly": true
        },
        "storageFacility": {
          "allOf": [
            {
              "x-nullable": true
            },
            {
              "$ref": "#/definitions/StorageFacility"
            }
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOShipmentsWithoutServiceObjects": {
      "description": "A list of shipments without their associated service items.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipmentWithoutServiceItems"
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "required": [
        "mtoShipments",
        "mtoServiceItems",
        "paymentRequests"
      ],
      "properties": {
        "availableToPrimeAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "readOnly": true
        },
        "contractNumber": {
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "excessWeightAcknowledgedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "excessWeightQualifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "excessWeightUploadId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "a502b4f1-b9c4-4faf-8bdd-68292501bf26"
        },
        "moveCode": {
          "type": "string",
          "readOnly": true,
          "example": "HYXFJF"
        },
        "mtoServiceItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mtoShipments": {
          "$ref": "#/definitions/MTOShipmentsWithoutServiceObjects"
        },
        "order": {
          "$ref": "#/definitions/Order"
        },
        "orderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequests": {
          "$ref": "#/definitions/PaymentRequests"
        },
        "ppmEstimatedWeight": {
          "type": "integer"
        },
        "ppmType": {
          "type": "string",
          "enum": [
            "PARTIAL",
            "FULL"
          ]
        },
        "primeCounselingCompletedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "readOnly": true
        },
        "referenceId": {
          "type": "string",
          "example": "1001-3456"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "orderNumber",
        "rank",
        "linesOfAccounting"
      ],
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "customerID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "destinationDutyLocation": {
          "$ref": "#/definitions/DutyLocation"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "linesOfAccounting": {
          "type": "string"
        },
        "methodOfPayment": {
          "type": "string",
          "readOnly": true
        },
        "naics": {
          "type": "string",
          "readOnly": true
        },
        "orderNumber": {
          "type": "string"
        },
        "ordersType": {
          "$ref": "#/definitions/OrdersType"
        },
        "originDutyLocation": {
          "$ref": "#/definitions/DutyLocation"
        },
        "originDutyLocationGBLOC": {
          "type": "string",
          "example": "KKFA"
        },
        "packingAndShippingInstructions": {
          "type": "string",
          "readOnly": true
        },
        "rank": {
          "type": "string",
          "example": "E_5"
        },
        "reportByDate": {
          "type": "string",
          "format": "date"
        },
        "supplyAndServicesCostEstimate": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrdersType": {
      "type": "string",
      "title": "Orders type",
      "enum": [
        "PERMANENT_CHANGE_OF_STATION",
        "LOCAL_MOVE",
        "RETIREMENT",
        "SEPARATION",
        "WOUNDED_WARRIOR",
        "BLUEBARK",
        "SAFETY"
      ],
      "x-display-value": {
        "BLUEBARK": "BLUEBARK",
        "LOCAL_MOVE": "Local Move",
        "PERMANENT_CHANGE_OF_STATION": "Permanent Change Of Station",
        "RETIREMENT": "Retirement",
        "SAFETY": "Safety",
        "SEPARATION": "Separation",
        "WOUNDED_WARRIOR": "Wounded Warrior"
      }
    },
    "PPMShipment": {
      "description": "A personally procured move is a type of shipment that a service member moves themselves.",
      "required": [
        "id",
        "shipmentId",
        "createdAt",
        "status",
        "expectedDepartureDate",
        "pickupPostalCode",
        "destinationPostalCode",
        "sitExpected",
        "eTag"
      ],
      "properties": {
        "actualDestinationPostalCode": {
          "description": "The actual postal code where the PPM shipment ended. To be filled once the customer has moved the shipment.\n",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "actualMoveDate": {
          "description": "The actual start date of when the PPM shipment left the origin.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualPickupPostalCode": {
          "description": "The actual postal code where the PPM shipment started. To be filled once the customer has moved the shipment.\n",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "advanceAmountReceived": {
          "description": "The amount received for an advance, or null if no advance is received.\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "advanceAmountRequested": {
          "description": "The amount requested as an advance by the service member, up to a maximum percentage of the estimated incentive.\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "approvedAt": {
          "description": "The timestamp of when the shipment was approved and the service member can begin their move.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "createdAt": {
          "description": "The timestamp of when the PPM shipment was created (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "destinationPostalCode": {
          "description": "The postal code of the destination location where goods are being delivered to.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "eTag": {
          "description": "A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "estimatedIncentive": {
          "description": "The estimated amount the government will pay the service member to move their belongings based on the moving date, locations, and shipment weight.",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "estimatedWeight": {
          "description": "The estimated weight of the PPM shipment goods being moved in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to begin moving from their origin.\n",
          "type": "string",
          "format": "date"
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear for themselves or their spouse.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasReceivedAdvance": {
          "description": "Indicates whether an advance was received for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasRequestedAdvance": {
          "description": "Indicates whether an advance has been requested for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "description": "The primary unique identifier of this PPM shipment",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupPostalCode": {
          "description": "The postal code of the origin location where goods are being moved from.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "proGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to the service member in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "reviewedAt": {
          "description": "The timestamp of when the Service Counselor has reviewed all of the closeout documents.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "secondaryDestinationPostalCode": {
          "description": "An optional secondary location near the destination where goods will be dropped off.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "description": "An optional secondary pickup location near the origin where additional goods exist.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "shipmentId": {
          "description": "The id of the parent MTOShipment record",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "sitEstimatedCost": {
          "description": "The estimated amount that the government will pay the service member to put their goods into storage. This estimated storage cost is separate from the estimated incentive.",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedDepartureDate": {
          "description": "The date that goods will exit the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedEntryDate": {
          "description": "The date that goods will first enter the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedWeight": {
          "description": "The estimated weight of the goods being put into storage in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        },
        "sitExpected": {
          "description": "Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.\n\nMust be set to ` + "`" + `true` + "`" + ` when providing ` + "`" + `sitLocation` + "`" + `, ` + "`" + `sitEstimatedWeight` + "`" + `, ` + "`" + `sitEstimatedEntryDate` + "`" + `, and ` + "`" + `sitEstimatedDepartureDate` + "`" + ` values to calculate the ` + "`" + `sitEstimatedCost` + "`" + `.\n",
          "type": "boolean"
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/SITLocationType"
            },
            {
              "x-nullable": true
            },
            {
              "x-omitempty": false
            }
          ]
        },
        "spouseProGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to a spouse in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "status": {
          "$ref": "#/definitions/PPMShipmentStatus"
        },
        "submittedAt": {
          "description": "The timestamp of when the customer submitted their PPM documentation to the counselor for review.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "updatedAt": {
          "description": "The timestamp of when a property of this object was last updated (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "x-nullable": true
    },
    "PPMShipmentStatus": {
      "description": "Status of the PPM Shipment:\n  * **DRAFT**: The customer has created the PPM shipment but has not yet submitted their move for counseling.\n  * **SUBMITTED**: The shipment belongs to a move that has been submitted by the customer or has been created by a Service Counselor or Prime Contractor for a submitted move.\n  * **WAITING_ON_CUSTOMER**: The PPM shipment has been approved and the customer may now provide their actual move closeout information and documentation required to get paid.\n  * **NEEDS_ADVANCE_APPROVAL**: The shipment was counseled by the Prime Contractor and approved but an advance was requested so will need further financial approval from the government.\n  * **NEEDS_CLOSEOUT**: The customer has provided their closeout weight tickets, receipts, and expenses and certified it for the Service Counselor to approve, exclude or reject.\n  * **CLOSEOUT_COMPLETE**: The Service Counselor has reviewed all of the customer's PPM closeout documentation and authorizes the customer can download and submit their finalized SSW packet.\n",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "WAITING_ON_CUSTOMER",
        "NEEDS_ADVANCE_APPROVAL",
        "NEEDS_CLOSEOUT",
        "CLOSEOUT_COMPLETE"
      ],
      "readOnly": true
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestNumber": {
          "type": "string",
          "readOnly": true,
          "example": "1234-5678-1"
        },
        "paymentServiceItems": {
          "$ref": "#/definitions/PaymentServiceItems"
        },
        "proofOfServiceDocs": {
          "$ref": "#/definitions/ProofOfServiceDocs"
        },
        "recalculationOfPaymentRequestID": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID",
        "EDI_ERROR",
        "DEPRECATED"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "PaymentServiceItem": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mtoServiceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentServiceItemParams": {
          "$ref": "#/definitions/PaymentServiceItemParams"
        },
        "priceCents": {
          "type": "integer",
          "format": "cents",
          "title": "Price of the service item in cents",
          "x-nullable": true
        },
        "referenceID": {
          "format": "string",
          "readOnly": true,
          "example": "1234-5678-c56a4180"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentServiceItemStatus"
        }
      }
    },
    "PaymentServiceItemParam": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "key": {
          "$ref": "#/definitions/ServiceItemParamName"
        },
        "origin": {
          "$ref": "#/definitions/ServiceItemParamOrigin"
        },
        "paymentServiceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "type": {
          "$ref": "#/definitions/ServiceItemParamType"
        },
        "value": {
          "type": "string",
          "example": "3025"
        }
      }
    },
    "PaymentServiceItemParams": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentServiceItemParam"
      }
    },
    "PaymentServiceItemStatus": {
      "type": "string",
      "title": "Payment Service Item Status",
      "enum": [
        "REQUESTED",
        "APPROVED",
        "DENIED",
        "SENT_TO_GEX",
        "PAID",
        "EDI_ERROR"
      ]
    },
    "PaymentServiceItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentServiceItem"
      }
    },
    "ProofOfServiceDoc": {
      "type": "object",
      "properties": {
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadWithOmissions"
          }
        }
      }
    },
    "ProofOfServiceDocs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ProofOfServiceDoc"
      }
    },
    "ReServiceCode": {
      "description": "This is the full list of service items that can be found on a shipment. Not all service items\nmay be requested by the Prime, but may be returned in a response.\n\nDocumentation of all the service items will be provided.\n",
      "type": "string",
      "enum": [
        "CS",
        "DBHF",
        "DBTF",
        "DCRT",
        "DDASIT",
        "DDDSIT",
        "DDFSIT",
        "DDP",
        "DDSHUT",
        "DLH",
        "DMHF",
        "DNPK",
        "DOASIT",
        "DOFSIT",
        "DOP",
        "DOPSIT",
        "DOSHUT",
        "DPK",
        "DSH",
        "DUCRT",
        "DUPK",
        "FSC",
        "IBHF",
        "IBTF",
        "ICOLH",
        "ICOUB",
        "ICRT",
        "ICRTSA",
        "IDASIT",
        "IDDSIT",
        "IDFSIT",
        "IDSHUT",
        "IHPK",
        "IHUPK",
        "INPK",
        "IOASIT",
        "IOCLH",
        "IOCUB",
        "IOFSIT",
        "IOOLH",
        "IOOUB",
        "IOPSIT",
        "IOSHUT",
        "IUBPK",
        "IUBUPK",
        "IUCRT",
        "MS",
        "NSTH",
        "NSTUB"
      ]
    },
    "Reweigh": {
      "description": "A reweigh  is when a shipment is weighed for a second time due to the request of a customer, the contractor, system or TOO.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "requestedAt": {
          "type": "string",
          "format": "date-time"
        },
        "requestedBy": {
          "$ref": "#/definitions/ReweighRequester"
        },
        "shipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "verificationProvidedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "verificationReason": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The reweigh was not performed due to some justification provided by the Prime"
        },
        "weight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        }
      }
    },
    "ReweighRequester": {
      "type": "string",
      "enum": [
        "CUSTOMER",
        "PRIME",
        "SYSTEM",
        "TOO"
      ]
    },
    "SITExtension": {
      "description": "A storage in transit (SIT) Extension is a request for an increase in the billable number of days a shipment is allowed to be in SIT.",
      "type": "object",
      "properties": {
        "approvedDays": {
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 30
        },
        "contractorRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "We need SIT additional days. The customer has not found a house yet."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "decisionDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "officeRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false
        },
        "requestReason": {
          "type": "string",
          "enum": [
            "SERIOUS_ILLNESS_MEMBER",
            "SERIOUS_ILLNESS_DEPENDENT",
            "IMPENDING_ASSIGNEMENT",
            "DIRECTED_TEMPORARY_DUTY",
            "NONAVAILABILITY_OF_CIVILIAN_HOUSING",
            "AWAITING_COMPLETION_OF_RESIDENCE",
            "OTHER"
          ]
        },
        "requestedDays": {
          "type": "integer",
          "example": 30
        },
        "status": {
          "enum": [
            "PENDING",
            "APPROVED",
            "DENIED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "SITExtensions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SITExtension"
      }
    },
    "SITLocationType": {
      "description": "The list of SIT location types.",
      "type": "string",
      "enum": [
        "ORIGIN",
        "DESTINATION"
      ]
    },
    "ServiceItemParamName": {
      "type": "string",
      "enum": [
        "ActualPickupDate",
        "ContractCode",
        "ContractYearName",
        "CubicFeetBilled",
        "CubicFeetCrating",
        "DimensionHeight",
        "DimensionLength",
        "DimensionWidth",
        "DistanceZip",
        "DistanceZipSITDest",
        "DistanceZipSITOrigin",
        "EIAFuelPrice",
        "EscalationCompounded",
        "FSCMultiplier",
        "FSCPriceDifferenceInCents",
        "FSCWeightBasedDistanceMultiplier",
        "IsPeak",
        "MarketDest",
        "MarketOrigin",
        "MTOAvailableToPrimeAt",
        "NTSPackingFactor",
        "NumberDaysSIT",
        "PriceAreaDest",
        "PriceAreaIntlDest",
        "PriceAreaIntlOrigin",
        "PriceAreaOrigin",
        "PriceRateOrFactor",
        "PSI_LinehaulDom",
        "PSI_LinehaulDomPrice",
        "PSI_LinehaulShort",
        "PSI_LinehaulShortPrice",
        "PSI_PriceDomDest",
        "PSI_PriceDomDestPrice",
        "PSI_PriceDomOrigin",
        "PSI_PriceDomOriginPrice",
        "PSI_ShippingLinehaulIntlCO",
        "PSI_ShippingLinehaulIntlCOPrice",
        "PSI_ShippingLinehaulIntlOC",
        "PSI_ShippingLinehaulIntlOCPrice",
        "PSI_ShippingLinehaulIntlOO",
        "PSI_ShippingLinehaulIntlOOPrice",
        "RateAreaNonStdDest",
        "RateAreaNonStdOrigin",
        "ReferenceDate",
        "RequestedPickupDate",
        "ServiceAreaDest",
        "ServiceAreaOrigin",
        "ServicesScheduleDest",
        "ServicesScheduleOrigin",
        "SITPaymentRequestEnd",
        "SITPaymentRequestStart",
        "SITScheduleDest",
        "SITScheduleOrigin",
        "SITServiceAreaDest",
        "SITServiceAreaOrigin",
        "WeightAdjusted",
        "WeightBilled",
        "WeightEstimated",
        "WeightOriginal",
        "WeightReweigh",
        "ZipDestAddress",
        "ZipPickupAddress",
        "ZipSITDestHHGFinalAddress",
        "ZipSITDestHHGOriginalAddress",
        "ZipSITOriginHHGActualAddress",
        "ZipSITOriginHHGOriginalAddress",
        "StandaloneCrate",
        "StandaloneCrateCap",
        "UncappedRequestTotal"
      ]
    },
    "ServiceItemParamOrigin": {
      "type": "string",
      "enum": [
        "PRIME",
        "SYSTEM",
        "PRICER",
        "PAYMENT_REQUEST"
      ]
    },
    "ServiceItemParamType": {
      "type": "string",
      "enum": [
        "STRING",
        "DATE",
        "INTEGER",
        "DECIMAL",
        "TIMESTAMP",
        "PaymentServiceItemUUID",
        "BOOLEAN"
      ]
    },
    "ServiceRequestDocument": {
      "type": "object",
      "properties": {
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadWithOmissions"
          }
        }
      }
    },
    "ServiceRequestDocuments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ServiceRequestDocument"
      }
    },
    "ShipmentAddressUpdate": {
      "description": "This represents a destination address change request made by the Prime that is either auto-approved or requires review if the pricing criteria has changed. If criteria has changed, then it must be approved or rejected by a TOO.\n",
      "type": "object",
      "required": [
        "id",
        "status",
        "shipmentID",
        "originalAddress",
        "newAddress",
        "contractorRemarks"
      ],
      "properties": {
        "contractorRemarks": {
          "description": "The reason there is an address change.",
          "type": "string",
          "title": "Contractor Remarks",
          "readOnly": true,
          "example": "This is a contractor remark"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        },
        "newSitDistanceBetween": {
          "description": "The distance between the original SIT address and requested new destination address of shipment",
          "type": "integer",
          "example": 88
        },
        "officeRemarks": {
          "description": "The TOO comment on approval or rejection.",
          "type": "string",
          "title": "Office Remarks",
          "x-nullable": true,
          "example": "This is an office remark"
        },
        "oldSitDistanceBetween": {
          "description": "The distance between the original SIT address and the previous/old destination address of shipment",
          "type": "integer",
          "example": 50
        },
        "originalAddress": {
          "$ref": "#/definitions/Address"
        },
        "shipmentID": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "sitOriginalAddress": {
          "$ref": "#/definitions/Address"
        },
        "status": {
          "$ref": "#/definitions/ShipmentAddressUpdateStatus"
        }
      }
    },
    "ShipmentAddressUpdateStatus": {
      "type": "string",
      "title": "Status",
      "enum": [
        "REQUESTED",
        "REJECTED",
        "APPROVED"
      ],
      "x-display-value": {
        "APPROVED": "APPROVED",
        "REJECTED": "REJECTED",
        "REQUESTED": "REQUESTED"
      },
      "readOnly": true
    },
    "SitAddressUpdate": {
      "properties": {
        "contractorRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "Customer reached out to me this week \u0026 let me know they want to move closer to family."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "distance": {
          "type": "integer",
          "maximum": 50,
          "readOnly": true,
          "example": 25
        },
        "eTag": {
          "description": "A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "ddd7bb48-4730-47c4-9781-6500384f4941"
        },
        "mtoServiceItemId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "12d9e103-5a56-4636-906d-6e993b97ef51"
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        },
        "newAddressId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "31a2ad3c-1682-4d5b-8423-ff40053a056b"
        },
        "officeRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The customer has found a new house closer to base."
        },
        "oldAddress": {
          "$ref": "#/definitions/Address"
        },
        "oldAddressId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "31a2ad3c-1682-4d5b-8423-ff40053a056b"
        },
        "status": {
          "$ref": "#/definitions/SitAddressUpdateStatus"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "SitAddressUpdateStatus": {
      "description": "The status of a SIT address update, indicating where it is in the TOO's approval process.",
      "enum": [
        "REQUESTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "SitAddressUpdates": {
      "description": "A list of updates to a SIT service item address.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/SitAddressUpdate"
      }
    },
    "StorageFacility": {
      "description": "The Storage Facility information for the shipment",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "facilityName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lotNumber": {
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        }
      }
    },
    "UpdateMTOServiceItem": {
      "description": "UpdateMTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.",
      "type": "object",
      "required": [
        "modelType"
      ],
      "properties": {
        "id": {
          "description": "ID of the service item. Must match path.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "modelType": {
          "$ref": "#/definitions/UpdateMTOServiceItemModelType"
        }
      },
      "discriminator": "modelType"
    },
    "UpdateMTOServiceItemModelType": {
      "description": "Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.\n  * DDDSIT - UpdateMTOServiceItemSIT\n  * DOPSIT - UpdateMTOServiceItemSIT\n  * DOASIT - UpdateMTOServiceItemSIT\n  * DOFSIT - UpdateMTOServiceItemSIT\n  * DDSHUT - UpdateMTOServiceItemShuttle\n  * DOSHUT - UpdateMTOServiceItemShuttle\n\nThe documentation will then update with the supported fields.\n",
      "type": "string",
      "enum": [
        "UpdateMTOServiceItemSIT",
        "UpdateMTOServiceItemShuttle"
      ]
    },
    "UpdateMTOServiceItemSIT": {
      "description": "Subtype used to provide the departure date for origin or destination SIT. This is not creating a new service item but rather updating and existing service item.\n",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateMTOServiceItem"
        },
        {
          "type": "object",
          "properties": {
            "dateOfContact1": {
              "description": "Date of attempted contact by the prime corresponding to 'timeMilitary1'.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "dateOfContact2": {
              "description": "Date of attempted contact by the prime corresponding to 'timeMilitary2'.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate1": {
              "description": "First available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate2": {
              "description": "Second available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DDDSIT",
                "DOPSIT",
                "DOASIT",
                "DOFSIT"
              ]
            },
            "requestApprovalsRequestedStatus": {
              "description": "Indicates if \"Approvals Requested\" status is being requested.",
              "type": "boolean",
              "x-nullable": true
            },
            "sitCustomerContacted": {
              "description": "Date when the customer contacted the prime for a delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDepartureDate": {
              "description": "Departure date for SIT. This is the end date of the SIT at either origin or destination.",
              "type": "string",
              "format": "date"
            },
            "sitDestinationFinalAddress": {
              "$ref": "#/definitions/Address"
            },
            "sitEntryDate": {
              "description": "Entry date for the SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitPostalCode": {
              "type": "string",
              "format": "zip",
              "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
              "x-nullable": true,
              "example": "90210"
            },
            "sitRequestedDelivery": {
              "description": "Date when the customer has requested delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "timeMilitary1": {
              "description": "Time of attempted contact by the prime corresponding to 'dateOfContact1', in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            },
            "timeMilitary2": {
              "description": "Time of attempted contact by the prime corresponding to 'dateOfContact2', in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            },
            "updateReason": {
              "description": "Reason for updating service item.",
              "type": "string",
              "x-nullable": true
            }
          }
        }
      ]
    },
    "UpdateMTOServiceItemShuttle": {
      "description": "Subtype used to provide the estimated weight and actual weight for shuttle. This is not creating a new service item but rather updating an existing service item.\n",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateMTOServiceItem"
        },
        {
          "type": "object",
          "properties": {
            "actualWeight": {
              "description": "Provided by the movers, based on weight tickets. Relevant for shuttling (DDSHUT \u0026 DOSHUT) service items.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4000
            },
            "estimatedWeight": {
              "description": "An estimate of how much weight from a shipment will be included in a shuttling (DDSHUT \u0026 DOSHUT) service item.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4200
            },
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DDSHUT",
                "DOSHUT"
              ]
            }
          }
        }
      ]
    },
    "UpdateMTOShipment": {
      "properties": {
        "actualDeliveryDate": {
          "description": "The date when the Prime contractor actually delivered the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualPickupDate": {
          "description": "The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualProGearWeight": {
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualSpouseProGearWeight": {
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "counselorRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "counselor approved"
        },
        "destinationAddress": {
          "description": "Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details\nduring onboarding, if they know their new address already.\n\nMay be blank when entered by the customer, required when entered by the Prime. May not represent the true\nfinal destination due to the shipment being diverted or placed in SIT.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "destinationType": {
          "$ref": "#/definitions/DestinationType"
        },
        "diversion": {
          "description": "This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion.\n",
          "type": "boolean"
        },
        "firstAvailableDeliveryDate": {
          "description": "The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "ntsRecordedWeight": {
          "description": "The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 4500
        },
        "pickupAddress": {
          "description": "The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "pointOfContact": {
          "description": "Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.\n",
          "type": "string"
        },
        "ppmShipment": {
          "$ref": "#/definitions/UpdatePPMShipment"
        },
        "primeActualWeight": {
          "description": "The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "primeEstimatedWeight": {
          "description": "The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it.\n",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "scheduledDeliveryDate": {
          "description": "The date the Prime contractor scheduled to deliver this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "scheduledPickupDate": {
          "description": "The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "secondaryDeliveryAddress": {
          "description": "A second delivery address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "secondaryPickupAddress": {
          "description": "A second pickup address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        },
        "storageFacility": {
          "allOf": [
            {
              "x-nullable": true
            },
            {
              "$ref": "#/definitions/StorageFacility"
            }
          ]
        }
      }
    },
    "UpdateMTOShipmentStatus": {
      "description": "Contains the statuses available to the Prime when updating the state of a shipment.",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "CANCELED"
          ]
        }
      }
    },
    "UpdatePPMShipment": {
      "description": "The PPM specific fields of the shipment with values being changed",
      "type": "object",
      "properties": {
        "destinationPostalCode": {
          "description": "The postal code of the destination location where goods are being delivered to.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "estimatedWeight": {
          "description": "The estimated weight of the PPM shipment goods being moved.",
          "type": "integer",
          "x-nullable": true,
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to begin moving from their origin.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear for themselves or their spouse.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "pickupPostalCode": {
          "description": "The postal code of the origin location where goods are being moved from.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "proGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to the service member.",
          "type": "integer",
          "x-nullable": true
        },
        "secondaryDestinationPostalCode": {
          "description": "An optional secondary location near the destination where goods will be dropped off.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "description": "An optional secondary pickup location near the origin where additional goods exist.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "sitEstimatedDepartureDate": {
          "description": "The date that goods will exit the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedEntryDate": {
          "description": "The date that goods will first enter the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedWeight": {
          "description": "The estimated weight of the goods being put into storage.",
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "sitExpected": {
          "description": "Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.\n\nMust be set to ` + "`" + `true` + "`" + ` when providing ` + "`" + `sitLocation` + "`" + `, ` + "`" + `sitEstimatedWeight` + "`" + `, ` + "`" + `sitEstimatedEntryDate` + "`" + `, and ` + "`" + `sitEstimatedDepartureDate` + "`" + ` values to calculate the ` + "`" + `sitEstimatedCost` + "`" + `.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/SITLocationType"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "spouseProGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to a spouse.",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "UpdateReweigh": {
      "description": "Contains the fields available to the Prime when updating a reweigh record.",
      "type": "object",
      "properties": {
        "verificationReason": {
          "description": "In lieu of a document being uploaded indicating why a reweigh did not occur.",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The reweigh was not performed because the shipment was already delivered"
        },
        "weight": {
          "description": "The total reweighed weight for the shipment in pounds.",
          "type": "integer",
          "minimum": 1,
          "x-formatting": "weight",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        }
      }
    },
    "UpdateShipmentDestinationAddress": {
      "description": "UpdateShipmentDestinationAddress contains the fields required for the prime to request an update for the destination address on an MTO Shipment.",
      "type": "object",
      "required": [
        "contractorRemarks",
        "newAddress"
      ],
      "properties": {
        "contractorRemarks": {
          "description": "This is the remark the Prime has entered, which would be the reason there is an address change.",
          "type": "string",
          "example": "Customer reached out to me this week and let me know they want to move somewhere else."
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "UploadWithOmissions": {
      "description": "An uploaded file.",
      "type": "object",
      "required": [
        "filename",
        "contentType",
        "bytes"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "filename": {
          "type": "string",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "status": {
          "type": "string",
          "enum": [
            "INFECTED",
            "CLEAN",
            "PROCESSING"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "ValidationError": {
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object",
          "required": [
            "invalidFields"
          ],
          "properties": {
            "invalidFields": {
              "type": "object",
              "additionalProperties": {
                "description": "List of errors for the field",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "ifMatch": {
      "type": "string",
      "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
      "name": "If-Match",
      "in": "header",
      "required": true
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "A server error occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The request was unprocessable, likely due to bad input from the requester.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  },
  "tags": [
    {
      "description": "The **moveTaskOrder** represents a military move that has been sent to a contractor. It contains all the information about shipments, including service items, estimated weights, actual weights, requested and scheduled move dates, etc.\n",
      "name": "moveTaskOrder"
    },
    {
      "description": "A shipment is some (or all) of a customer's belongings picked up in one location and delivered to another location.\nAll of the items in a shipment are weighed and transported as a discrete unit. One move may include multiple shipments.\nAn **mtoShipment**, in particular, is a shipment that belongs to a [moveTaskOrder](#tag/moveTaskOrder).\n\nThe weights for all of the shipments in a move are combined and compared to the customer's weight allowance.\nIf the sum of the shipments is greater, the customer is liable for paying excess weight cost. Both the customer and\nthe contractor should keep this potential cost in mind when planning a move and the shipments within it.\n",
      "name": "mtoShipment"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "moveTaskOrder",
        "mtoShipment"
      ]
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime V2 API is a RESTful API that enables the Prime contractor to request\ninformation about upcoming moves, update the details and status of those moves,\nand make payment requests. It uses Mutual TLS for authentication procedures.\n\nAll endpoints are located at ` + "`" + `/prime/v2/` + "`" + `.\n",
    "title": "MilMove Prime V2 API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/prime/v2",
  "paths": {
    "/move-task-orders/{moveID}": {
      "get": {
        "description": "### Functionality\nThis endpoint gets an individual MoveTaskOrder by ID.\n\nIt will provide information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.\n\n**NOTE**: New version in v3. Version will return PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress\nsecondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode,\ndestinationPostalCode and secondaryDestinationPostalCode].\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "getMoveTaskOrder",
        "operationId": "getMoveTaskOrder",
        "parameters": [
          {
            "type": "string",
            "description": "UUID or MoveCode of move task order to use.",
            "name": "moveID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve an individual move task order.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/mto-shipments": {
      "post": {
        "description": "Creates a new shipment within the specified move. This endpoint should be used whenever the movers identify a\nneed for an additional shipment. The new shipment will be submitted to the TOO for review, and the TOO must\napprove it before the contractor can proceed with billing.\n\n**NOTE**: When creating a child shipment diversion, you can no longer specify the ` + "`" + `primeActualWeight` + "`" + `.\nIf you create a new diverted shipment with the ` + "`" + `diversion` + "`" + ` and ` + "`" + `divertedFromShipmentId` + "`" + ` parameter, it will automatically\ninherit the primeActualWeight of its ` + "`" + `divertedFromShipmentId` + "`" + ` parent. Payment requests created on a diverted shipment \"chain\" will utilize\nthe lowest weight possible in the chain to prevent overcharging as they are still separate shipments.\n\n**NOTE**: New version in v3. Version will accept PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress\nsecondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode,\ndestinationPostalCode and secondaryDestinationPostalCode].\n\n**WIP**: The Prime should be notified by a push notification whenever the TOO approves a shipment connected to\none of their moves. Otherwise, the Prime can fetch the related move using the\n[getMoveTaskOrder](#operation/getMoveTaskOrder) endpoint and see if this shipment has the status ` + "`" + `\"APPROVED\"` + "`" + `.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "createMTOShipment",
        "operationId": "createMTOShipment",
        "parameters": [
          {
            "x-examples": {
              "application/json": {
                "hhg": {
                  "summary": "HHG",
                  "value": {
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "pickupAddress": {
                      "city": "Muldraugh",
                      "postalCode": "40155",
                      "state": "KY",
                      "streetAddress1": "204 South Prospect Lane"
                    },
                    "requestedPickupDate": "2022-12-31",
                    "shipmentType": "HHG"
                  }
                },
                "nts": {
                  "summary": "NTS",
                  "value": {
                    "agents": [
                      {
                        "agentType": "RELEASING_AGENT",
                        "email": "edgar.taylor@example.com",
                        "firstName": "Edgar",
                        "lastName": "Taylor",
                        "phone": "555-555-5555"
                      }
                    ],
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "pickupAddress": {
                      "city": "Muldraugh",
                      "postalCode": "40155",
                      "state": "KY",
                      "streetAddress1": "204 South Prospect Lane"
                    },
                    "requestedPickupDate": "2022-12-31",
                    "shipmentType": "HHG_INTO_NTS_DOMESTIC"
                  }
                },
                "nts-r": {
                  "summary": "NTS Release",
                  "value": {
                    "agents": [
                      {
                        "agentType": "RECEIVING_AGENT",
                        "email": "edgar.taylor@example.com",
                        "firstName": "Edgar",
                        "lastName": "Taylor",
                        "phone": "555-555-5555"
                      }
                    ],
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "shipmentType": "HHG_OUTOF_NTS_DOMESTIC"
                  }
                },
                "ppm": {
                  "summary": "PPM",
                  "value": {
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "ppmShipment": {
                      "destinationPostalCode": "10001",
                      "estimatedWeight": 4999,
                      "expectedDepartureDate": "2022-10-01",
                      "hasProGear": false,
                      "pickupPostalCode": "90210",
                      "sitExpected": false
                    },
                    "shipmentType": "PPM"
                  }
                }
              }
            },
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateMTOShipment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a MTO shipment.",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The request was unprocessable, likely due to bad input from the requester.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/mto-shipments/{mtoShipmentID}": {
      "patch": {
        "description": "Updates an existing shipment for a move.\n\nNote that there are some restrictions on nested objects:\n\n* Service items: You cannot add or update service items using this endpoint. Please use [createMTOServiceItem](#operation/createMTOServiceItem) and [updateMTOServiceItem](#operation/updateMTOServiceItem) instead.\n* Agents: You cannot add or update agents using this endpoint. Please use [createMTOAgent](#operation/createMTOAgent) and [updateMTOAgent](#operation/updateMTOAgent) instead.\n* Addresses: You can add new addresses using this endpoint (and must use this endpoint to do so), but you cannot update existing ones. Please use [updateMTOShipmentAddress](#operation/updateMTOShipmentAddress) instead.\n\nThese restrictions are due to our [optimistic locking/concurrency control](https://transcom.github.io/mymove-docs/docs/dev/contributing/backend/use-optimistic-locking) mechanism.\n\nNote that some fields cannot be manually changed but will still be updated automatically, such as ` + "`" + `primeEstimatedWeightRecordedDate` + "`" + ` and ` + "`" + `requiredDeliveryDate` + "`" + `.\n\n**NOTE**: New version in v3. Version will accept PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress\nsecondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode,\ndestinationPostalCode and secondaryDestinationPostalCode].\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "updateMTOShipment",
        "operationId": "updateMTOShipment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the shipment being updated.",
            "name": "mtoShipmentID",
            "in": "path",
            "required": true
          },
          {
            "x-examples": {
              "application/json": {
                "hhg": {
                  "summary": "HHG",
                  "value": {
                    "actualPickupDate": "2022-12-29",
                    "actualProGearWeight": 1053,
                    "actualSpouseProGearWeight": 253,
                    "destinationAddress": {
                      "city": "Great Bend",
                      "postalCode": "13643",
                      "state": "NY",
                      "streetAddress1": "6622 Airport Way S",
                      "streetAddress2": "#1430"
                    },
                    "firstAvailableDeliveryDate": "2023-01-04",
                    "pointOfContact": "peyton.wing@example.com",
                    "primeActualWeight": 4500,
                    "primeEstimatedWeight": 4250,
                    "scheduledPickupDate": "2022-12-30"
                  }
                },
                "nts": {
                  "summary": "NTS",
                  "value": {
                    "actualPickupDate": "2022-12-29",
                    "actualProGearWeight": 1053,
                    "actualSpouseProGearWeight": 253,
                    "actualWeight": 4500,
                    "counselorRemarks": "Beware of dogs on property",
                    "estimatedWeight": 4250,
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "scheduledPickupDate": "2022-12-30"
                  }
                },
                "nts-r": {
                  "summary": "NTS Release",
                  "value": {
                    "actualProGearWeight": 1053,
                    "actualSpouseProGearWeight": 253,
                    "destinationAddress": {
                      "city": "San Antonio",
                      "postalCode": "78245",
                      "state": "TX",
                      "streetAddress1": "812 S 129th Street"
                    },
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "ntsRecordedWeight": 4500
                  }
                },
                "ppm": {
                  "summary": "PPM",
                  "value": {
                    "moveTaskOrderId": "5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8",
                    "ppmShipment": {
                      "hasProGear": true,
                      "proGearWeight": 830,
                      "sitEstimatedDepartureDate": "2022-10-13",
                      "sitEstimatedEntryDate": "2022-10-06",
                      "sitEstimatedWeight": 1760,
                      "sitExpected": true,
                      "sitLocation": "DESTINATION",
                      "spouseProGearWeight": 366
                    }
                  }
                }
              }
            },
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOShipment"
            }
          },
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the MTO shipment.",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The request was unprocessable, likely due to bad input from the requester.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "A postal address",
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "county": {
          "type": "string",
          "title": "County",
          "x-nullable": true,
          "example": "LOS ANGELES"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CreateMTOShipment": {
      "type": "object",
      "required": [
        "moveTaskOrderID",
        "shipmentType"
      ],
      "properties": {
        "agents": {
          "$ref": "#/definitions/MTOAgents"
        },
        "counselorRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "counselor approved"
        },
        "customerRemarks": {
          "description": "The customer can use the customer remarks field to inform the services counselor and the movers about any\nspecial circumstances for this shipment. Typical examples:\n  * bulky or fragile items,\n  * weapons,\n  * access info for their address.\n\nCustomer enters this information during onboarding. Optional field.\n",
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "description": "Where the movers should deliver this shipment.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "diversion": {
          "description": "This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion. When this boolean is true, you must link it to a parent shipment with the divertedFromShipmentId parameter.\n",
          "type": "boolean"
        },
        "divertedFromShipmentId": {
          "description": "The ID of the shipment this is a diversion from. Aka the \"Parent\" shipment. The diversion boolean must be true if this parameter is supplied in the request. If provided, and if the diverted from shipment is also a diversion, the previous should must then also have a parent ID.\n",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "description": "The ID of the move this new shipment is for.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoServiceItems": {
          "description": "A list of service items connected to this shipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "pickupAddress": {
          "description": "The address where the movers should pick up this shipment.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "pointOfContact": {
          "description": "Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.\n",
          "type": "string"
        },
        "ppmShipment": {
          "$ref": "#/definitions/CreatePPMShipment"
        },
        "primeEstimatedWeight": {
          "description": "The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contractor will need to contact the TOO to change it.\n",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "requestedPickupDate": {
          "description": "The customer's preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the pack date, are derived from this date.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        }
      }
    },
    "CreatePPMShipment": {
      "description": "Creation object containing the ` + "`" + `PPM` + "`" + ` shipmentType specific data, not used for other shipment types.",
      "type": "object",
      "required": [
        "expectedDepartureDate",
        "pickupPostalCode",
        "destinationPostalCode",
        "sitExpected",
        "estimatedWeight",
        "hasProGear"
      ],
      "properties": {
        "destinationPostalCode": {
          "description": "The postal code of the destination location where goods are being delivered to.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "estimatedWeight": {
          "description": "The estimated weight of the PPM shipment goods being moved in pounds.",
          "type": "integer",
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to begin moving from their origin.\n",
          "type": "string",
          "format": "date"
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear for themselves or their spouse.\n",
          "type": "boolean"
        },
        "pickupPostalCode": {
          "description": "The postal code of the origin location where goods are being moved from.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "proGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to the service member in pounds.",
          "type": "integer",
          "x-nullable": true
        },
        "secondaryDestinationPostalCode": {
          "description": "An optional secondary location near the destination where goods will be dropped off.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "description": "An optional secondary pickup location near the origin where additional goods exist.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "sitEstimatedDepartureDate": {
          "description": "The date that goods will exit the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedEntryDate": {
          "description": "The date that goods will first enter the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedWeight": {
          "description": "The estimated weight of the goods being put into storage in pounds.",
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "sitExpected": {
          "description": "Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.\n\nMust be set to ` + "`" + `true` + "`" + ` when providing ` + "`" + `sitLocation` + "`" + `, ` + "`" + `sitEstimatedWeight` + "`" + `, ` + "`" + `sitEstimatedEntryDate` + "`" + `, and ` + "`" + `sitEstimatedDepartureDate` + "`" + ` values to calculate the ` + "`" + `sitEstimatedCost` + "`" + `.\n",
          "type": "boolean"
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/SITLocationType"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "spouseProGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to a spouse in pounds.",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "CreateSITAddressUpdateRequest": {
      "description": "CreateSITAddressUpdateRequest contains the fields required for the prime to create a SIT address update request.",
      "type": "object",
      "required": [
        "contractorRemarks"
      ],
      "properties": {
        "contractorRemarks": {
          "type": "string",
          "example": "Customer reached out to me this week \u0026 let me know they want to move closer to family."
        },
        "mtoServiceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "CreateSITExtension": {
      "description": "CreateSITExtension contains the fields required for the prime to create a SIT Extension request.",
      "type": "object",
      "required": [
        "requestReason",
        "contractorRemarks",
        "requestedDays"
      ],
      "properties": {
        "contractorRemarks": {
          "type": "string",
          "example": "We need SIT additional days. The customer has not found a house yet."
        },
        "requestReason": {
          "type": "string",
          "enum": [
            "SERIOUS_ILLNESS_MEMBER",
            "SERIOUS_ILLNESS_DEPENDENT",
            "IMPENDING_ASSIGNEMENT",
            "DIRECTED_TEMPORARY_DUTY",
            "NONAVAILABILITY_OF_CIVILIAN_HOUSING",
            "AWAITING_COMPLETION_OF_RESIDENCE",
            "OTHER"
          ]
        },
        "requestedDays": {
          "type": "integer",
          "minimum": 1,
          "example": 30
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "example": "COAST_GUARD"
        },
        "currentAddress": {
          "$ref": "#/definitions/Address"
        },
        "dodID": {
          "type": "string"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "example": "fake@example.com"
        },
        "firstName": {
          "type": "string",
          "example": "Vanya"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lastName": {
          "type": "string",
          "example": "Petrovna"
        },
        "phone": {
          "type": "string",
          "format": "telephone"
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "DestinationType": {
      "type": "string",
      "title": "Destination Type",
      "enum": [
        "HOME_OF_RECORD",
        "HOME_OF_SELECTION",
        "PLACE_ENTERED_ACTIVE_DUTY",
        "OTHER_THAN_AUTHORIZED"
      ],
      "x-nullable": true,
      "example": "OTHER_THAN_AUTHORIZED"
    },
    "DutyLocation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "addressID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "gunSafe": {
          "type": "boolean",
          "example": false
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "organizationalClothingAndIndividualEquipment": {
          "type": "boolean",
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "requiredMedicalEquipmentWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "title",
        "detail"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MTOAgent": {
      "type": "object",
      "properties": {
        "agentType": {
          "$ref": "#/definitions/MTOAgentType"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})?$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "The ID of the agent.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "mtoShipmentID": {
          "description": "The ID of the shipment this agent is permitted to release/receive.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^([2-9]\\d{2}-\\d{3}-\\d{4})?$",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOAgentType": {
      "description": "The type for this agent. ` + "`" + `RELEASING` + "`" + ` means they have authority on pickup, ` + "`" + `RECEIVING` + "`" + ` means they can receive the shipment on delivery.\n",
      "type": "string",
      "title": "Agent Type",
      "enum": [
        "RELEASING_AGENT",
        "RECEIVING_AGENT"
      ],
      "example": "RELEASING_AGENT"
    },
    "MTOAgents": {
      "description": "A list of the agents for a shipment. Agents are the people who the Prime contractor recognize as permitted to release (in the case of pickup) or receive (on delivery) a shipment.\n",
      "type": "array",
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/MTOAgent"
      }
    },
    "MTOServiceItem": {
      "description": "MTOServiceItem describes a base type of a service item. Polymorphic type.",
      "type": "object",
      "required": [
        "modelType",
        "moveTaskOrderID"
      ],
      "properties": {
        "eTag": {
          "description": "A hash unique to this service item that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the service item.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "modelType": {
          "$ref": "#/definitions/MTOServiceItemModelType"
        },
        "moveTaskOrderID": {
          "description": "The ID of the move for this service item.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "description": "The ID of the shipment this service is for, if any. Optional.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "description": "The full descriptive name of the service.",
          "type": "string",
          "readOnly": true
        },
        "rejectionReason": {
          "description": "The reason why this service item was rejected by the TOO.",
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "example": "item was too heavy"
        },
        "serviceRequestDocuments": {
          "$ref": "#/definitions/ServiceRequestDocuments"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        }
      },
      "discriminator": "modelType"
    },
    "MTOServiceItemBasic": {
      "description": "Describes a basic service item subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode"
          ],
          "properties": {
            "reServiceCode": {
              "$ref": "#/definitions/ReServiceCode"
            }
          }
        }
      ]
    },
    "MTOServiceItemDestSIT": {
      "description": "Describes a domestic destination SIT service item. Subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode",
            "sitEntryDate",
            "reason"
          ],
          "properties": {
            "dateOfContact1": {
              "description": "Date of attempted contact by the prime corresponding to ` + "`" + `timeMilitary1` + "`" + `.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "dateOfContact2": {
              "description": "Date of attempted contact by the prime corresponding to ` + "`" + `timeMilitary2` + "`" + `.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate1": {
              "description": "First available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate2": {
              "description": "Second available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DDFSIT",
                "DDASIT"
              ]
            },
            "reason": {
              "description": "The reason item has been placed in SIT.\n",
              "type": "string",
              "x-nullable": true,
              "x-omitempty": false
            },
            "sitAddressUpdates": {
              "$ref": "#/definitions/SitAddressUpdates"
            },
            "sitCustomerContacted": {
              "description": "Date when the customer contacted the prime for a delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDepartureDate": {
              "description": "Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDestinationFinalAddress": {
              "$ref": "#/definitions/Address"
            },
            "sitEntryDate": {
              "description": "Entry date for the SIT",
              "type": "string",
              "format": "date"
            },
            "sitRequestedDelivery": {
              "description": "Date when the customer has requested delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "timeMilitary1": {
              "description": "Time of attempted contact corresponding to ` + "`" + `dateOfContact1` + "`" + `, in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            },
            "timeMilitary2": {
              "description": "Time of attempted contact corresponding to ` + "`" + `dateOfContact2` + "`" + `, in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            }
          }
        }
      ]
    },
    "MTOServiceItemDimension": {
      "description": "The dimensions for either the item or the crate associated with a crating service item.",
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "height": {
          "description": "Height in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "length": {
          "description": "Length in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        },
        "width": {
          "description": "Width in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        }
      }
    },
    "MTOServiceItemDomesticCrating": {
      "description": "Describes a domestic crating/uncrating service item subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode",
            "item",
            "crate",
            "description"
          ],
          "properties": {
            "crate": {
              "description": "The dimensions for the crate the item will be shipped in.",
              "allOf": [
                {
                  "$ref": "#/definitions/MTOServiceItemDimension"
                }
              ]
            },
            "description": {
              "description": "A description of the item being crated.",
              "type": "string",
              "example": "Decorated horse head to be crated."
            },
            "item": {
              "description": "The dimensions of the item being crated.",
              "allOf": [
                {
                  "$ref": "#/definitions/MTOServiceItemDimension"
                }
              ]
            },
            "reServiceCode": {
              "description": "A unique code for the service item. Indicates if the service is for crating (DCRT) or uncrating (DUCRT).",
              "type": "string",
              "enum": [
                "DCRT",
                "DUCRT"
              ]
            },
            "reason": {
              "description": "The contractor's explanation for why an item needed to be crated or uncrated. Used by the TOO while deciding to approve or reject the service item.\n",
              "type": "string",
              "x-nullable": true,
              "x-omitempty": false,
              "example": "Storage items need to be picked up"
            },
            "standaloneCrate": {
              "type": "boolean",
              "x-nullable": true
            }
          }
        }
      ]
    },
    "MTOServiceItemModelType": {
      "description": "Describes all model sub-types for a MTOServiceItem model.\n\nUsing this list, choose the correct modelType in the dropdown, corresponding to the service item type.\n  * DOFSIT, DOASIT - MTOServiceItemOriginSIT\n  * DDFSIT, DDASIT - MTOServiceItemDestSIT\n  * DOSHUT, DDSHUT - MTOServiceItemShuttle\n  * DCRT, DUCRT - MTOServiceItemDomesticCrating\n\nThe documentation will then update with the supported fields.\n",
      "type": "string",
      "enum": [
        "MTOServiceItemBasic",
        "MTOServiceItemOriginSIT",
        "MTOServiceItemDestSIT",
        "MTOServiceItemShuttle",
        "MTOServiceItemDomesticCrating"
      ]
    },
    "MTOServiceItemOriginSIT": {
      "description": "Describes a domestic origin SIT service item. Subtype of a MTOServiceItem.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reServiceCode",
            "reason",
            "sitPostalCode",
            "sitEntryDate"
          ],
          "properties": {
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DOFSIT",
                "DOASIT"
              ]
            },
            "reason": {
              "description": "Explanation of why Prime is picking up SIT item.",
              "type": "string",
              "example": "Storage items need to be picked up"
            },
            "requestApprovalsRequestedStatus": {
              "type": "boolean"
            },
            "sitCustomerContacted": {
              "description": "Date when the customer contacted the prime for a delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDepartureDate": {
              "description": "Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitEntryDate": {
              "description": "Entry date for the SIT",
              "type": "string",
              "format": "date"
            },
            "sitHHGActualOrigin": {
              "$ref": "#/definitions/Address"
            },
            "sitHHGOriginalOrigin": {
              "$ref": "#/definitions/Address"
            },
            "sitPostalCode": {
              "type": "string",
              "format": "zip",
              "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
              "example": "90210"
            },
            "sitRequestedDelivery": {
              "description": "Date when the customer has requested delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            }
          }
        }
      ]
    },
    "MTOServiceItemShuttle": {
      "description": "Describes a shuttle service item.",
      "allOf": [
        {
          "$ref": "#/definitions/MTOServiceItem"
        },
        {
          "type": "object",
          "required": [
            "reason",
            "reServiceCode"
          ],
          "properties": {
            "actualWeight": {
              "description": "A record of the actual weight that was shuttled. Provided by the movers, based on weight tickets.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4000
            },
            "estimatedWeight": {
              "description": "An estimate of how much weight from a shipment will be included in the shuttling service.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4200
            },
            "reServiceCode": {
              "description": "A unique code for the service item. Indicates if shuttling is requested for the shipment origin (` + "`" + `DOSHUT` + "`" + `) or destination (` + "`" + `DDSHUT` + "`" + `).\n",
              "type": "string",
              "enum": [
                "DOSHUT",
                "DDSHUT"
              ]
            },
            "reason": {
              "description": "The contractor's explanation for why a shuttle service is requested. Used by the TOO while deciding to approve or reject the service item.\n",
              "type": "string",
              "example": "Storage items need to be picked up."
            }
          }
        }
      ]
    },
    "MTOServiceItemStatus": {
      "description": "The status of a service item, indicating where it is in the TOO's approval process.",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "REJECTED"
      ],
      "readOnly": true
    },
    "MTOShipment": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MTOShipmentWithoutServiceItems"
        }
      ],
      "properties": {
        "mtoServiceItems": {
          "description": "A list of service items connected to this shipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          },
          "readOnly": true
        }
      }
    },
    "MTOShipmentType": {
      "description": "The type of shipment.\n  * ` + "`" + `HHG` + "`" + ` = Household goods move\n  * ` + "`" + `HHG_INTO_NTS_DOMESTIC` + "`" + ` = HHG into Non-temporary storage (NTS)\n  * ` + "`" + `HHG_OUTOF_NTS_DOMESTIC` + "`" + ` = HHG out of Non-temporary storage (NTS Release)\n  * ` + "`" + `PPM` + "`" + ` = Personally Procured Move also known as Do It Yourself (DITY)\n",
      "type": "string",
      "title": "Shipment Type",
      "enum": [
        "BOAT_HAUL_AWAY",
        "BOAT_TOW_AWAY",
        "HHG",
        "HHG_INTO_NTS_DOMESTIC",
        "HHG_OUTOF_NTS_DOMESTIC",
        "INTERNATIONAL_HHG",
        "INTERNATIONAL_UB",
        "MOTORHOME",
        "PPM"
      ],
      "x-display-value": {
        "HHG": "Household goods move (HHG)",
        "HHG_INTO_NTS_DOMESTIC": "HHG into Non-temporary storage (NTS)",
        "HHG_OUTOF_NTS_DOMESTIC": "HHG out of Non-temporary storage (NTS Release)",
        "PPM": "Personally Procured Move also known as Do It Yourself (DITY)"
      },
      "example": "HHG"
    },
    "MTOShipmentWithoutServiceItems": {
      "type": "object",
      "properties": {
        "actualDeliveryDate": {
          "description": "The date when the Prime contractor actually delivered the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualPickupDate": {
          "description": "The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualProGearWeight": {
          "description": "The actual weight of any pro gear being shipped.\n",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualSpouseProGearWeight": {
          "description": "The actual weight of any spouse pro gear being shipped.\n",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "agents": {
          "$ref": "#/definitions/MTOAgents"
        },
        "approvedDate": {
          "description": "The date when the Task Ordering Officer first approved this shipment for the move.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "counselorRemarks": {
          "description": "The counselor can use the counselor remarks field to inform the movers about any\nspecial circumstances for this shipment. Typical examples:\n  * bulky or fragile items,\n  * weapons,\n  * access info for their address.\n\nCounselors enters this information when creating or editing an MTO Shipment. Optional field.\n",
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "example": "handle with care"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "customerRemarks": {
          "description": "The customer can use the customer remarks field to inform the services counselor and the movers about any\nspecial circumstances for this shipment. Typical examples:\n  * bulky or fragile items,\n  * weapons,\n  * access info for their address.\n\nCustomer enters this information during onboarding. Optional field.\n",
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "example": "handle with care"
        },
        "deliveryAddressUpdate": {
          "$ref": "#/definitions/ShipmentAddressUpdate"
        },
        "destinationAddress": {
          "description": "Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details\nduring onboarding, if they know their new address already.\n\nMay be blank when entered by the customer, required when entered by the Prime. May not represent the true\nfinal destination due to the shipment being diverted or placed in SIT.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "destinationSitAuthEndDate": {
          "description": "The SIT authorized end date for destination SIT.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "destinationType": {
          "$ref": "#/definitions/DestinationType"
        },
        "diversion": {
          "description": "This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion.\n",
          "type": "boolean"
        },
        "eTag": {
          "description": "A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "firstAvailableDeliveryDate": {
          "description": "The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "description": "The ID of the shipment.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "description": "The ID of the move for this shipment.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "ntsRecordedWeight": {
          "description": "The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 4500
        },
        "originSitAuthEndDate": {
          "description": "The SIT authorized end date for origin SIT.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "pickupAddress": {
          "description": "The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "pointOfContact": {
          "description": "Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.\n",
          "type": "string"
        },
        "ppmShipment": {
          "$ref": "#/definitions/PPMShipment"
        },
        "primeActualWeight": {
          "description": "The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "primeEstimatedWeight": {
          "description": "The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it.\n",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "primeEstimatedWeightRecordedDate": {
          "description": "The date when the Prime contractor recorded the shipment's estimated weight.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "requestedDeliveryDate": {
          "description": "The customer's preferred delivery date.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "requestedPickupDate": {
          "description": "The date the customer selects during onboarding as their preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the pack date, are derived from this date.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "requiredDeliveryDate": {
          "description": "The latest date by which the Prime can deliver a customer's shipment without violating the contract. This is calculated based on weight, distance, and the scheduled pickup date. It cannot be modified.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "reweigh": {
          "$ref": "#/definitions/Reweigh"
        },
        "scheduledDeliveryDate": {
          "description": "The date the Prime contractor scheduled to deliver this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "scheduledPickupDate": {
          "description": "The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "secondaryDeliveryAddress": {
          "description": "A second delivery address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "secondaryPickupAddress": {
          "description": "A second pickup address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        },
        "sitExtensions": {
          "$ref": "#/definitions/SITExtensions"
        },
        "status": {
          "description": "The status of a shipment, indicating where it is in the TOO's approval process. Can only be updated by the contractor in special circumstances.\n",
          "type": "string",
          "enum": [
            "SUBMITTED",
            "APPROVED",
            "REJECTED",
            "CANCELLATION_REQUESTED",
            "CANCELED",
            "DIVERSION_REQUESTED"
          ],
          "readOnly": true
        },
        "storageFacility": {
          "allOf": [
            {
              "x-nullable": true
            },
            {
              "$ref": "#/definitions/StorageFacility"
            }
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOShipmentsWithoutServiceObjects": {
      "description": "A list of shipments without their associated service items.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipmentWithoutServiceItems"
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "required": [
        "mtoShipments",
        "mtoServiceItems",
        "paymentRequests"
      ],
      "properties": {
        "availableToPrimeAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "readOnly": true
        },
        "contractNumber": {
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "excessWeightAcknowledgedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "excessWeightQualifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "excessWeightUploadId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "a502b4f1-b9c4-4faf-8bdd-68292501bf26"
        },
        "moveCode": {
          "type": "string",
          "readOnly": true,
          "example": "HYXFJF"
        },
        "mtoServiceItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mtoShipments": {
          "$ref": "#/definitions/MTOShipmentsWithoutServiceObjects"
        },
        "order": {
          "$ref": "#/definitions/Order"
        },
        "orderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequests": {
          "$ref": "#/definitions/PaymentRequests"
        },
        "ppmEstimatedWeight": {
          "type": "integer"
        },
        "ppmType": {
          "type": "string",
          "enum": [
            "PARTIAL",
            "FULL"
          ]
        },
        "primeCounselingCompletedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "readOnly": true
        },
        "referenceId": {
          "type": "string",
          "example": "1001-3456"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "orderNumber",
        "rank",
        "linesOfAccounting"
      ],
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "customerID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "destinationDutyLocation": {
          "$ref": "#/definitions/DutyLocation"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "linesOfAccounting": {
          "type": "string"
        },
        "methodOfPayment": {
          "type": "string",
          "readOnly": true
        },
        "naics": {
          "type": "string",
          "readOnly": true
        },
        "orderNumber": {
          "type": "string"
        },
        "ordersType": {
          "$ref": "#/definitions/OrdersType"
        },
        "originDutyLocation": {
          "$ref": "#/definitions/DutyLocation"
        },
        "originDutyLocationGBLOC": {
          "type": "string",
          "example": "KKFA"
        },
        "packingAndShippingInstructions": {
          "type": "string",
          "readOnly": true
        },
        "rank": {
          "type": "string",
          "example": "E_5"
        },
        "reportByDate": {
          "type": "string",
          "format": "date"
        },
        "supplyAndServicesCostEstimate": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrdersType": {
      "type": "string",
      "title": "Orders type",
      "enum": [
        "PERMANENT_CHANGE_OF_STATION",
        "LOCAL_MOVE",
        "RETIREMENT",
        "SEPARATION",
        "WOUNDED_WARRIOR",
        "BLUEBARK",
        "SAFETY"
      ],
      "x-display-value": {
        "BLUEBARK": "BLUEBARK",
        "LOCAL_MOVE": "Local Move",
        "PERMANENT_CHANGE_OF_STATION": "Permanent Change Of Station",
        "RETIREMENT": "Retirement",
        "SAFETY": "Safety",
        "SEPARATION": "Separation",
        "WOUNDED_WARRIOR": "Wounded Warrior"
      }
    },
    "PPMShipment": {
      "description": "A personally procured move is a type of shipment that a service member moves themselves.",
      "required": [
        "id",
        "shipmentId",
        "createdAt",
        "status",
        "expectedDepartureDate",
        "pickupPostalCode",
        "destinationPostalCode",
        "sitExpected",
        "eTag"
      ],
      "properties": {
        "actualDestinationPostalCode": {
          "description": "The actual postal code where the PPM shipment ended. To be filled once the customer has moved the shipment.\n",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "actualMoveDate": {
          "description": "The actual start date of when the PPM shipment left the origin.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualPickupPostalCode": {
          "description": "The actual postal code where the PPM shipment started. To be filled once the customer has moved the shipment.\n",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "advanceAmountReceived": {
          "description": "The amount received for an advance, or null if no advance is received.\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "advanceAmountRequested": {
          "description": "The amount requested as an advance by the service member, up to a maximum percentage of the estimated incentive.\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "approvedAt": {
          "description": "The timestamp of when the shipment was approved and the service member can begin their move.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "createdAt": {
          "description": "The timestamp of when the PPM shipment was created (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "destinationPostalCode": {
          "description": "The postal code of the destination location where goods are being delivered to.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "eTag": {
          "description": "A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "estimatedIncentive": {
          "description": "The estimated amount the government will pay the service member to move their belongings based on the moving date, locations, and shipment weight.",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "estimatedWeight": {
          "description": "The estimated weight of the PPM shipment goods being moved in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to begin moving from their origin.\n",
          "type": "string",
          "format": "date"
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear for themselves or their spouse.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasReceivedAdvance": {
          "description": "Indicates whether an advance was received for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasRequestedAdvance": {
          "description": "Indicates whether an advance has been requested for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "description": "The primary unique identifier of this PPM shipment",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupPostalCode": {
          "description": "The postal code of the origin location where goods are being moved from.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "proGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to the service member in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "reviewedAt": {
          "description": "The timestamp of when the Service Counselor has reviewed all of the closeout documents.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "secondaryDestinationPostalCode": {
          "description": "An optional secondary location near the destination where goods will be dropped off.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "description": "An optional secondary pickup location near the origin where additional goods exist.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "shipmentId": {
          "description": "The id of the parent MTOShipment record",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "sitEstimatedCost": {
          "description": "The estimated amount that the government will pay the service member to put their goods into storage. This estimated storage cost is separate from the estimated incentive.",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedDepartureDate": {
          "description": "The date that goods will exit the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedEntryDate": {
          "description": "The date that goods will first enter the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedWeight": {
          "description": "The estimated weight of the goods being put into storage in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        },
        "sitExpected": {
          "description": "Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.\n\nMust be set to ` + "`" + `true` + "`" + ` when providing ` + "`" + `sitLocation` + "`" + `, ` + "`" + `sitEstimatedWeight` + "`" + `, ` + "`" + `sitEstimatedEntryDate` + "`" + `, and ` + "`" + `sitEstimatedDepartureDate` + "`" + ` values to calculate the ` + "`" + `sitEstimatedCost` + "`" + `.\n",
          "type": "boolean"
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/SITLocationType"
            },
            {
              "x-nullable": true
            },
            {
              "x-omitempty": false
            }
          ]
        },
        "spouseProGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to a spouse in pounds.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "status": {
          "$ref": "#/definitions/PPMShipmentStatus"
        },
        "submittedAt": {
          "description": "The timestamp of when the customer submitted their PPM documentation to the counselor for review.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "updatedAt": {
          "description": "The timestamp of when a property of this object was last updated (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "x-nullable": true
    },
    "PPMShipmentStatus": {
      "description": "Status of the PPM Shipment:\n  * **DRAFT**: The customer has created the PPM shipment but has not yet submitted their move for counseling.\n  * **SUBMITTED**: The shipment belongs to a move that has been submitted by the customer or has been created by a Service Counselor or Prime Contractor for a submitted move.\n  * **WAITING_ON_CUSTOMER**: The PPM shipment has been approved and the customer may now provide their actual move closeout information and documentation required to get paid.\n  * **NEEDS_ADVANCE_APPROVAL**: The shipment was counseled by the Prime Contractor and approved but an advance was requested so will need further financial approval from the government.\n  * **NEEDS_CLOSEOUT**: The customer has provided their closeout weight tickets, receipts, and expenses and certified it for the Service Counselor to approve, exclude or reject.\n  * **CLOSEOUT_COMPLETE**: The Service Counselor has reviewed all of the customer's PPM closeout documentation and authorizes the customer can download and submit their finalized SSW packet.\n",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "WAITING_ON_CUSTOMER",
        "NEEDS_ADVANCE_APPROVAL",
        "NEEDS_CLOSEOUT",
        "CLOSEOUT_COMPLETE"
      ],
      "readOnly": true
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestNumber": {
          "type": "string",
          "readOnly": true,
          "example": "1234-5678-1"
        },
        "paymentServiceItems": {
          "$ref": "#/definitions/PaymentServiceItems"
        },
        "proofOfServiceDocs": {
          "$ref": "#/definitions/ProofOfServiceDocs"
        },
        "recalculationOfPaymentRequestID": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID",
        "EDI_ERROR",
        "DEPRECATED"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "PaymentServiceItem": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mtoServiceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentServiceItemParams": {
          "$ref": "#/definitions/PaymentServiceItemParams"
        },
        "priceCents": {
          "type": "integer",
          "format": "cents",
          "title": "Price of the service item in cents",
          "x-nullable": true
        },
        "referenceID": {
          "format": "string",
          "readOnly": true,
          "example": "1234-5678-c56a4180"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentServiceItemStatus"
        }
      }
    },
    "PaymentServiceItemParam": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "key": {
          "$ref": "#/definitions/ServiceItemParamName"
        },
        "origin": {
          "$ref": "#/definitions/ServiceItemParamOrigin"
        },
        "paymentServiceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "type": {
          "$ref": "#/definitions/ServiceItemParamType"
        },
        "value": {
          "type": "string",
          "example": "3025"
        }
      }
    },
    "PaymentServiceItemParams": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentServiceItemParam"
      }
    },
    "PaymentServiceItemStatus": {
      "type": "string",
      "title": "Payment Service Item Status",
      "enum": [
        "REQUESTED",
        "APPROVED",
        "DENIED",
        "SENT_TO_GEX",
        "PAID",
        "EDI_ERROR"
      ]
    },
    "PaymentServiceItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentServiceItem"
      }
    },
    "ProofOfServiceDoc": {
      "type": "object",
      "properties": {
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadWithOmissions"
          }
        }
      }
    },
    "ProofOfServiceDocs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ProofOfServiceDoc"
      }
    },
    "ReServiceCode": {
      "description": "This is the full list of service items that can be found on a shipment. Not all service items\nmay be requested by the Prime, but may be returned in a response.\n\nDocumentation of all the service items will be provided.\n",
      "type": "string",
      "enum": [
        "CS",
        "DBHF",
        "DBTF",
        "DCRT",
        "DDASIT",
        "DDDSIT",
        "DDFSIT",
        "DDP",
        "DDSHUT",
        "DLH",
        "DMHF",
        "DNPK",
        "DOASIT",
        "DOFSIT",
        "DOP",
        "DOPSIT",
        "DOSHUT",
        "DPK",
        "DSH",
        "DUCRT",
        "DUPK",
        "FSC",
        "IBHF",
        "IBTF",
        "ICOLH",
        "ICOUB",
        "ICRT",
        "ICRTSA",
        "IDASIT",
        "IDDSIT",
        "IDFSIT",
        "IDSHUT",
        "IHPK",
        "IHUPK",
        "INPK",
        "IOASIT",
        "IOCLH",
        "IOCUB",
        "IOFSIT",
        "IOOLH",
        "IOOUB",
        "IOPSIT",
        "IOSHUT",
        "IUBPK",
        "IUBUPK",
        "IUCRT",
        "MS",
        "NSTH",
        "NSTUB"
      ]
    },
    "Reweigh": {
      "description": "A reweigh  is when a shipment is weighed for a second time due to the request of a customer, the contractor, system or TOO.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "requestedAt": {
          "type": "string",
          "format": "date-time"
        },
        "requestedBy": {
          "$ref": "#/definitions/ReweighRequester"
        },
        "shipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "verificationProvidedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "verificationReason": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The reweigh was not performed due to some justification provided by the Prime"
        },
        "weight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        }
      }
    },
    "ReweighRequester": {
      "type": "string",
      "enum": [
        "CUSTOMER",
        "PRIME",
        "SYSTEM",
        "TOO"
      ]
    },
    "SITExtension": {
      "description": "A storage in transit (SIT) Extension is a request for an increase in the billable number of days a shipment is allowed to be in SIT.",
      "type": "object",
      "properties": {
        "approvedDays": {
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 30
        },
        "contractorRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "We need SIT additional days. The customer has not found a house yet."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "decisionDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "officeRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false
        },
        "requestReason": {
          "type": "string",
          "enum": [
            "SERIOUS_ILLNESS_MEMBER",
            "SERIOUS_ILLNESS_DEPENDENT",
            "IMPENDING_ASSIGNEMENT",
            "DIRECTED_TEMPORARY_DUTY",
            "NONAVAILABILITY_OF_CIVILIAN_HOUSING",
            "AWAITING_COMPLETION_OF_RESIDENCE",
            "OTHER"
          ]
        },
        "requestedDays": {
          "type": "integer",
          "example": 30
        },
        "status": {
          "enum": [
            "PENDING",
            "APPROVED",
            "DENIED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "SITExtensions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SITExtension"
      }
    },
    "SITLocationType": {
      "description": "The list of SIT location types.",
      "type": "string",
      "enum": [
        "ORIGIN",
        "DESTINATION"
      ]
    },
    "ServiceItemParamName": {
      "type": "string",
      "enum": [
        "ActualPickupDate",
        "ContractCode",
        "ContractYearName",
        "CubicFeetBilled",
        "CubicFeetCrating",
        "DimensionHeight",
        "DimensionLength",
        "DimensionWidth",
        "DistanceZip",
        "DistanceZipSITDest",
        "DistanceZipSITOrigin",
        "EIAFuelPrice",
        "EscalationCompounded",
        "FSCMultiplier",
        "FSCPriceDifferenceInCents",
        "FSCWeightBasedDistanceMultiplier",
        "IsPeak",
        "MarketDest",
        "MarketOrigin",
        "MTOAvailableToPrimeAt",
        "NTSPackingFactor",
        "NumberDaysSIT",
        "PriceAreaDest",
        "PriceAreaIntlDest",
        "PriceAreaIntlOrigin",
        "PriceAreaOrigin",
        "PriceRateOrFactor",
        "PSI_LinehaulDom",
        "PSI_LinehaulDomPrice",
        "PSI_LinehaulShort",
        "PSI_LinehaulShortPrice",
        "PSI_PriceDomDest",
        "PSI_PriceDomDestPrice",
        "PSI_PriceDomOrigin",
        "PSI_PriceDomOriginPrice",
        "PSI_ShippingLinehaulIntlCO",
        "PSI_ShippingLinehaulIntlCOPrice",
        "PSI_ShippingLinehaulIntlOC",
        "PSI_ShippingLinehaulIntlOCPrice",
        "PSI_ShippingLinehaulIntlOO",
        "PSI_ShippingLinehaulIntlOOPrice",
        "RateAreaNonStdDest",
        "RateAreaNonStdOrigin",
        "ReferenceDate",
        "RequestedPickupDate",
        "ServiceAreaDest",
        "ServiceAreaOrigin",
        "ServicesScheduleDest",
        "ServicesScheduleOrigin",
        "SITPaymentRequestEnd",
        "SITPaymentRequestStart",
        "SITScheduleDest",
        "SITScheduleOrigin",
        "SITServiceAreaDest",
        "SITServiceAreaOrigin",
        "WeightAdjusted",
        "WeightBilled",
        "WeightEstimated",
        "WeightOriginal",
        "WeightReweigh",
        "ZipDestAddress",
        "ZipPickupAddress",
        "ZipSITDestHHGFinalAddress",
        "ZipSITDestHHGOriginalAddress",
        "ZipSITOriginHHGActualAddress",
        "ZipSITOriginHHGOriginalAddress",
        "StandaloneCrate",
        "StandaloneCrateCap",
        "UncappedRequestTotal"
      ]
    },
    "ServiceItemParamOrigin": {
      "type": "string",
      "enum": [
        "PRIME",
        "SYSTEM",
        "PRICER",
        "PAYMENT_REQUEST"
      ]
    },
    "ServiceItemParamType": {
      "type": "string",
      "enum": [
        "STRING",
        "DATE",
        "INTEGER",
        "DECIMAL",
        "TIMESTAMP",
        "PaymentServiceItemUUID",
        "BOOLEAN"
      ]
    },
    "ServiceRequestDocument": {
      "type": "object",
      "properties": {
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadWithOmissions"
          }
        }
      }
    },
    "ServiceRequestDocuments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ServiceRequestDocument"
      }
    },
    "ShipmentAddressUpdate": {
      "description": "This represents a destination address change request made by the Prime that is either auto-approved or requires review if the pricing criteria has changed. If criteria has changed, then it must be approved or rejected by a TOO.\n",
      "type": "object",
      "required": [
        "id",
        "status",
        "shipmentID",
        "originalAddress",
        "newAddress",
        "contractorRemarks"
      ],
      "properties": {
        "contractorRemarks": {
          "description": "The reason there is an address change.",
          "type": "string",
          "title": "Contractor Remarks",
          "readOnly": true,
          "example": "This is a contractor remark"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        },
        "newSitDistanceBetween": {
          "description": "The distance between the original SIT address and requested new destination address of shipment",
          "type": "integer",
          "minimum": 0,
          "example": 88
        },
        "officeRemarks": {
          "description": "The TOO comment on approval or rejection.",
          "type": "string",
          "title": "Office Remarks",
          "x-nullable": true,
          "example": "This is an office remark"
        },
        "oldSitDistanceBetween": {
          "description": "The distance between the original SIT address and the previous/old destination address of shipment",
          "type": "integer",
          "minimum": 0,
          "example": 50
        },
        "originalAddress": {
          "$ref": "#/definitions/Address"
        },
        "shipmentID": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "sitOriginalAddress": {
          "$ref": "#/definitions/Address"
        },
        "status": {
          "$ref": "#/definitions/ShipmentAddressUpdateStatus"
        }
      }
    },
    "ShipmentAddressUpdateStatus": {
      "type": "string",
      "title": "Status",
      "enum": [
        "REQUESTED",
        "REJECTED",
        "APPROVED"
      ],
      "x-display-value": {
        "APPROVED": "APPROVED",
        "REJECTED": "REJECTED",
        "REQUESTED": "REQUESTED"
      },
      "readOnly": true
    },
    "SitAddressUpdate": {
      "properties": {
        "contractorRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "Customer reached out to me this week \u0026 let me know they want to move closer to family."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "distance": {
          "type": "integer",
          "maximum": 50,
          "readOnly": true,
          "example": 25
        },
        "eTag": {
          "description": "A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "ddd7bb48-4730-47c4-9781-6500384f4941"
        },
        "mtoServiceItemId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "12d9e103-5a56-4636-906d-6e993b97ef51"
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        },
        "newAddressId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "31a2ad3c-1682-4d5b-8423-ff40053a056b"
        },
        "officeRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The customer has found a new house closer to base."
        },
        "oldAddress": {
          "$ref": "#/definitions/Address"
        },
        "oldAddressId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "31a2ad3c-1682-4d5b-8423-ff40053a056b"
        },
        "status": {
          "$ref": "#/definitions/SitAddressUpdateStatus"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "SitAddressUpdateStatus": {
      "description": "The status of a SIT address update, indicating where it is in the TOO's approval process.",
      "enum": [
        "REQUESTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "SitAddressUpdates": {
      "description": "A list of updates to a SIT service item address.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/SitAddressUpdate"
      }
    },
    "StorageFacility": {
      "description": "The Storage Facility information for the shipment",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "facilityName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lotNumber": {
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        }
      }
    },
    "UpdateMTOServiceItem": {
      "description": "UpdateMTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.",
      "type": "object",
      "required": [
        "modelType"
      ],
      "properties": {
        "id": {
          "description": "ID of the service item. Must match path.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "modelType": {
          "$ref": "#/definitions/UpdateMTOServiceItemModelType"
        }
      },
      "discriminator": "modelType"
    },
    "UpdateMTOServiceItemModelType": {
      "description": "Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.\n  * DDDSIT - UpdateMTOServiceItemSIT\n  * DOPSIT - UpdateMTOServiceItemSIT\n  * DOASIT - UpdateMTOServiceItemSIT\n  * DOFSIT - UpdateMTOServiceItemSIT\n  * DDSHUT - UpdateMTOServiceItemShuttle\n  * DOSHUT - UpdateMTOServiceItemShuttle\n\nThe documentation will then update with the supported fields.\n",
      "type": "string",
      "enum": [
        "UpdateMTOServiceItemSIT",
        "UpdateMTOServiceItemShuttle"
      ]
    },
    "UpdateMTOServiceItemSIT": {
      "description": "Subtype used to provide the departure date for origin or destination SIT. This is not creating a new service item but rather updating and existing service item.\n",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateMTOServiceItem"
        },
        {
          "type": "object",
          "properties": {
            "dateOfContact1": {
              "description": "Date of attempted contact by the prime corresponding to 'timeMilitary1'.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "dateOfContact2": {
              "description": "Date of attempted contact by the prime corresponding to 'timeMilitary2'.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate1": {
              "description": "First available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "firstAvailableDeliveryDate2": {
              "description": "Second available date that Prime can deliver SIT service item.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DDDSIT",
                "DOPSIT",
                "DOASIT",
                "DOFSIT"
              ]
            },
            "requestApprovalsRequestedStatus": {
              "description": "Indicates if \"Approvals Requested\" status is being requested.",
              "type": "boolean",
              "x-nullable": true
            },
            "sitCustomerContacted": {
              "description": "Date when the customer contacted the prime for a delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDepartureDate": {
              "description": "Departure date for SIT. This is the end date of the SIT at either origin or destination.",
              "type": "string",
              "format": "date"
            },
            "sitDestinationFinalAddress": {
              "$ref": "#/definitions/Address"
            },
            "sitEntryDate": {
              "description": "Entry date for the SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitPostalCode": {
              "type": "string",
              "format": "zip",
              "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
              "x-nullable": true,
              "example": "90210"
            },
            "sitRequestedDelivery": {
              "description": "Date when the customer has requested delivery out of SIT.",
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "timeMilitary1": {
              "description": "Time of attempted contact by the prime corresponding to 'dateOfContact1', in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            },
            "timeMilitary2": {
              "description": "Time of attempted contact by the prime corresponding to 'dateOfContact2', in military format.",
              "type": "string",
              "pattern": "\\d{4}Z",
              "x-nullable": true,
              "example": "1400Z"
            },
            "updateReason": {
              "description": "Reason for updating service item.",
              "type": "string",
              "x-nullable": true
            }
          }
        }
      ]
    },
    "UpdateMTOServiceItemShuttle": {
      "description": "Subtype used to provide the estimated weight and actual weight for shuttle. This is not creating a new service item but rather updating an existing service item.\n",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateMTOServiceItem"
        },
        {
          "type": "object",
          "properties": {
            "actualWeight": {
              "description": "Provided by the movers, based on weight tickets. Relevant for shuttling (DDSHUT \u0026 DOSHUT) service items.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4000
            },
            "estimatedWeight": {
              "description": "An estimate of how much weight from a shipment will be included in a shuttling (DDSHUT \u0026 DOSHUT) service item.",
              "type": "integer",
              "x-nullable": true,
              "x-omitempty": false,
              "example": 4200
            },
            "reServiceCode": {
              "description": "Service code allowed for this model type.",
              "type": "string",
              "enum": [
                "DDSHUT",
                "DOSHUT"
              ]
            }
          }
        }
      ]
    },
    "UpdateMTOShipment": {
      "properties": {
        "actualDeliveryDate": {
          "description": "The date when the Prime contractor actually delivered the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualPickupDate": {
          "description": "The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualProGearWeight": {
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualSpouseProGearWeight": {
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "counselorRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "counselor approved"
        },
        "destinationAddress": {
          "description": "Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details\nduring onboarding, if they know their new address already.\n\nMay be blank when entered by the customer, required when entered by the Prime. May not represent the true\nfinal destination due to the shipment being diverted or placed in SIT.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "destinationType": {
          "$ref": "#/definitions/DestinationType"
        },
        "diversion": {
          "description": "This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion.\n",
          "type": "boolean"
        },
        "firstAvailableDeliveryDate": {
          "description": "The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "ntsRecordedWeight": {
          "description": "The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 4500
        },
        "pickupAddress": {
          "description": "The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "pointOfContact": {
          "description": "Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.\n",
          "type": "string"
        },
        "ppmShipment": {
          "$ref": "#/definitions/UpdatePPMShipment"
        },
        "primeActualWeight": {
          "description": "The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "primeEstimatedWeight": {
          "description": "The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it.\n",
          "type": "integer",
          "minimum": 1,
          "x-nullable": true,
          "example": 4500
        },
        "scheduledDeliveryDate": {
          "description": "The date the Prime contractor scheduled to deliver this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "scheduledPickupDate": {
          "description": "The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "secondaryDeliveryAddress": {
          "description": "A second delivery address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "secondaryPickupAddress": {
          "description": "A second pickup address for this shipment, if the customer entered one. An optional field.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        },
        "storageFacility": {
          "allOf": [
            {
              "x-nullable": true
            },
            {
              "$ref": "#/definitions/StorageFacility"
            }
          ]
        }
      }
    },
    "UpdateMTOShipmentStatus": {
      "description": "Contains the statuses available to the Prime when updating the state of a shipment.",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "CANCELED"
          ]
        }
      }
    },
    "UpdatePPMShipment": {
      "description": "The PPM specific fields of the shipment with values being changed",
      "type": "object",
      "properties": {
        "destinationPostalCode": {
          "description": "The postal code of the destination location where goods are being delivered to.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "estimatedWeight": {
          "description": "The estimated weight of the PPM shipment goods being moved.",
          "type": "integer",
          "x-nullable": true,
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to begin moving from their origin.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear for themselves or their spouse.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "pickupPostalCode": {
          "description": "The postal code of the origin location where goods are being moved from.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "proGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to the service member.",
          "type": "integer",
          "x-nullable": true
        },
        "secondaryDestinationPostalCode": {
          "description": "An optional secondary location near the destination where goods will be dropped off.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "description": "An optional secondary pickup location near the origin where additional goods exist.",
          "type": "string",
          "format": "zip",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "sitEstimatedDepartureDate": {
          "description": "The date that goods will exit the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedEntryDate": {
          "description": "The date that goods will first enter the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedWeight": {
          "description": "The estimated weight of the goods being put into storage.",
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "sitExpected": {
          "description": "Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.\n\nMust be set to ` + "`" + `true` + "`" + ` when providing ` + "`" + `sitLocation` + "`" + `, ` + "`" + `sitEstimatedWeight` + "`" + `, ` + "`" + `sitEstimatedEntryDate` + "`" + `, and ` + "`" + `sitEstimatedDepartureDate` + "`" + ` values to calculate the ` + "`" + `sitEstimatedCost` + "`" + `.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/SITLocationType"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "spouseProGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to a spouse.",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "UpdateReweigh": {
      "description": "Contains the fields available to the Prime when updating a reweigh record.",
      "type": "object",
      "properties": {
        "verificationReason": {
          "description": "In lieu of a document being uploaded indicating why a reweigh did not occur.",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The reweigh was not performed because the shipment was already delivered"
        },
        "weight": {
          "description": "The total reweighed weight for the shipment in pounds.",
          "type": "integer",
          "minimum": 1,
          "x-formatting": "weight",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        }
      }
    },
    "UpdateShipmentDestinationAddress": {
      "description": "UpdateShipmentDestinationAddress contains the fields required for the prime to request an update for the destination address on an MTO Shipment.",
      "type": "object",
      "required": [
        "contractorRemarks",
        "newAddress"
      ],
      "properties": {
        "contractorRemarks": {
          "description": "This is the remark the Prime has entered, which would be the reason there is an address change.",
          "type": "string",
          "example": "Customer reached out to me this week and let me know they want to move somewhere else."
        },
        "newAddress": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "UploadWithOmissions": {
      "description": "An uploaded file.",
      "type": "object",
      "required": [
        "filename",
        "contentType",
        "bytes"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "filename": {
          "type": "string",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "status": {
          "type": "string",
          "enum": [
            "INFECTED",
            "CLEAN",
            "PROCESSING"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "ValidationError": {
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object",
          "required": [
            "invalidFields"
          ],
          "properties": {
            "invalidFields": {
              "type": "object",
              "additionalProperties": {
                "description": "List of errors for the field",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "ifMatch": {
      "type": "string",
      "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
      "name": "If-Match",
      "in": "header",
      "required": true
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "A server error occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The request was unprocessable, likely due to bad input from the requester.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  },
  "tags": [
    {
      "description": "The **moveTaskOrder** represents a military move that has been sent to a contractor. It contains all the information about shipments, including service items, estimated weights, actual weights, requested and scheduled move dates, etc.\n",
      "name": "moveTaskOrder"
    },
    {
      "description": "A shipment is some (or all) of a customer's belongings picked up in one location and delivered to another location.\nAll of the items in a shipment are weighed and transported as a discrete unit. One move may include multiple shipments.\nAn **mtoShipment**, in particular, is a shipment that belongs to a [moveTaskOrder](#tag/moveTaskOrder).\n\nThe weights for all of the shipments in a move are combined and compared to the customer's weight allowance.\nIf the sum of the shipments is greater, the customer is liable for paying excess weight cost. Both the customer and\nthe contractor should keep this potential cost in mind when planning a move and the shipments within it.\n",
      "name": "mtoShipment"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "moveTaskOrder",
        "mtoShipment"
      ]
    }
  ]
}`))
}
