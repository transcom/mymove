// Code generated by go-swagger; DO NOT EDIT.

package ordersmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Issuer Organization that issues orders. If more organizations, especially civilian ones, become clients of this API in the future, this enumeration may need to be expanded.
// swagger:model Issuer
type Issuer string

const (

	// IssuerArmy captures enum value "army"
	IssuerArmy Issuer = "army"

	// IssuerNavy captures enum value "navy"
	IssuerNavy Issuer = "navy"

	// IssuerAirForce captures enum value "air-force"
	IssuerAirForce Issuer = "air-force"

	// IssuerMarineCorps captures enum value "marine-corps"
	IssuerMarineCorps Issuer = "marine-corps"

	// IssuerCoastGuard captures enum value "coast-guard"
	IssuerCoastGuard Issuer = "coast-guard"
)

// for schema
var issuerEnum []interface{}

func init() {
	var res []Issuer
	if err := json.Unmarshal([]byte(`["army","navy","air-force","marine-corps","coast-guard"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		issuerEnum = append(issuerEnum, v)
	}
}

func (m Issuer) validateIssuerEnum(path, location string, value Issuer) error {
	if err := validate.Enum(path, location, value, issuerEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this issuer
func (m Issuer) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateIssuerEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
