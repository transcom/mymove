// Code generated by go-swagger; DO NOT EDIT.

package ghcapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "api.move.mil",
  "basePath": "/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "Gets all move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets all move orders",
        "operationId": "listMoveTaskOrders",
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}": {
      "get": {
        "description": "Gets a move order",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets a move order by ID",
        "operationId": "getMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully retrieved move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a move order by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Deletes a move order by ID",
        "operationId": "deleteMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully deleted move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "patch": {
        "description": "Updates a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Updates a move order by ID",
        "operationId": "updateMoveTaskOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/service-items": {
      "get": {
        "description": "Gets all line items for a move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Gets all line items for a move order",
        "operationId": "listServiceItems",
        "responses": {
          "200": {
            "description": "Successfully retrieved all line items for a move task order",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "post": {
        "description": "Creates a service item for a move order by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Creates a service item for a move order by id",
        "operationId": "createServiceItem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created line item for move task order",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order for service item to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/service-items/{serviceItemID}": {
      "get": {
        "description": "Gets a line item by ID for a move order by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Gets a line item by ID for a move order by ID",
        "operationId": "getServiceItem",
        "responses": {
          "200": {
            "description": "Successfully retrieved a line item for a move task order by ID",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a line item by ID for a move order by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Deletes a line item by ID for a move order by ID",
        "operationId": "deleteServiceItem",
        "responses": {
          "200": {
            "description": "Successfully deleted move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "patch": {
        "description": "Updates a service item by ID for a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Updates a service item by ID for a move order by ID",
        "operationId": "updateServiceItem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order status",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "ID of line item to use",
          "name": "serviceItemID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/service-items/{serviceItemID}/status": {
      "patch": {
        "description": "Changes the status of a line item for a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Change the status of a line item for a move order by ID",
        "operationId": "updateServiceItemStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceItemStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated status for a line item for a move task order by ID",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "ID of line item to use",
          "name": "serviceItemID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/status": {
      "patch": {
        "description": "Changes move order status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Change the status of a move order",
        "operationId": "updateMoveTaskOrderStatus",
        "parameters": [
          {
            "type": "string",
            "description": "ID of move order to use",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order status",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/payment-requests": {
      "get": {
        "description": "Gets a list of payment requests",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime",
          "gov"
        ],
        "summary": "Gets payment requests",
        "operationId": "listPaymentRequests",
        "responses": {
          "200": {
            "description": "fetched list of payment requests",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a payment request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime"
        ],
        "summary": "Creates a payment request",
        "operationId": "createPaymentRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequestPayload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created instance of payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/payment-requests/{paymentRequestID}": {
      "get": {
        "description": "Fetches an instance of a payment request by id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime",
          "gov"
        ],
        "summary": "Fetches a payment request by id",
        "operationId": "getPaymentRequest",
        "responses": {
          "200": {
            "description": "fetched instance of payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "patch": {
        "description": "Updates a payment request by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime"
        ],
        "summary": "Updates a payment request by id",
        "operationId": "updatePaymentRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of payment request",
          "name": "paymentRequestID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/status": {
      "patch": {
        "description": "Updates status of a payment request by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "gov"
        ],
        "summary": "Updates status of a payment request by id",
        "operationId": "updatePaymentRequestStatus",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of payment request",
            "name": "paymentRequestID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestStatusPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreatePaymentRequestPayload": {
      "type": "object",
      "properties": {
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "proofOfServicePackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        }
      }
    },
    "Customer": {
      "type": "object"
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "dependentsAuthorized": {
          "type": "boolean",
          "example": true
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeightSelf": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 18000
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "USMC-0001"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "destinationDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "destinationPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "entitlements": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveDate": {
          "type": "string",
          "format": "date"
        },
        "moveID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "moveTaskOrdersType": {
          "type": "string",
          "enum": [
            "NON_TEMPORARY_STORAGE",
            "PRIME"
          ]
        },
        "originDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "originPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "remarks": {
          "type": "string",
          "example": "Requires more gentle care"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "serviceItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceItem"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "REJECTED",
            "SUBMITTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrderStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "documentPackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PAYMENT_SUBMITTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "ProofOfServicePackage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "ServiceItem": {
      "type": "object",
      "properties": {
        "MoveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "approvedAt": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "rejectedAt": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "submittedAt": {
          "type": "string",
          "format": "date"
        },
        "total": {
          "type": "integer",
          "format": "cents"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ServiceItemStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        }
      }
    },
    "UpdatePaymentRequestPayload": {
      "type": "object",
      "properties": {
        "proofOfServicePackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        }
      }
    },
    "UpdatePaymentRequestStatusPayload": {
      "type": "object",
      "properties": {
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "id",
        "url",
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "filename": {
          "type": "string",
          "format": "binary",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "api.move.mil",
  "basePath": "/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "Gets all move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets all move orders",
        "operationId": "listMoveTaskOrders",
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}": {
      "get": {
        "description": "Gets a move order",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets a move order by ID",
        "operationId": "getMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully retrieved move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a move order by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Deletes a move order by ID",
        "operationId": "deleteMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully deleted move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Updates a move order by ID",
        "operationId": "updateMoveTaskOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/service-items": {
      "get": {
        "description": "Gets all line items for a move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Gets all line items for a move order",
        "operationId": "listServiceItems",
        "responses": {
          "200": {
            "description": "Successfully retrieved all line items for a move task order",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a service item for a move order by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Creates a service item for a move order by id",
        "operationId": "createServiceItem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created line item for move task order",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order for service item to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/service-items/{serviceItemID}": {
      "get": {
        "description": "Gets a line item by ID for a move order by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Gets a line item by ID for a move order by ID",
        "operationId": "getServiceItem",
        "responses": {
          "200": {
            "description": "Successfully retrieved a line item for a move task order by ID",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a line item by ID for a move order by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Deletes a line item by ID for a move order by ID",
        "operationId": "deleteServiceItem",
        "responses": {
          "200": {
            "description": "Successfully deleted move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates a service item by ID for a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Updates a service item by ID for a move order by ID",
        "operationId": "updateServiceItem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order status",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "ID of line item to use",
          "name": "serviceItemID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/service-items/{serviceItemID}/status": {
      "patch": {
        "description": "Changes the status of a line item for a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceItem"
        ],
        "summary": "Change the status of a line item for a move order by ID",
        "operationId": "updateServiceItemStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceItemStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated status for a line item for a move task order by ID",
            "schema": {
              "$ref": "#/definitions/ServiceItem"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "ID of line item to use",
          "name": "serviceItemID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/status": {
      "patch": {
        "description": "Changes move order status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Change the status of a move order",
        "operationId": "updateMoveTaskOrderStatus",
        "parameters": [
          {
            "type": "string",
            "description": "ID of move order to use",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order status",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/payment-requests": {
      "get": {
        "description": "Gets a list of payment requests",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime",
          "gov"
        ],
        "summary": "Gets payment requests",
        "operationId": "listPaymentRequests",
        "responses": {
          "200": {
            "description": "fetched list of payment requests",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a payment request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime"
        ],
        "summary": "Creates a payment request",
        "operationId": "createPaymentRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequestPayload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created instance of payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/payment-requests/{paymentRequestID}": {
      "get": {
        "description": "Fetches an instance of a payment request by id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime",
          "gov"
        ],
        "summary": "Fetches a payment request by id",
        "operationId": "getPaymentRequest",
        "responses": {
          "200": {
            "description": "fetched instance of payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates a payment request by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "prime"
        ],
        "summary": "Updates a payment request by id",
        "operationId": "updatePaymentRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of payment request",
          "name": "paymentRequestID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/status": {
      "patch": {
        "description": "Updates status of a payment request by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests",
          "gov"
        ],
        "summary": "Updates status of a payment request by id",
        "operationId": "updatePaymentRequestStatus",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of payment request",
            "name": "paymentRequestID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestStatusPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreatePaymentRequestPayload": {
      "type": "object",
      "properties": {
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "proofOfServicePackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        }
      }
    },
    "Customer": {
      "type": "object"
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "dependentsAuthorized": {
          "type": "boolean",
          "example": true
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeightSelf": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 18000
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "USMC-0001"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "destinationDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "destinationPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "entitlements": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveDate": {
          "type": "string",
          "format": "date"
        },
        "moveID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "moveTaskOrdersType": {
          "type": "string",
          "enum": [
            "NON_TEMPORARY_STORAGE",
            "PRIME"
          ]
        },
        "originDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "originPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "remarks": {
          "type": "string",
          "example": "Requires more gentle care"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "serviceItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceItem"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "REJECTED",
            "SUBMITTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrderStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "documentPackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PAYMENT_SUBMITTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "ProofOfServicePackage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "ServiceItem": {
      "type": "object",
      "properties": {
        "MoveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "approvedAt": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "rejectedAt": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "submittedAt": {
          "type": "string",
          "format": "date"
        },
        "total": {
          "type": "integer",
          "format": "cents"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ServiceItemStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        }
      }
    },
    "UpdatePaymentRequestPayload": {
      "type": "object",
      "properties": {
        "proofOfServicePackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        }
      }
    },
    "UpdatePaymentRequestStatusPayload": {
      "type": "object",
      "properties": {
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "id",
        "url",
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "filename": {
          "type": "string",
          "format": "binary",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
