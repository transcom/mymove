// Code generated by go-swagger; DO NOT EDIT.

package service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateServiceItemHandlerFunc turns a function with the right signature into a create service item handler
type CreateServiceItemHandlerFunc func(CreateServiceItemParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateServiceItemHandlerFunc) Handle(params CreateServiceItemParams) middleware.Responder {
	return fn(params)
}

// CreateServiceItemHandler interface for that can handle valid create service item params
type CreateServiceItemHandler interface {
	Handle(CreateServiceItemParams) middleware.Responder
}

// NewCreateServiceItem creates a new http.Handler for the create service item operation
func NewCreateServiceItem(ctx *middleware.Context, handler CreateServiceItemHandler) *CreateServiceItem {
	return &CreateServiceItem{Context: ctx, Handler: handler}
}

/*CreateServiceItem swagger:route POST /move_task_orders/{moveTaskOrderID}/service_items serviceItem createServiceItem

Creates a service item for a move order by id

Creates a service item for a move order by id

*/
type CreateServiceItem struct {
	Context *middleware.Context
	Handler CreateServiceItemHandler
}

func (o *CreateServiceItem) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateServiceItemParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
