// Code generated by go-swagger; DO NOT EDIT.

package service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	ghcmessages "github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateServiceItemStatusOKCode is the HTTP code returned for type UpdateServiceItemStatusOK
const UpdateServiceItemStatusOKCode int = 200

/*UpdateServiceItemStatusOK Successfully updated status for a line item for a move task order by ID

swagger:response updateServiceItemStatusOK
*/
type UpdateServiceItemStatusOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ServiceItem `json:"body,omitempty"`
}

// NewUpdateServiceItemStatusOK creates UpdateServiceItemStatusOK with default headers values
func NewUpdateServiceItemStatusOK() *UpdateServiceItemStatusOK {

	return &UpdateServiceItemStatusOK{}
}

// WithPayload adds the payload to the update service item status o k response
func (o *UpdateServiceItemStatusOK) WithPayload(payload *ghcmessages.ServiceItem) *UpdateServiceItemStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service item status o k response
func (o *UpdateServiceItemStatusOK) SetPayload(payload *ghcmessages.ServiceItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceItemStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceItemStatusBadRequestCode is the HTTP code returned for type UpdateServiceItemStatusBadRequest
const UpdateServiceItemStatusBadRequestCode int = 400

/*UpdateServiceItemStatusBadRequest The request payload is invalid

swagger:response updateServiceItemStatusBadRequest
*/
type UpdateServiceItemStatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.InvalidRequest `json:"body,omitempty"`
}

// NewUpdateServiceItemStatusBadRequest creates UpdateServiceItemStatusBadRequest with default headers values
func NewUpdateServiceItemStatusBadRequest() *UpdateServiceItemStatusBadRequest {

	return &UpdateServiceItemStatusBadRequest{}
}

// WithPayload adds the payload to the update service item status bad request response
func (o *UpdateServiceItemStatusBadRequest) WithPayload(payload *ghcmessages.InvalidRequest) *UpdateServiceItemStatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service item status bad request response
func (o *UpdateServiceItemStatusBadRequest) SetPayload(payload *ghcmessages.InvalidRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceItemStatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceItemStatusUnauthorizedCode is the HTTP code returned for type UpdateServiceItemStatusUnauthorized
const UpdateServiceItemStatusUnauthorizedCode int = 401

/*UpdateServiceItemStatusUnauthorized The request was denied

swagger:response updateServiceItemStatusUnauthorized
*/
type UpdateServiceItemStatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.PermissionDenied `json:"body,omitempty"`
}

// NewUpdateServiceItemStatusUnauthorized creates UpdateServiceItemStatusUnauthorized with default headers values
func NewUpdateServiceItemStatusUnauthorized() *UpdateServiceItemStatusUnauthorized {

	return &UpdateServiceItemStatusUnauthorized{}
}

// WithPayload adds the payload to the update service item status unauthorized response
func (o *UpdateServiceItemStatusUnauthorized) WithPayload(payload *ghcmessages.PermissionDenied) *UpdateServiceItemStatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service item status unauthorized response
func (o *UpdateServiceItemStatusUnauthorized) SetPayload(payload *ghcmessages.PermissionDenied) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceItemStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceItemStatusForbiddenCode is the HTTP code returned for type UpdateServiceItemStatusForbidden
const UpdateServiceItemStatusForbiddenCode int = 403

/*UpdateServiceItemStatusForbidden The request was denied

swagger:response updateServiceItemStatusForbidden
*/
type UpdateServiceItemStatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.PermissionDenied `json:"body,omitempty"`
}

// NewUpdateServiceItemStatusForbidden creates UpdateServiceItemStatusForbidden with default headers values
func NewUpdateServiceItemStatusForbidden() *UpdateServiceItemStatusForbidden {

	return &UpdateServiceItemStatusForbidden{}
}

// WithPayload adds the payload to the update service item status forbidden response
func (o *UpdateServiceItemStatusForbidden) WithPayload(payload *ghcmessages.PermissionDenied) *UpdateServiceItemStatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service item status forbidden response
func (o *UpdateServiceItemStatusForbidden) SetPayload(payload *ghcmessages.PermissionDenied) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceItemStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceItemStatusNotFoundCode is the HTTP code returned for type UpdateServiceItemStatusNotFound
const UpdateServiceItemStatusNotFoundCode int = 404

/*UpdateServiceItemStatusNotFound The requested resource wasn't found

swagger:response updateServiceItemStatusNotFound
*/
type UpdateServiceItemStatusNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.NotFound `json:"body,omitempty"`
}

// NewUpdateServiceItemStatusNotFound creates UpdateServiceItemStatusNotFound with default headers values
func NewUpdateServiceItemStatusNotFound() *UpdateServiceItemStatusNotFound {

	return &UpdateServiceItemStatusNotFound{}
}

// WithPayload adds the payload to the update service item status not found response
func (o *UpdateServiceItemStatusNotFound) WithPayload(payload *ghcmessages.NotFound) *UpdateServiceItemStatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service item status not found response
func (o *UpdateServiceItemStatusNotFound) SetPayload(payload *ghcmessages.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceItemStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceItemStatusInternalServerErrorCode is the HTTP code returned for type UpdateServiceItemStatusInternalServerError
const UpdateServiceItemStatusInternalServerErrorCode int = 500

/*UpdateServiceItemStatusInternalServerError A server error occurred

swagger:response updateServiceItemStatusInternalServerError
*/
type UpdateServiceItemStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ServerError `json:"body,omitempty"`
}

// NewUpdateServiceItemStatusInternalServerError creates UpdateServiceItemStatusInternalServerError with default headers values
func NewUpdateServiceItemStatusInternalServerError() *UpdateServiceItemStatusInternalServerError {

	return &UpdateServiceItemStatusInternalServerError{}
}

// WithPayload adds the payload to the update service item status internal server error response
func (o *UpdateServiceItemStatusInternalServerError) WithPayload(payload *ghcmessages.ServerError) *UpdateServiceItemStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service item status internal server error response
func (o *UpdateServiceItemStatusInternalServerError) SetPayload(payload *ghcmessages.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceItemStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
