// Code generated by go-swagger; DO NOT EDIT.

package service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListServiceItemsHandlerFunc turns a function with the right signature into a list service items handler
type ListServiceItemsHandlerFunc func(ListServiceItemsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListServiceItemsHandlerFunc) Handle(params ListServiceItemsParams) middleware.Responder {
	return fn(params)
}

// ListServiceItemsHandler interface for that can handle valid list service items params
type ListServiceItemsHandler interface {
	Handle(ListServiceItemsParams) middleware.Responder
}

// NewListServiceItems creates a new http.Handler for the list service items operation
func NewListServiceItems(ctx *middleware.Context, handler ListServiceItemsHandler) *ListServiceItems {
	return &ListServiceItems{Context: ctx, Handler: handler}
}

/*ListServiceItems swagger:route GET /move_task_orders/{moveTaskOrderID}/service_items serviceItem listServiceItems

Gets all line items for a move order

Gets all line items for a move orders

*/
type ListServiceItems struct {
	Context *middleware.Context
	Handler ListServiceItemsHandler
}

func (o *ListServiceItems) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListServiceItemsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
