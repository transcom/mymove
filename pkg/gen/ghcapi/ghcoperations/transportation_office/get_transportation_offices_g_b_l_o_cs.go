// Code generated by go-swagger; DO NOT EDIT.

package transportation_office

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetTransportationOfficesGBLOCsHandlerFunc turns a function with the right signature into a get transportation offices g b l o cs handler
type GetTransportationOfficesGBLOCsHandlerFunc func(GetTransportationOfficesGBLOCsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTransportationOfficesGBLOCsHandlerFunc) Handle(params GetTransportationOfficesGBLOCsParams) middleware.Responder {
	return fn(params)
}

// GetTransportationOfficesGBLOCsHandler interface for that can handle valid get transportation offices g b l o cs params
type GetTransportationOfficesGBLOCsHandler interface {
	Handle(GetTransportationOfficesGBLOCsParams) middleware.Responder
}

// NewGetTransportationOfficesGBLOCs creates a new http.Handler for the get transportation offices g b l o cs operation
func NewGetTransportationOfficesGBLOCs(ctx *middleware.Context, handler GetTransportationOfficesGBLOCsHandler) *GetTransportationOfficesGBLOCs {
	return &GetTransportationOfficesGBLOCs{Context: ctx, Handler: handler}
}

/*
	GetTransportationOfficesGBLOCs swagger:route GET /transportation-offices/gblocs transportationOffice getTransportationOfficesGBLOCs

# Returns a list of distinct GBLOCs that exist in the transportation offices table

Returns a list of distinct GBLOCs that exist in the transportation offices table
*/
type GetTransportationOfficesGBLOCs struct {
	Context *middleware.Context
	Handler GetTransportationOfficesGBLOCsHandler
}

func (o *GetTransportationOfficesGBLOCs) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTransportationOfficesGBLOCsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
