// Code generated by go-swagger; DO NOT EDIT.

package move_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetMoveOrderOKCode is the HTTP code returned for type GetMoveOrderOK
const GetMoveOrderOKCode int = 200

/*GetMoveOrderOK Successfully retrieved move order

swagger:response getMoveOrderOK
*/
type GetMoveOrderOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MoveOrder `json:"body,omitempty"`
}

// NewGetMoveOrderOK creates GetMoveOrderOK with default headers values
func NewGetMoveOrderOK() *GetMoveOrderOK {

	return &GetMoveOrderOK{}
}

// WithPayload adds the payload to the get move order o k response
func (o *GetMoveOrderOK) WithPayload(payload *ghcmessages.MoveOrder) *GetMoveOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move order o k response
func (o *GetMoveOrderOK) SetPayload(payload *ghcmessages.MoveOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveOrderBadRequestCode is the HTTP code returned for type GetMoveOrderBadRequest
const GetMoveOrderBadRequestCode int = 400

/*GetMoveOrderBadRequest The request payload is invalid

swagger:response getMoveOrderBadRequest
*/
type GetMoveOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveOrderBadRequest creates GetMoveOrderBadRequest with default headers values
func NewGetMoveOrderBadRequest() *GetMoveOrderBadRequest {

	return &GetMoveOrderBadRequest{}
}

// WithPayload adds the payload to the get move order bad request response
func (o *GetMoveOrderBadRequest) WithPayload(payload interface{}) *GetMoveOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move order bad request response
func (o *GetMoveOrderBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveOrderUnauthorizedCode is the HTTP code returned for type GetMoveOrderUnauthorized
const GetMoveOrderUnauthorizedCode int = 401

/*GetMoveOrderUnauthorized The request was denied

swagger:response getMoveOrderUnauthorized
*/
type GetMoveOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveOrderUnauthorized creates GetMoveOrderUnauthorized with default headers values
func NewGetMoveOrderUnauthorized() *GetMoveOrderUnauthorized {

	return &GetMoveOrderUnauthorized{}
}

// WithPayload adds the payload to the get move order unauthorized response
func (o *GetMoveOrderUnauthorized) WithPayload(payload interface{}) *GetMoveOrderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move order unauthorized response
func (o *GetMoveOrderUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveOrderForbiddenCode is the HTTP code returned for type GetMoveOrderForbidden
const GetMoveOrderForbiddenCode int = 403

/*GetMoveOrderForbidden The request was denied

swagger:response getMoveOrderForbidden
*/
type GetMoveOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveOrderForbidden creates GetMoveOrderForbidden with default headers values
func NewGetMoveOrderForbidden() *GetMoveOrderForbidden {

	return &GetMoveOrderForbidden{}
}

// WithPayload adds the payload to the get move order forbidden response
func (o *GetMoveOrderForbidden) WithPayload(payload interface{}) *GetMoveOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move order forbidden response
func (o *GetMoveOrderForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveOrderNotFoundCode is the HTTP code returned for type GetMoveOrderNotFound
const GetMoveOrderNotFoundCode int = 404

/*GetMoveOrderNotFound The requested resource wasn't found

swagger:response getMoveOrderNotFound
*/
type GetMoveOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveOrderNotFound creates GetMoveOrderNotFound with default headers values
func NewGetMoveOrderNotFound() *GetMoveOrderNotFound {

	return &GetMoveOrderNotFound{}
}

// WithPayload adds the payload to the get move order not found response
func (o *GetMoveOrderNotFound) WithPayload(payload interface{}) *GetMoveOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move order not found response
func (o *GetMoveOrderNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveOrderInternalServerErrorCode is the HTTP code returned for type GetMoveOrderInternalServerError
const GetMoveOrderInternalServerErrorCode int = 500

/*GetMoveOrderInternalServerError A server error occurred

swagger:response getMoveOrderInternalServerError
*/
type GetMoveOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveOrderInternalServerError creates GetMoveOrderInternalServerError with default headers values
func NewGetMoveOrderInternalServerError() *GetMoveOrderInternalServerError {

	return &GetMoveOrderInternalServerError{}
}

// WithPayload adds the payload to the get move order internal server error response
func (o *GetMoveOrderInternalServerError) WithPayload(payload interface{}) *GetMoveOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move order internal server error response
func (o *GetMoveOrderInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
