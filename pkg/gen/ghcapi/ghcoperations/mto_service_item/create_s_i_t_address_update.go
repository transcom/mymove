// Code generated by go-swagger; DO NOT EDIT.

package mto_service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateSITAddressUpdateHandlerFunc turns a function with the right signature into a create s i t address update handler
type CreateSITAddressUpdateHandlerFunc func(CreateSITAddressUpdateParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateSITAddressUpdateHandlerFunc) Handle(params CreateSITAddressUpdateParams) middleware.Responder {
	return fn(params)
}

// CreateSITAddressUpdateHandler interface for that can handle valid create s i t address update params
type CreateSITAddressUpdateHandler interface {
	Handle(CreateSITAddressUpdateParams) middleware.Responder
}

// NewCreateSITAddressUpdate creates a new http.Handler for the create s i t address update operation
func NewCreateSITAddressUpdate(ctx *middleware.Context, handler CreateSITAddressUpdateHandler) *CreateSITAddressUpdate {
	return &CreateSITAddressUpdate{Context: ctx, Handler: handler}
}

/*
	CreateSITAddressUpdate swagger:route POST /service-items/{mtoServiceItemID}/sit-address-update mtoServiceItem createSITAddressUpdate

# Create an approved SIT Address Update

TOO can create an already-approved SIT Address Update on behalf of a customer
*/
type CreateSITAddressUpdate struct {
	Context *middleware.Context
	Handler CreateSITAddressUpdateHandler
}

func (o *CreateSITAddressUpdate) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateSITAddressUpdateParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
