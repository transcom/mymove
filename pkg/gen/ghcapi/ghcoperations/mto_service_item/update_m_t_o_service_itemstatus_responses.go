// Code generated by go-swagger; DO NOT EDIT.

package mto_service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	ghcmessages "github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateMTOServiceItemstatusOKCode is the HTTP code returned for type UpdateMTOServiceItemstatusOK
const UpdateMTOServiceItemstatusOKCode int = 200

/*UpdateMTOServiceItemstatusOK Successfully updated status for a line item for a move task order by ID

swagger:response updateMTOServiceItemstatusOK
*/
type UpdateMTOServiceItemstatusOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOServiceItem `json:"body,omitempty"`
}

// NewUpdateMTOServiceItemstatusOK creates UpdateMTOServiceItemstatusOK with default headers values
func NewUpdateMTOServiceItemstatusOK() *UpdateMTOServiceItemstatusOK {

	return &UpdateMTOServiceItemstatusOK{}
}

// WithPayload adds the payload to the update m t o service itemstatus o k response
func (o *UpdateMTOServiceItemstatusOK) WithPayload(payload *ghcmessages.MTOServiceItem) *UpdateMTOServiceItemstatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o service itemstatus o k response
func (o *UpdateMTOServiceItemstatusOK) SetPayload(payload *ghcmessages.MTOServiceItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOServiceItemstatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOServiceItemstatusBadRequestCode is the HTTP code returned for type UpdateMTOServiceItemstatusBadRequest
const UpdateMTOServiceItemstatusBadRequestCode int = 400

/*UpdateMTOServiceItemstatusBadRequest The request payload is invalid

swagger:response updateMTOServiceItemstatusBadRequest
*/
type UpdateMTOServiceItemstatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateMTOServiceItemstatusBadRequest creates UpdateMTOServiceItemstatusBadRequest with default headers values
func NewUpdateMTOServiceItemstatusBadRequest() *UpdateMTOServiceItemstatusBadRequest {

	return &UpdateMTOServiceItemstatusBadRequest{}
}

// WithPayload adds the payload to the update m t o service itemstatus bad request response
func (o *UpdateMTOServiceItemstatusBadRequest) WithPayload(payload interface{}) *UpdateMTOServiceItemstatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o service itemstatus bad request response
func (o *UpdateMTOServiceItemstatusBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOServiceItemstatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateMTOServiceItemstatusUnauthorizedCode is the HTTP code returned for type UpdateMTOServiceItemstatusUnauthorized
const UpdateMTOServiceItemstatusUnauthorizedCode int = 401

/*UpdateMTOServiceItemstatusUnauthorized The request was denied

swagger:response updateMTOServiceItemstatusUnauthorized
*/
type UpdateMTOServiceItemstatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateMTOServiceItemstatusUnauthorized creates UpdateMTOServiceItemstatusUnauthorized with default headers values
func NewUpdateMTOServiceItemstatusUnauthorized() *UpdateMTOServiceItemstatusUnauthorized {

	return &UpdateMTOServiceItemstatusUnauthorized{}
}

// WithPayload adds the payload to the update m t o service itemstatus unauthorized response
func (o *UpdateMTOServiceItemstatusUnauthorized) WithPayload(payload interface{}) *UpdateMTOServiceItemstatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o service itemstatus unauthorized response
func (o *UpdateMTOServiceItemstatusUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOServiceItemstatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateMTOServiceItemstatusForbiddenCode is the HTTP code returned for type UpdateMTOServiceItemstatusForbidden
const UpdateMTOServiceItemstatusForbiddenCode int = 403

/*UpdateMTOServiceItemstatusForbidden The request was denied

swagger:response updateMTOServiceItemstatusForbidden
*/
type UpdateMTOServiceItemstatusForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateMTOServiceItemstatusForbidden creates UpdateMTOServiceItemstatusForbidden with default headers values
func NewUpdateMTOServiceItemstatusForbidden() *UpdateMTOServiceItemstatusForbidden {

	return &UpdateMTOServiceItemstatusForbidden{}
}

// WithPayload adds the payload to the update m t o service itemstatus forbidden response
func (o *UpdateMTOServiceItemstatusForbidden) WithPayload(payload interface{}) *UpdateMTOServiceItemstatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o service itemstatus forbidden response
func (o *UpdateMTOServiceItemstatusForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOServiceItemstatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateMTOServiceItemstatusNotFoundCode is the HTTP code returned for type UpdateMTOServiceItemstatusNotFound
const UpdateMTOServiceItemstatusNotFoundCode int = 404

/*UpdateMTOServiceItemstatusNotFound The requested resource wasn't found

swagger:response updateMTOServiceItemstatusNotFound
*/
type UpdateMTOServiceItemstatusNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateMTOServiceItemstatusNotFound creates UpdateMTOServiceItemstatusNotFound with default headers values
func NewUpdateMTOServiceItemstatusNotFound() *UpdateMTOServiceItemstatusNotFound {

	return &UpdateMTOServiceItemstatusNotFound{}
}

// WithPayload adds the payload to the update m t o service itemstatus not found response
func (o *UpdateMTOServiceItemstatusNotFound) WithPayload(payload interface{}) *UpdateMTOServiceItemstatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o service itemstatus not found response
func (o *UpdateMTOServiceItemstatusNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOServiceItemstatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateMTOServiceItemstatusInternalServerErrorCode is the HTTP code returned for type UpdateMTOServiceItemstatusInternalServerError
const UpdateMTOServiceItemstatusInternalServerErrorCode int = 500

/*UpdateMTOServiceItemstatusInternalServerError A server error occurred

swagger:response updateMTOServiceItemstatusInternalServerError
*/
type UpdateMTOServiceItemstatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateMTOServiceItemstatusInternalServerError creates UpdateMTOServiceItemstatusInternalServerError with default headers values
func NewUpdateMTOServiceItemstatusInternalServerError() *UpdateMTOServiceItemstatusInternalServerError {

	return &UpdateMTOServiceItemstatusInternalServerError{}
}

// WithPayload adds the payload to the update m t o service itemstatus internal server error response
func (o *UpdateMTOServiceItemstatusInternalServerError) WithPayload(payload interface{}) *UpdateMTOServiceItemstatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o service itemstatus internal server error response
func (o *UpdateMTOServiceItemstatusInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOServiceItemstatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
