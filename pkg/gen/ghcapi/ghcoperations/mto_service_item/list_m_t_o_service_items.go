// Code generated by go-swagger; DO NOT EDIT.

package mto_service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListMTOServiceItemsHandlerFunc turns a function with the right signature into a list m t o service items handler
type ListMTOServiceItemsHandlerFunc func(ListMTOServiceItemsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListMTOServiceItemsHandlerFunc) Handle(params ListMTOServiceItemsParams) middleware.Responder {
	return fn(params)
}

// ListMTOServiceItemsHandler interface for that can handle valid list m t o service items params
type ListMTOServiceItemsHandler interface {
	Handle(ListMTOServiceItemsParams) middleware.Responder
}

// NewListMTOServiceItems creates a new http.Handler for the list m t o service items operation
func NewListMTOServiceItems(ctx *middleware.Context, handler ListMTOServiceItemsHandler) *ListMTOServiceItems {
	return &ListMTOServiceItems{Context: ctx, Handler: handler}
}

/*ListMTOServiceItems swagger:route GET /move_task_orders/{moveTaskOrderID}/mto_service_items mtoServiceItem listMTOServiceItems

Gets all line items for a move

Gets all line items for a move

*/
type ListMTOServiceItems struct {
	Context *middleware.Context
	Handler ListMTOServiceItemsHandler
}

func (o *ListMTOServiceItems) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListMTOServiceItemsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
