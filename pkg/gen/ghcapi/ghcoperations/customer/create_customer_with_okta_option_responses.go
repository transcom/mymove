// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// CreateCustomerWithOktaOptionOKCode is the HTTP code returned for type CreateCustomerWithOktaOptionOK
const CreateCustomerWithOktaOptionOKCode int = 200

/*
CreateCustomerWithOktaOptionOK successfully created the customer

swagger:response createCustomerWithOktaOptionOK
*/
type CreateCustomerWithOktaOptionOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.CreatedCustomer `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionOK creates CreateCustomerWithOktaOptionOK with default headers values
func NewCreateCustomerWithOktaOptionOK() *CreateCustomerWithOktaOptionOK {

	return &CreateCustomerWithOktaOptionOK{}
}

// WithPayload adds the payload to the create customer with okta option o k response
func (o *CreateCustomerWithOktaOptionOK) WithPayload(payload *ghcmessages.CreatedCustomer) *CreateCustomerWithOktaOptionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option o k response
func (o *CreateCustomerWithOktaOptionOK) SetPayload(payload *ghcmessages.CreatedCustomer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerWithOktaOptionBadRequestCode is the HTTP code returned for type CreateCustomerWithOktaOptionBadRequest
const CreateCustomerWithOktaOptionBadRequestCode int = 400

/*
CreateCustomerWithOktaOptionBadRequest The request payload is invalid

swagger:response createCustomerWithOktaOptionBadRequest
*/
type CreateCustomerWithOktaOptionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionBadRequest creates CreateCustomerWithOktaOptionBadRequest with default headers values
func NewCreateCustomerWithOktaOptionBadRequest() *CreateCustomerWithOktaOptionBadRequest {

	return &CreateCustomerWithOktaOptionBadRequest{}
}

// WithPayload adds the payload to the create customer with okta option bad request response
func (o *CreateCustomerWithOktaOptionBadRequest) WithPayload(payload *ghcmessages.Error) *CreateCustomerWithOktaOptionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option bad request response
func (o *CreateCustomerWithOktaOptionBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerWithOktaOptionUnauthorizedCode is the HTTP code returned for type CreateCustomerWithOktaOptionUnauthorized
const CreateCustomerWithOktaOptionUnauthorizedCode int = 401

/*
CreateCustomerWithOktaOptionUnauthorized The request was denied

swagger:response createCustomerWithOktaOptionUnauthorized
*/
type CreateCustomerWithOktaOptionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionUnauthorized creates CreateCustomerWithOktaOptionUnauthorized with default headers values
func NewCreateCustomerWithOktaOptionUnauthorized() *CreateCustomerWithOktaOptionUnauthorized {

	return &CreateCustomerWithOktaOptionUnauthorized{}
}

// WithPayload adds the payload to the create customer with okta option unauthorized response
func (o *CreateCustomerWithOktaOptionUnauthorized) WithPayload(payload *ghcmessages.Error) *CreateCustomerWithOktaOptionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option unauthorized response
func (o *CreateCustomerWithOktaOptionUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerWithOktaOptionForbiddenCode is the HTTP code returned for type CreateCustomerWithOktaOptionForbidden
const CreateCustomerWithOktaOptionForbiddenCode int = 403

/*
CreateCustomerWithOktaOptionForbidden The request was denied

swagger:response createCustomerWithOktaOptionForbidden
*/
type CreateCustomerWithOktaOptionForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionForbidden creates CreateCustomerWithOktaOptionForbidden with default headers values
func NewCreateCustomerWithOktaOptionForbidden() *CreateCustomerWithOktaOptionForbidden {

	return &CreateCustomerWithOktaOptionForbidden{}
}

// WithPayload adds the payload to the create customer with okta option forbidden response
func (o *CreateCustomerWithOktaOptionForbidden) WithPayload(payload *ghcmessages.Error) *CreateCustomerWithOktaOptionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option forbidden response
func (o *CreateCustomerWithOktaOptionForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerWithOktaOptionNotFoundCode is the HTTP code returned for type CreateCustomerWithOktaOptionNotFound
const CreateCustomerWithOktaOptionNotFoundCode int = 404

/*
CreateCustomerWithOktaOptionNotFound The requested resource wasn't found

swagger:response createCustomerWithOktaOptionNotFound
*/
type CreateCustomerWithOktaOptionNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionNotFound creates CreateCustomerWithOktaOptionNotFound with default headers values
func NewCreateCustomerWithOktaOptionNotFound() *CreateCustomerWithOktaOptionNotFound {

	return &CreateCustomerWithOktaOptionNotFound{}
}

// WithPayload adds the payload to the create customer with okta option not found response
func (o *CreateCustomerWithOktaOptionNotFound) WithPayload(payload *ghcmessages.Error) *CreateCustomerWithOktaOptionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option not found response
func (o *CreateCustomerWithOktaOptionNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerWithOktaOptionPreconditionFailedCode is the HTTP code returned for type CreateCustomerWithOktaOptionPreconditionFailed
const CreateCustomerWithOktaOptionPreconditionFailedCode int = 412

/*
CreateCustomerWithOktaOptionPreconditionFailed Precondition failed

swagger:response createCustomerWithOktaOptionPreconditionFailed
*/
type CreateCustomerWithOktaOptionPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionPreconditionFailed creates CreateCustomerWithOktaOptionPreconditionFailed with default headers values
func NewCreateCustomerWithOktaOptionPreconditionFailed() *CreateCustomerWithOktaOptionPreconditionFailed {

	return &CreateCustomerWithOktaOptionPreconditionFailed{}
}

// WithPayload adds the payload to the create customer with okta option precondition failed response
func (o *CreateCustomerWithOktaOptionPreconditionFailed) WithPayload(payload *ghcmessages.Error) *CreateCustomerWithOktaOptionPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option precondition failed response
func (o *CreateCustomerWithOktaOptionPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerWithOktaOptionUnprocessableEntityCode is the HTTP code returned for type CreateCustomerWithOktaOptionUnprocessableEntity
const CreateCustomerWithOktaOptionUnprocessableEntityCode int = 422

/*
CreateCustomerWithOktaOptionUnprocessableEntity The payload was unprocessable.

swagger:response createCustomerWithOktaOptionUnprocessableEntity
*/
type CreateCustomerWithOktaOptionUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionUnprocessableEntity creates CreateCustomerWithOktaOptionUnprocessableEntity with default headers values
func NewCreateCustomerWithOktaOptionUnprocessableEntity() *CreateCustomerWithOktaOptionUnprocessableEntity {

	return &CreateCustomerWithOktaOptionUnprocessableEntity{}
}

// WithPayload adds the payload to the create customer with okta option unprocessable entity response
func (o *CreateCustomerWithOktaOptionUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *CreateCustomerWithOktaOptionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option unprocessable entity response
func (o *CreateCustomerWithOktaOptionUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerWithOktaOptionInternalServerErrorCode is the HTTP code returned for type CreateCustomerWithOktaOptionInternalServerError
const CreateCustomerWithOktaOptionInternalServerErrorCode int = 500

/*
CreateCustomerWithOktaOptionInternalServerError A server error occurred

swagger:response createCustomerWithOktaOptionInternalServerError
*/
type CreateCustomerWithOktaOptionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerWithOktaOptionInternalServerError creates CreateCustomerWithOktaOptionInternalServerError with default headers values
func NewCreateCustomerWithOktaOptionInternalServerError() *CreateCustomerWithOktaOptionInternalServerError {

	return &CreateCustomerWithOktaOptionInternalServerError{}
}

// WithPayload adds the payload to the create customer with okta option internal server error response
func (o *CreateCustomerWithOktaOptionInternalServerError) WithPayload(payload *ghcmessages.Error) *CreateCustomerWithOktaOptionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer with okta option internal server error response
func (o *CreateCustomerWithOktaOptionInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerWithOktaOptionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
