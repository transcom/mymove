// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateCustomerOKCode is the HTTP code returned for type UpdateCustomerOK
const UpdateCustomerOKCode int = 200

/*UpdateCustomerOK updated instance of orders

swagger:response updateCustomerOK
*/
type UpdateCustomerOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Customer `json:"body,omitempty"`
}

// NewUpdateCustomerOK creates UpdateCustomerOK with default headers values
func NewUpdateCustomerOK() *UpdateCustomerOK {

	return &UpdateCustomerOK{}
}

// WithPayload adds the payload to the update customer o k response
func (o *UpdateCustomerOK) WithPayload(payload *ghcmessages.Customer) *UpdateCustomerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update customer o k response
func (o *UpdateCustomerOK) SetPayload(payload *ghcmessages.Customer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCustomerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCustomerBadRequestCode is the HTTP code returned for type UpdateCustomerBadRequest
const UpdateCustomerBadRequestCode int = 400

/*UpdateCustomerBadRequest The request payload is invalid

swagger:response updateCustomerBadRequest
*/
type UpdateCustomerBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateCustomerBadRequest creates UpdateCustomerBadRequest with default headers values
func NewUpdateCustomerBadRequest() *UpdateCustomerBadRequest {

	return &UpdateCustomerBadRequest{}
}

// WithPayload adds the payload to the update customer bad request response
func (o *UpdateCustomerBadRequest) WithPayload(payload interface{}) *UpdateCustomerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update customer bad request response
func (o *UpdateCustomerBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCustomerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateCustomerUnauthorizedCode is the HTTP code returned for type UpdateCustomerUnauthorized
const UpdateCustomerUnauthorizedCode int = 401

/*UpdateCustomerUnauthorized The request was unauthenticated

swagger:response updateCustomerUnauthorized
*/
type UpdateCustomerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateCustomerUnauthorized creates UpdateCustomerUnauthorized with default headers values
func NewUpdateCustomerUnauthorized() *UpdateCustomerUnauthorized {

	return &UpdateCustomerUnauthorized{}
}

// WithPayload adds the payload to the update customer unauthorized response
func (o *UpdateCustomerUnauthorized) WithPayload(payload interface{}) *UpdateCustomerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update customer unauthorized response
func (o *UpdateCustomerUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCustomerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateCustomerForbiddenCode is the HTTP code returned for type UpdateCustomerForbidden
const UpdateCustomerForbiddenCode int = 403

/*UpdateCustomerForbidden The request was unauthorized

swagger:response updateCustomerForbidden
*/
type UpdateCustomerForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateCustomerForbidden creates UpdateCustomerForbidden with default headers values
func NewUpdateCustomerForbidden() *UpdateCustomerForbidden {

	return &UpdateCustomerForbidden{}
}

// WithPayload adds the payload to the update customer forbidden response
func (o *UpdateCustomerForbidden) WithPayload(payload interface{}) *UpdateCustomerForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update customer forbidden response
func (o *UpdateCustomerForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCustomerForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateCustomerNotFoundCode is the HTTP code returned for type UpdateCustomerNotFound
const UpdateCustomerNotFoundCode int = 404

/*UpdateCustomerNotFound The requested resource wasn't found

swagger:response updateCustomerNotFound
*/
type UpdateCustomerNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateCustomerNotFound creates UpdateCustomerNotFound with default headers values
func NewUpdateCustomerNotFound() *UpdateCustomerNotFound {

	return &UpdateCustomerNotFound{}
}

// WithPayload adds the payload to the update customer not found response
func (o *UpdateCustomerNotFound) WithPayload(payload interface{}) *UpdateCustomerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update customer not found response
func (o *UpdateCustomerNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCustomerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateCustomerPreconditionFailedCode is the HTTP code returned for type UpdateCustomerPreconditionFailed
const UpdateCustomerPreconditionFailedCode int = 412

/*UpdateCustomerPreconditionFailed Precondition failed

swagger:response updateCustomerPreconditionFailed
*/
type UpdateCustomerPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateCustomerPreconditionFailed creates UpdateCustomerPreconditionFailed with default headers values
func NewUpdateCustomerPreconditionFailed() *UpdateCustomerPreconditionFailed {

	return &UpdateCustomerPreconditionFailed{}
}

// WithPayload adds the payload to the update customer precondition failed response
func (o *UpdateCustomerPreconditionFailed) WithPayload(payload interface{}) *UpdateCustomerPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update customer precondition failed response
func (o *UpdateCustomerPreconditionFailed) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCustomerPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateCustomerUnprocessableEntityCode is the HTTP code returned for type UpdateCustomerUnprocessableEntity
const UpdateCustomerUnprocessableEntityCode int = 422

/*UpdateCustomerUnprocessableEntity Validation error

swagger:response updateCustomerUnprocessableEntity
*/
type UpdateCustomerUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateCustomerUnprocessableEntity creates UpdateCustomerUnprocessableEntity with default headers values
func NewUpdateCustomerUnprocessableEntity() *UpdateCustomerUnprocessableEntity {

	return &UpdateCustomerUnprocessableEntity{}
}

// WithPayload adds the payload to the update customer unprocessable entity response
func (o *UpdateCustomerUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *UpdateCustomerUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update customer unprocessable entity response
func (o *UpdateCustomerUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCustomerUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCustomerInternalServerErrorCode is the HTTP code returned for type UpdateCustomerInternalServerError
const UpdateCustomerInternalServerErrorCode int = 500

/*UpdateCustomerInternalServerError internal server error

swagger:response updateCustomerInternalServerError
*/
type UpdateCustomerInternalServerError struct {
}

// NewUpdateCustomerInternalServerError creates UpdateCustomerInternalServerError with default headers values
func NewUpdateCustomerInternalServerError() *UpdateCustomerInternalServerError {

	return &UpdateCustomerInternalServerError{}
}

// WriteResponse to the client
func (o *UpdateCustomerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
