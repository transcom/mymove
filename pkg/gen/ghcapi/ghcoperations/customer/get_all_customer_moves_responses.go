// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	ghcmessages "github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetAllCustomerMovesOKCode is the HTTP code returned for type GetAllCustomerMovesOK
const GetAllCustomerMovesOKCode int = 200

/*GetAllCustomerMovesOK Successfully retrieved information on all customer

swagger:response getAllCustomerMovesOK
*/
type GetAllCustomerMovesOK struct {

	/*
	  In: Body
	*/
	Payload ghcmessages.CustomerMoveItems `json:"body,omitempty"`
}

// NewGetAllCustomerMovesOK creates GetAllCustomerMovesOK with default headers values
func NewGetAllCustomerMovesOK() *GetAllCustomerMovesOK {

	return &GetAllCustomerMovesOK{}
}

// WithPayload adds the payload to the get all customer moves o k response
func (o *GetAllCustomerMovesOK) WithPayload(payload ghcmessages.CustomerMoveItems) *GetAllCustomerMovesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all customer moves o k response
func (o *GetAllCustomerMovesOK) SetPayload(payload ghcmessages.CustomerMoveItems) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCustomerMovesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = ghcmessages.CustomerMoveItems{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllCustomerMovesBadRequestCode is the HTTP code returned for type GetAllCustomerMovesBadRequest
const GetAllCustomerMovesBadRequestCode int = 400

/*GetAllCustomerMovesBadRequest The request payload is invalid

swagger:response getAllCustomerMovesBadRequest
*/
type GetAllCustomerMovesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.InvalidRequest `json:"body,omitempty"`
}

// NewGetAllCustomerMovesBadRequest creates GetAllCustomerMovesBadRequest with default headers values
func NewGetAllCustomerMovesBadRequest() *GetAllCustomerMovesBadRequest {

	return &GetAllCustomerMovesBadRequest{}
}

// WithPayload adds the payload to the get all customer moves bad request response
func (o *GetAllCustomerMovesBadRequest) WithPayload(payload *ghcmessages.InvalidRequest) *GetAllCustomerMovesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all customer moves bad request response
func (o *GetAllCustomerMovesBadRequest) SetPayload(payload *ghcmessages.InvalidRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCustomerMovesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllCustomerMovesUnauthorizedCode is the HTTP code returned for type GetAllCustomerMovesUnauthorized
const GetAllCustomerMovesUnauthorizedCode int = 401

/*GetAllCustomerMovesUnauthorized The request was denied

swagger:response getAllCustomerMovesUnauthorized
*/
type GetAllCustomerMovesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.PermissionDenied `json:"body,omitempty"`
}

// NewGetAllCustomerMovesUnauthorized creates GetAllCustomerMovesUnauthorized with default headers values
func NewGetAllCustomerMovesUnauthorized() *GetAllCustomerMovesUnauthorized {

	return &GetAllCustomerMovesUnauthorized{}
}

// WithPayload adds the payload to the get all customer moves unauthorized response
func (o *GetAllCustomerMovesUnauthorized) WithPayload(payload *ghcmessages.PermissionDenied) *GetAllCustomerMovesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all customer moves unauthorized response
func (o *GetAllCustomerMovesUnauthorized) SetPayload(payload *ghcmessages.PermissionDenied) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCustomerMovesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllCustomerMovesForbiddenCode is the HTTP code returned for type GetAllCustomerMovesForbidden
const GetAllCustomerMovesForbiddenCode int = 403

/*GetAllCustomerMovesForbidden The request was denied

swagger:response getAllCustomerMovesForbidden
*/
type GetAllCustomerMovesForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.PermissionDenied `json:"body,omitempty"`
}

// NewGetAllCustomerMovesForbidden creates GetAllCustomerMovesForbidden with default headers values
func NewGetAllCustomerMovesForbidden() *GetAllCustomerMovesForbidden {

	return &GetAllCustomerMovesForbidden{}
}

// WithPayload adds the payload to the get all customer moves forbidden response
func (o *GetAllCustomerMovesForbidden) WithPayload(payload *ghcmessages.PermissionDenied) *GetAllCustomerMovesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all customer moves forbidden response
func (o *GetAllCustomerMovesForbidden) SetPayload(payload *ghcmessages.PermissionDenied) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCustomerMovesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllCustomerMovesNotFoundCode is the HTTP code returned for type GetAllCustomerMovesNotFound
const GetAllCustomerMovesNotFoundCode int = 404

/*GetAllCustomerMovesNotFound The requested resource wasn't found

swagger:response getAllCustomerMovesNotFound
*/
type GetAllCustomerMovesNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.NotFound `json:"body,omitempty"`
}

// NewGetAllCustomerMovesNotFound creates GetAllCustomerMovesNotFound with default headers values
func NewGetAllCustomerMovesNotFound() *GetAllCustomerMovesNotFound {

	return &GetAllCustomerMovesNotFound{}
}

// WithPayload adds the payload to the get all customer moves not found response
func (o *GetAllCustomerMovesNotFound) WithPayload(payload *ghcmessages.NotFound) *GetAllCustomerMovesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all customer moves not found response
func (o *GetAllCustomerMovesNotFound) SetPayload(payload *ghcmessages.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCustomerMovesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllCustomerMovesInternalServerErrorCode is the HTTP code returned for type GetAllCustomerMovesInternalServerError
const GetAllCustomerMovesInternalServerErrorCode int = 500

/*GetAllCustomerMovesInternalServerError A server error occurred

swagger:response getAllCustomerMovesInternalServerError
*/
type GetAllCustomerMovesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ServerError `json:"body,omitempty"`
}

// NewGetAllCustomerMovesInternalServerError creates GetAllCustomerMovesInternalServerError with default headers values
func NewGetAllCustomerMovesInternalServerError() *GetAllCustomerMovesInternalServerError {

	return &GetAllCustomerMovesInternalServerError{}
}

// WithPayload adds the payload to the get all customer moves internal server error response
func (o *GetAllCustomerMovesInternalServerError) WithPayload(payload *ghcmessages.ServerError) *GetAllCustomerMovesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all customer moves internal server error response
func (o *GetAllCustomerMovesInternalServerError) SetPayload(payload *ghcmessages.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCustomerMovesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
