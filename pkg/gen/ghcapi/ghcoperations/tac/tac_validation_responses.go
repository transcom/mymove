// Code generated by go-swagger; DO NOT EDIT.

package tac

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// TacValidationOKCode is the HTTP code returned for type TacValidationOK
const TacValidationOKCode int = 200

/*
TacValidationOK Successfully retrieved validation status

swagger:response tacValidationOK
*/
type TacValidationOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.TacValid `json:"body,omitempty"`
}

// NewTacValidationOK creates TacValidationOK with default headers values
func NewTacValidationOK() *TacValidationOK {

	return &TacValidationOK{}
}

// WithPayload adds the payload to the tac validation o k response
func (o *TacValidationOK) WithPayload(payload *ghcmessages.TacValid) *TacValidationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tac validation o k response
func (o *TacValidationOK) SetPayload(payload *ghcmessages.TacValid) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TacValidationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TacValidationBadRequestCode is the HTTP code returned for type TacValidationBadRequest
const TacValidationBadRequestCode int = 400

/*
TacValidationBadRequest The request payload is invalid

swagger:response tacValidationBadRequest
*/
type TacValidationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewTacValidationBadRequest creates TacValidationBadRequest with default headers values
func NewTacValidationBadRequest() *TacValidationBadRequest {

	return &TacValidationBadRequest{}
}

// WithPayload adds the payload to the tac validation bad request response
func (o *TacValidationBadRequest) WithPayload(payload *ghcmessages.Error) *TacValidationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tac validation bad request response
func (o *TacValidationBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TacValidationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TacValidationUnauthorizedCode is the HTTP code returned for type TacValidationUnauthorized
const TacValidationUnauthorizedCode int = 401

/*
TacValidationUnauthorized The request was denied

swagger:response tacValidationUnauthorized
*/
type TacValidationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewTacValidationUnauthorized creates TacValidationUnauthorized with default headers values
func NewTacValidationUnauthorized() *TacValidationUnauthorized {

	return &TacValidationUnauthorized{}
}

// WithPayload adds the payload to the tac validation unauthorized response
func (o *TacValidationUnauthorized) WithPayload(payload *ghcmessages.Error) *TacValidationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tac validation unauthorized response
func (o *TacValidationUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TacValidationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TacValidationForbiddenCode is the HTTP code returned for type TacValidationForbidden
const TacValidationForbiddenCode int = 403

/*
TacValidationForbidden The request was denied

swagger:response tacValidationForbidden
*/
type TacValidationForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewTacValidationForbidden creates TacValidationForbidden with default headers values
func NewTacValidationForbidden() *TacValidationForbidden {

	return &TacValidationForbidden{}
}

// WithPayload adds the payload to the tac validation forbidden response
func (o *TacValidationForbidden) WithPayload(payload *ghcmessages.Error) *TacValidationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tac validation forbidden response
func (o *TacValidationForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TacValidationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TacValidationNotFoundCode is the HTTP code returned for type TacValidationNotFound
const TacValidationNotFoundCode int = 404

/*
TacValidationNotFound The requested resource wasn't found

swagger:response tacValidationNotFound
*/
type TacValidationNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewTacValidationNotFound creates TacValidationNotFound with default headers values
func NewTacValidationNotFound() *TacValidationNotFound {

	return &TacValidationNotFound{}
}

// WithPayload adds the payload to the tac validation not found response
func (o *TacValidationNotFound) WithPayload(payload *ghcmessages.Error) *TacValidationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tac validation not found response
func (o *TacValidationNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TacValidationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TacValidationInternalServerErrorCode is the HTTP code returned for type TacValidationInternalServerError
const TacValidationInternalServerErrorCode int = 500

/*
TacValidationInternalServerError A server error occurred

swagger:response tacValidationInternalServerError
*/
type TacValidationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewTacValidationInternalServerError creates TacValidationInternalServerError with default headers values
func NewTacValidationInternalServerError() *TacValidationInternalServerError {

	return &TacValidationInternalServerError{}
}

// WithPayload adds the payload to the tac validation internal server error response
func (o *TacValidationInternalServerError) WithPayload(payload *ghcmessages.Error) *TacValidationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tac validation internal server error response
func (o *TacValidationInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TacValidationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
