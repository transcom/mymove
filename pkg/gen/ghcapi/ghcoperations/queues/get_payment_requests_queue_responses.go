// Code generated by go-swagger; DO NOT EDIT.

package queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetPaymentRequestsQueueOKCode is the HTTP code returned for type GetPaymentRequestsQueueOK
const GetPaymentRequestsQueueOKCode int = 200

/*
GetPaymentRequestsQueueOK Successfully returned all moves matching the criteria

swagger:response getPaymentRequestsQueueOK
*/
type GetPaymentRequestsQueueOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.QueuePaymentRequestsResult `json:"body,omitempty"`
}

// NewGetPaymentRequestsQueueOK creates GetPaymentRequestsQueueOK with default headers values
func NewGetPaymentRequestsQueueOK() *GetPaymentRequestsQueueOK {

	return &GetPaymentRequestsQueueOK{}
}

// WithPayload adds the payload to the get payment requests queue o k response
func (o *GetPaymentRequestsQueueOK) WithPayload(payload *ghcmessages.QueuePaymentRequestsResult) *GetPaymentRequestsQueueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get payment requests queue o k response
func (o *GetPaymentRequestsQueueOK) SetPayload(payload *ghcmessages.QueuePaymentRequestsResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPaymentRequestsQueueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPaymentRequestsQueueForbiddenCode is the HTTP code returned for type GetPaymentRequestsQueueForbidden
const GetPaymentRequestsQueueForbiddenCode int = 403

/*
GetPaymentRequestsQueueForbidden The request was denied

swagger:response getPaymentRequestsQueueForbidden
*/
type GetPaymentRequestsQueueForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPaymentRequestsQueueForbidden creates GetPaymentRequestsQueueForbidden with default headers values
func NewGetPaymentRequestsQueueForbidden() *GetPaymentRequestsQueueForbidden {

	return &GetPaymentRequestsQueueForbidden{}
}

// WithPayload adds the payload to the get payment requests queue forbidden response
func (o *GetPaymentRequestsQueueForbidden) WithPayload(payload *ghcmessages.Error) *GetPaymentRequestsQueueForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get payment requests queue forbidden response
func (o *GetPaymentRequestsQueueForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPaymentRequestsQueueForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPaymentRequestsQueueInternalServerErrorCode is the HTTP code returned for type GetPaymentRequestsQueueInternalServerError
const GetPaymentRequestsQueueInternalServerErrorCode int = 500

/*
GetPaymentRequestsQueueInternalServerError A server error occurred

swagger:response getPaymentRequestsQueueInternalServerError
*/
type GetPaymentRequestsQueueInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPaymentRequestsQueueInternalServerError creates GetPaymentRequestsQueueInternalServerError with default headers values
func NewGetPaymentRequestsQueueInternalServerError() *GetPaymentRequestsQueueInternalServerError {

	return &GetPaymentRequestsQueueInternalServerError{}
}

// WithPayload adds the payload to the get payment requests queue internal server error response
func (o *GetPaymentRequestsQueueInternalServerError) WithPayload(payload *ghcmessages.Error) *GetPaymentRequestsQueueInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get payment requests queue internal server error response
func (o *GetPaymentRequestsQueueInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPaymentRequestsQueueInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
