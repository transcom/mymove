// Code generated by go-swagger; DO NOT EDIT.

package queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetDestinationRequestsQueueOKCode is the HTTP code returned for type GetDestinationRequestsQueueOK
const GetDestinationRequestsQueueOKCode int = 200

/*
GetDestinationRequestsQueueOK Successfully returned all moves matching the criteria

swagger:response getDestinationRequestsQueueOK
*/
type GetDestinationRequestsQueueOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.QueueMovesResult `json:"body,omitempty"`
}

// NewGetDestinationRequestsQueueOK creates GetDestinationRequestsQueueOK with default headers values
func NewGetDestinationRequestsQueueOK() *GetDestinationRequestsQueueOK {

	return &GetDestinationRequestsQueueOK{}
}

// WithPayload adds the payload to the get destination requests queue o k response
func (o *GetDestinationRequestsQueueOK) WithPayload(payload *ghcmessages.QueueMovesResult) *GetDestinationRequestsQueueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get destination requests queue o k response
func (o *GetDestinationRequestsQueueOK) SetPayload(payload *ghcmessages.QueueMovesResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDestinationRequestsQueueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDestinationRequestsQueueForbiddenCode is the HTTP code returned for type GetDestinationRequestsQueueForbidden
const GetDestinationRequestsQueueForbiddenCode int = 403

/*
GetDestinationRequestsQueueForbidden The request was denied

swagger:response getDestinationRequestsQueueForbidden
*/
type GetDestinationRequestsQueueForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetDestinationRequestsQueueForbidden creates GetDestinationRequestsQueueForbidden with default headers values
func NewGetDestinationRequestsQueueForbidden() *GetDestinationRequestsQueueForbidden {

	return &GetDestinationRequestsQueueForbidden{}
}

// WithPayload adds the payload to the get destination requests queue forbidden response
func (o *GetDestinationRequestsQueueForbidden) WithPayload(payload *ghcmessages.Error) *GetDestinationRequestsQueueForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get destination requests queue forbidden response
func (o *GetDestinationRequestsQueueForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDestinationRequestsQueueForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDestinationRequestsQueueInternalServerErrorCode is the HTTP code returned for type GetDestinationRequestsQueueInternalServerError
const GetDestinationRequestsQueueInternalServerErrorCode int = 500

/*
GetDestinationRequestsQueueInternalServerError A server error occurred

swagger:response getDestinationRequestsQueueInternalServerError
*/
type GetDestinationRequestsQueueInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetDestinationRequestsQueueInternalServerError creates GetDestinationRequestsQueueInternalServerError with default headers values
func NewGetDestinationRequestsQueueInternalServerError() *GetDestinationRequestsQueueInternalServerError {

	return &GetDestinationRequestsQueueInternalServerError{}
}

// WithPayload adds the payload to the get destination requests queue internal server error response
func (o *GetDestinationRequestsQueueInternalServerError) WithPayload(payload *ghcmessages.Error) *GetDestinationRequestsQueueInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get destination requests queue internal server error response
func (o *GetDestinationRequestsQueueInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDestinationRequestsQueueInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
