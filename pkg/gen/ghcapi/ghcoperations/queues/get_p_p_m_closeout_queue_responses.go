// Code generated by go-swagger; DO NOT EDIT.

package queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetPPMCloseoutQueueOKCode is the HTTP code returned for type GetPPMCloseoutQueueOK
const GetPPMCloseoutQueueOKCode int = 200

/*
GetPPMCloseoutQueueOK Successfully returned all moves matching the criteria

swagger:response getPPMCloseoutQueueOK
*/
type GetPPMCloseoutQueueOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.QueueMovesResult `json:"body,omitempty"`
}

// NewGetPPMCloseoutQueueOK creates GetPPMCloseoutQueueOK with default headers values
func NewGetPPMCloseoutQueueOK() *GetPPMCloseoutQueueOK {

	return &GetPPMCloseoutQueueOK{}
}

// WithPayload adds the payload to the get p p m closeout queue o k response
func (o *GetPPMCloseoutQueueOK) WithPayload(payload *ghcmessages.QueueMovesResult) *GetPPMCloseoutQueueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m closeout queue o k response
func (o *GetPPMCloseoutQueueOK) SetPayload(payload *ghcmessages.QueueMovesResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMCloseoutQueueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPPMCloseoutQueueForbiddenCode is the HTTP code returned for type GetPPMCloseoutQueueForbidden
const GetPPMCloseoutQueueForbiddenCode int = 403

/*
GetPPMCloseoutQueueForbidden The request was denied

swagger:response getPPMCloseoutQueueForbidden
*/
type GetPPMCloseoutQueueForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPPMCloseoutQueueForbidden creates GetPPMCloseoutQueueForbidden with default headers values
func NewGetPPMCloseoutQueueForbidden() *GetPPMCloseoutQueueForbidden {

	return &GetPPMCloseoutQueueForbidden{}
}

// WithPayload adds the payload to the get p p m closeout queue forbidden response
func (o *GetPPMCloseoutQueueForbidden) WithPayload(payload *ghcmessages.Error) *GetPPMCloseoutQueueForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m closeout queue forbidden response
func (o *GetPPMCloseoutQueueForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMCloseoutQueueForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPPMCloseoutQueueInternalServerErrorCode is the HTTP code returned for type GetPPMCloseoutQueueInternalServerError
const GetPPMCloseoutQueueInternalServerErrorCode int = 500

/*
GetPPMCloseoutQueueInternalServerError A server error occurred

swagger:response getPPMCloseoutQueueInternalServerError
*/
type GetPPMCloseoutQueueInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPPMCloseoutQueueInternalServerError creates GetPPMCloseoutQueueInternalServerError with default headers values
func NewGetPPMCloseoutQueueInternalServerError() *GetPPMCloseoutQueueInternalServerError {

	return &GetPPMCloseoutQueueInternalServerError{}
}

// WithPayload adds the payload to the get p p m closeout queue internal server error response
func (o *GetPPMCloseoutQueueInternalServerError) WithPayload(payload *ghcmessages.Error) *GetPPMCloseoutQueueInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m closeout queue internal server error response
func (o *GetPPMCloseoutQueueInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMCloseoutQueueInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
