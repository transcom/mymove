// Code generated by go-swagger; DO NOT EDIT.

package queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetServicesCounselingQueueOKCode is the HTTP code returned for type GetServicesCounselingQueueOK
const GetServicesCounselingQueueOKCode int = 200

/*GetServicesCounselingQueueOK Successfully returned all moves matching the criteria

swagger:response getServicesCounselingQueueOK
*/
type GetServicesCounselingQueueOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.QueueMovesResult `json:"body,omitempty"`
}

// NewGetServicesCounselingQueueOK creates GetServicesCounselingQueueOK with default headers values
func NewGetServicesCounselingQueueOK() *GetServicesCounselingQueueOK {

	return &GetServicesCounselingQueueOK{}
}

// WithPayload adds the payload to the get services counseling queue o k response
func (o *GetServicesCounselingQueueOK) WithPayload(payload *ghcmessages.QueueMovesResult) *GetServicesCounselingQueueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get services counseling queue o k response
func (o *GetServicesCounselingQueueOK) SetPayload(payload *ghcmessages.QueueMovesResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServicesCounselingQueueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServicesCounselingQueueForbiddenCode is the HTTP code returned for type GetServicesCounselingQueueForbidden
const GetServicesCounselingQueueForbiddenCode int = 403

/*GetServicesCounselingQueueForbidden The request was denied

swagger:response getServicesCounselingQueueForbidden
*/
type GetServicesCounselingQueueForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetServicesCounselingQueueForbidden creates GetServicesCounselingQueueForbidden with default headers values
func NewGetServicesCounselingQueueForbidden() *GetServicesCounselingQueueForbidden {

	return &GetServicesCounselingQueueForbidden{}
}

// WithPayload adds the payload to the get services counseling queue forbidden response
func (o *GetServicesCounselingQueueForbidden) WithPayload(payload interface{}) *GetServicesCounselingQueueForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get services counseling queue forbidden response
func (o *GetServicesCounselingQueueForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServicesCounselingQueueForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetServicesCounselingQueueInternalServerErrorCode is the HTTP code returned for type GetServicesCounselingQueueInternalServerError
const GetServicesCounselingQueueInternalServerErrorCode int = 500

/*GetServicesCounselingQueueInternalServerError A server error occurred

swagger:response getServicesCounselingQueueInternalServerError
*/
type GetServicesCounselingQueueInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetServicesCounselingQueueInternalServerError creates GetServicesCounselingQueueInternalServerError with default headers values
func NewGetServicesCounselingQueueInternalServerError() *GetServicesCounselingQueueInternalServerError {

	return &GetServicesCounselingQueueInternalServerError{}
}

// WithPayload adds the payload to the get services counseling queue internal server error response
func (o *GetServicesCounselingQueueInternalServerError) WithPayload(payload interface{}) *GetServicesCounselingQueueInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get services counseling queue internal server error response
func (o *GetServicesCounselingQueueInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServicesCounselingQueueInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
