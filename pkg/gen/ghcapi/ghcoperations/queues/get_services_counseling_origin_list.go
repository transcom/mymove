// Code generated by go-swagger; DO NOT EDIT.

package queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetServicesCounselingOriginListHandlerFunc turns a function with the right signature into a get services counseling origin list handler
type GetServicesCounselingOriginListHandlerFunc func(GetServicesCounselingOriginListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetServicesCounselingOriginListHandlerFunc) Handle(params GetServicesCounselingOriginListParams) middleware.Responder {
	return fn(params)
}

// GetServicesCounselingOriginListHandler interface for that can handle valid get services counseling origin list params
type GetServicesCounselingOriginListHandler interface {
	Handle(GetServicesCounselingOriginListParams) middleware.Responder
}

// NewGetServicesCounselingOriginList creates a new http.Handler for the get services counseling origin list operation
func NewGetServicesCounselingOriginList(ctx *middleware.Context, handler GetServicesCounselingOriginListHandler) *GetServicesCounselingOriginList {
	return &GetServicesCounselingOriginList{Context: ctx, Handler: handler}
}

/*
	GetServicesCounselingOriginList swagger:route GET /queues/counseling/origin-list queues getServicesCounselingOriginList

# Gets queued list of all moves origin locations in the counselors queue

An office services counselor user will be assigned a transportation office that will determine which moves are displayed in their queue based on the origin duty location. This pulls the availalble origin duty locations.
*/
type GetServicesCounselingOriginList struct {
	Context *middleware.Context
	Handler GetServicesCounselingOriginListHandler
}

func (o *GetServicesCounselingOriginList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetServicesCounselingOriginListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
