// Code generated by go-swagger; DO NOT EDIT.

package pws_violations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetPWSViolationsOKCode is the HTTP code returned for type GetPWSViolationsOK
const GetPWSViolationsOKCode int = 200

/*
GetPWSViolationsOK Successfully retrieved the PWS violations

swagger:response getPWSViolationsOK
*/
type GetPWSViolationsOK struct {

	/*
	  In: Body
	*/
	Payload ghcmessages.PWSViolations `json:"body,omitempty"`
}

// NewGetPWSViolationsOK creates GetPWSViolationsOK with default headers values
func NewGetPWSViolationsOK() *GetPWSViolationsOK {

	return &GetPWSViolationsOK{}
}

// WithPayload adds the payload to the get p w s violations o k response
func (o *GetPWSViolationsOK) WithPayload(payload ghcmessages.PWSViolations) *GetPWSViolationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p w s violations o k response
func (o *GetPWSViolationsOK) SetPayload(payload ghcmessages.PWSViolations) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPWSViolationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = ghcmessages.PWSViolations{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPWSViolationsBadRequestCode is the HTTP code returned for type GetPWSViolationsBadRequest
const GetPWSViolationsBadRequestCode int = 400

/*
GetPWSViolationsBadRequest The request payload is invalid

swagger:response getPWSViolationsBadRequest
*/
type GetPWSViolationsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPWSViolationsBadRequest creates GetPWSViolationsBadRequest with default headers values
func NewGetPWSViolationsBadRequest() *GetPWSViolationsBadRequest {

	return &GetPWSViolationsBadRequest{}
}

// WithPayload adds the payload to the get p w s violations bad request response
func (o *GetPWSViolationsBadRequest) WithPayload(payload *ghcmessages.Error) *GetPWSViolationsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p w s violations bad request response
func (o *GetPWSViolationsBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPWSViolationsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPWSViolationsForbiddenCode is the HTTP code returned for type GetPWSViolationsForbidden
const GetPWSViolationsForbiddenCode int = 403

/*
GetPWSViolationsForbidden The request was denied

swagger:response getPWSViolationsForbidden
*/
type GetPWSViolationsForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPWSViolationsForbidden creates GetPWSViolationsForbidden with default headers values
func NewGetPWSViolationsForbidden() *GetPWSViolationsForbidden {

	return &GetPWSViolationsForbidden{}
}

// WithPayload adds the payload to the get p w s violations forbidden response
func (o *GetPWSViolationsForbidden) WithPayload(payload *ghcmessages.Error) *GetPWSViolationsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p w s violations forbidden response
func (o *GetPWSViolationsForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPWSViolationsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPWSViolationsNotFoundCode is the HTTP code returned for type GetPWSViolationsNotFound
const GetPWSViolationsNotFoundCode int = 404

/*
GetPWSViolationsNotFound The requested resource wasn't found

swagger:response getPWSViolationsNotFound
*/
type GetPWSViolationsNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPWSViolationsNotFound creates GetPWSViolationsNotFound with default headers values
func NewGetPWSViolationsNotFound() *GetPWSViolationsNotFound {

	return &GetPWSViolationsNotFound{}
}

// WithPayload adds the payload to the get p w s violations not found response
func (o *GetPWSViolationsNotFound) WithPayload(payload *ghcmessages.Error) *GetPWSViolationsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p w s violations not found response
func (o *GetPWSViolationsNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPWSViolationsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPWSViolationsInternalServerErrorCode is the HTTP code returned for type GetPWSViolationsInternalServerError
const GetPWSViolationsInternalServerErrorCode int = 500

/*
GetPWSViolationsInternalServerError A server error occurred

swagger:response getPWSViolationsInternalServerError
*/
type GetPWSViolationsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPWSViolationsInternalServerError creates GetPWSViolationsInternalServerError with default headers values
func NewGetPWSViolationsInternalServerError() *GetPWSViolationsInternalServerError {

	return &GetPWSViolationsInternalServerError{}
}

// WithPayload adds the payload to the get p w s violations internal server error response
func (o *GetPWSViolationsInternalServerError) WithPayload(payload *ghcmessages.Error) *GetPWSViolationsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p w s violations internal server error response
func (o *GetPWSViolationsInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPWSViolationsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
