// Code generated by go-swagger; DO NOT EDIT.

package evaluation_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateEvaluationReportHandlerFunc turns a function with the right signature into a create evaluation report handler
type CreateEvaluationReportHandlerFunc func(CreateEvaluationReportParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateEvaluationReportHandlerFunc) Handle(params CreateEvaluationReportParams) middleware.Responder {
	return fn(params)
}

// CreateEvaluationReportHandler interface for that can handle valid create evaluation report params
type CreateEvaluationReportHandler interface {
	Handle(CreateEvaluationReportParams) middleware.Responder
}

// NewCreateEvaluationReport creates a new http.Handler for the create evaluation report operation
func NewCreateEvaluationReport(ctx *middleware.Context, handler CreateEvaluationReportHandler) *CreateEvaluationReport {
	return &CreateEvaluationReport{Context: ctx, Handler: handler}
}

/*
	CreateEvaluationReport swagger:route POST /moves/{locator}/evaluation-reports evaluationReports createEvaluationReport

# Creates an evaluation report

Creates an evaluation report
*/
type CreateEvaluationReport struct {
	Context *middleware.Context
	Handler CreateEvaluationReportHandler
}

func (o *CreateEvaluationReport) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateEvaluationReportParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
