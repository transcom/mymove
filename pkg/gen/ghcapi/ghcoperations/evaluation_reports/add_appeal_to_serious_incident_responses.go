// Code generated by go-swagger; DO NOT EDIT.

package evaluation_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// AddAppealToSeriousIncidentNoContentCode is the HTTP code returned for type AddAppealToSeriousIncidentNoContent
const AddAppealToSeriousIncidentNoContentCode int = 204

/*
AddAppealToSeriousIncidentNoContent Successfully added an appeal to a serious incident

swagger:response addAppealToSeriousIncidentNoContent
*/
type AddAppealToSeriousIncidentNoContent struct {
}

// NewAddAppealToSeriousIncidentNoContent creates AddAppealToSeriousIncidentNoContent with default headers values
func NewAddAppealToSeriousIncidentNoContent() *AddAppealToSeriousIncidentNoContent {

	return &AddAppealToSeriousIncidentNoContent{}
}

// WriteResponse to the client
func (o *AddAppealToSeriousIncidentNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// AddAppealToSeriousIncidentForbiddenCode is the HTTP code returned for type AddAppealToSeriousIncidentForbidden
const AddAppealToSeriousIncidentForbiddenCode int = 403

/*
AddAppealToSeriousIncidentForbidden The request was denied

swagger:response addAppealToSeriousIncidentForbidden
*/
type AddAppealToSeriousIncidentForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewAddAppealToSeriousIncidentForbidden creates AddAppealToSeriousIncidentForbidden with default headers values
func NewAddAppealToSeriousIncidentForbidden() *AddAppealToSeriousIncidentForbidden {

	return &AddAppealToSeriousIncidentForbidden{}
}

// WithPayload adds the payload to the add appeal to serious incident forbidden response
func (o *AddAppealToSeriousIncidentForbidden) WithPayload(payload *ghcmessages.Error) *AddAppealToSeriousIncidentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add appeal to serious incident forbidden response
func (o *AddAppealToSeriousIncidentForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAppealToSeriousIncidentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAppealToSeriousIncidentNotFoundCode is the HTTP code returned for type AddAppealToSeriousIncidentNotFound
const AddAppealToSeriousIncidentNotFoundCode int = 404

/*
AddAppealToSeriousIncidentNotFound The requested resource wasn't found

swagger:response addAppealToSeriousIncidentNotFound
*/
type AddAppealToSeriousIncidentNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewAddAppealToSeriousIncidentNotFound creates AddAppealToSeriousIncidentNotFound with default headers values
func NewAddAppealToSeriousIncidentNotFound() *AddAppealToSeriousIncidentNotFound {

	return &AddAppealToSeriousIncidentNotFound{}
}

// WithPayload adds the payload to the add appeal to serious incident not found response
func (o *AddAppealToSeriousIncidentNotFound) WithPayload(payload *ghcmessages.Error) *AddAppealToSeriousIncidentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add appeal to serious incident not found response
func (o *AddAppealToSeriousIncidentNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAppealToSeriousIncidentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAppealToSeriousIncidentPreconditionFailedCode is the HTTP code returned for type AddAppealToSeriousIncidentPreconditionFailed
const AddAppealToSeriousIncidentPreconditionFailedCode int = 412

/*
AddAppealToSeriousIncidentPreconditionFailed Precondition failed

swagger:response addAppealToSeriousIncidentPreconditionFailed
*/
type AddAppealToSeriousIncidentPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewAddAppealToSeriousIncidentPreconditionFailed creates AddAppealToSeriousIncidentPreconditionFailed with default headers values
func NewAddAppealToSeriousIncidentPreconditionFailed() *AddAppealToSeriousIncidentPreconditionFailed {

	return &AddAppealToSeriousIncidentPreconditionFailed{}
}

// WithPayload adds the payload to the add appeal to serious incident precondition failed response
func (o *AddAppealToSeriousIncidentPreconditionFailed) WithPayload(payload *ghcmessages.Error) *AddAppealToSeriousIncidentPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add appeal to serious incident precondition failed response
func (o *AddAppealToSeriousIncidentPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAppealToSeriousIncidentPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAppealToSeriousIncidentUnprocessableEntityCode is the HTTP code returned for type AddAppealToSeriousIncidentUnprocessableEntity
const AddAppealToSeriousIncidentUnprocessableEntityCode int = 422

/*
AddAppealToSeriousIncidentUnprocessableEntity The payload was unprocessable.

swagger:response addAppealToSeriousIncidentUnprocessableEntity
*/
type AddAppealToSeriousIncidentUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewAddAppealToSeriousIncidentUnprocessableEntity creates AddAppealToSeriousIncidentUnprocessableEntity with default headers values
func NewAddAppealToSeriousIncidentUnprocessableEntity() *AddAppealToSeriousIncidentUnprocessableEntity {

	return &AddAppealToSeriousIncidentUnprocessableEntity{}
}

// WithPayload adds the payload to the add appeal to serious incident unprocessable entity response
func (o *AddAppealToSeriousIncidentUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *AddAppealToSeriousIncidentUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add appeal to serious incident unprocessable entity response
func (o *AddAppealToSeriousIncidentUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAppealToSeriousIncidentUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAppealToSeriousIncidentInternalServerErrorCode is the HTTP code returned for type AddAppealToSeriousIncidentInternalServerError
const AddAppealToSeriousIncidentInternalServerErrorCode int = 500

/*
AddAppealToSeriousIncidentInternalServerError A server error occurred

swagger:response addAppealToSeriousIncidentInternalServerError
*/
type AddAppealToSeriousIncidentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewAddAppealToSeriousIncidentInternalServerError creates AddAppealToSeriousIncidentInternalServerError with default headers values
func NewAddAppealToSeriousIncidentInternalServerError() *AddAppealToSeriousIncidentInternalServerError {

	return &AddAppealToSeriousIncidentInternalServerError{}
}

// WithPayload adds the payload to the add appeal to serious incident internal server error response
func (o *AddAppealToSeriousIncidentInternalServerError) WithPayload(payload *ghcmessages.Error) *AddAppealToSeriousIncidentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add appeal to serious incident internal server error response
func (o *AddAppealToSeriousIncidentInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAppealToSeriousIncidentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
