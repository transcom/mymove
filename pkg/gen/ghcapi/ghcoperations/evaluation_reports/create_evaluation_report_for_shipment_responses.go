// Code generated by go-swagger; DO NOT EDIT.

package evaluation_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// CreateEvaluationReportForShipmentOKCode is the HTTP code returned for type CreateEvaluationReportForShipmentOK
const CreateEvaluationReportForShipmentOKCode int = 200

/*CreateEvaluationReportForShipmentOK Successfully created shipment evaluation report

swagger:response createEvaluationReportForShipmentOK
*/
type CreateEvaluationReportForShipmentOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.EvaluationReport `json:"body,omitempty"`
}

// NewCreateEvaluationReportForShipmentOK creates CreateEvaluationReportForShipmentOK with default headers values
func NewCreateEvaluationReportForShipmentOK() *CreateEvaluationReportForShipmentOK {

	return &CreateEvaluationReportForShipmentOK{}
}

// WithPayload adds the payload to the create evaluation report for shipment o k response
func (o *CreateEvaluationReportForShipmentOK) WithPayload(payload *ghcmessages.EvaluationReport) *CreateEvaluationReportForShipmentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create evaluation report for shipment o k response
func (o *CreateEvaluationReportForShipmentOK) SetPayload(payload *ghcmessages.EvaluationReport) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateEvaluationReportForShipmentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateEvaluationReportForShipmentBadRequestCode is the HTTP code returned for type CreateEvaluationReportForShipmentBadRequest
const CreateEvaluationReportForShipmentBadRequestCode int = 400

/*CreateEvaluationReportForShipmentBadRequest The request payload is invalid

swagger:response createEvaluationReportForShipmentBadRequest
*/
type CreateEvaluationReportForShipmentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateEvaluationReportForShipmentBadRequest creates CreateEvaluationReportForShipmentBadRequest with default headers values
func NewCreateEvaluationReportForShipmentBadRequest() *CreateEvaluationReportForShipmentBadRequest {

	return &CreateEvaluationReportForShipmentBadRequest{}
}

// WithPayload adds the payload to the create evaluation report for shipment bad request response
func (o *CreateEvaluationReportForShipmentBadRequest) WithPayload(payload *ghcmessages.Error) *CreateEvaluationReportForShipmentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create evaluation report for shipment bad request response
func (o *CreateEvaluationReportForShipmentBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateEvaluationReportForShipmentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateEvaluationReportForShipmentNotFoundCode is the HTTP code returned for type CreateEvaluationReportForShipmentNotFound
const CreateEvaluationReportForShipmentNotFoundCode int = 404

/*CreateEvaluationReportForShipmentNotFound The requested resource wasn't found

swagger:response createEvaluationReportForShipmentNotFound
*/
type CreateEvaluationReportForShipmentNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateEvaluationReportForShipmentNotFound creates CreateEvaluationReportForShipmentNotFound with default headers values
func NewCreateEvaluationReportForShipmentNotFound() *CreateEvaluationReportForShipmentNotFound {

	return &CreateEvaluationReportForShipmentNotFound{}
}

// WithPayload adds the payload to the create evaluation report for shipment not found response
func (o *CreateEvaluationReportForShipmentNotFound) WithPayload(payload *ghcmessages.Error) *CreateEvaluationReportForShipmentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create evaluation report for shipment not found response
func (o *CreateEvaluationReportForShipmentNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateEvaluationReportForShipmentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateEvaluationReportForShipmentUnprocessableEntityCode is the HTTP code returned for type CreateEvaluationReportForShipmentUnprocessableEntity
const CreateEvaluationReportForShipmentUnprocessableEntityCode int = 422

/*CreateEvaluationReportForShipmentUnprocessableEntity The payload was unprocessable.

swagger:response createEvaluationReportForShipmentUnprocessableEntity
*/
type CreateEvaluationReportForShipmentUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewCreateEvaluationReportForShipmentUnprocessableEntity creates CreateEvaluationReportForShipmentUnprocessableEntity with default headers values
func NewCreateEvaluationReportForShipmentUnprocessableEntity() *CreateEvaluationReportForShipmentUnprocessableEntity {

	return &CreateEvaluationReportForShipmentUnprocessableEntity{}
}

// WithPayload adds the payload to the create evaluation report for shipment unprocessable entity response
func (o *CreateEvaluationReportForShipmentUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *CreateEvaluationReportForShipmentUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create evaluation report for shipment unprocessable entity response
func (o *CreateEvaluationReportForShipmentUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateEvaluationReportForShipmentUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateEvaluationReportForShipmentInternalServerErrorCode is the HTTP code returned for type CreateEvaluationReportForShipmentInternalServerError
const CreateEvaluationReportForShipmentInternalServerErrorCode int = 500

/*CreateEvaluationReportForShipmentInternalServerError A server error occurred

swagger:response createEvaluationReportForShipmentInternalServerError
*/
type CreateEvaluationReportForShipmentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateEvaluationReportForShipmentInternalServerError creates CreateEvaluationReportForShipmentInternalServerError with default headers values
func NewCreateEvaluationReportForShipmentInternalServerError() *CreateEvaluationReportForShipmentInternalServerError {

	return &CreateEvaluationReportForShipmentInternalServerError{}
}

// WithPayload adds the payload to the create evaluation report for shipment internal server error response
func (o *CreateEvaluationReportForShipmentInternalServerError) WithPayload(payload *ghcmessages.Error) *CreateEvaluationReportForShipmentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create evaluation report for shipment internal server error response
func (o *CreateEvaluationReportForShipmentInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateEvaluationReportForShipmentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
