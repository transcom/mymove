// Code generated by go-swagger; DO NOT EDIT.

package evaluation_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// SubmitEvaluationReportNoContentCode is the HTTP code returned for type SubmitEvaluationReportNoContent
const SubmitEvaluationReportNoContentCode int = 204

/*
SubmitEvaluationReportNoContent Successfully submitted an evaluation report with the provided ID

swagger:response submitEvaluationReportNoContent
*/
type SubmitEvaluationReportNoContent struct {
}

// NewSubmitEvaluationReportNoContent creates SubmitEvaluationReportNoContent with default headers values
func NewSubmitEvaluationReportNoContent() *SubmitEvaluationReportNoContent {

	return &SubmitEvaluationReportNoContent{}
}

// WriteResponse to the client
func (o *SubmitEvaluationReportNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// SubmitEvaluationReportForbiddenCode is the HTTP code returned for type SubmitEvaluationReportForbidden
const SubmitEvaluationReportForbiddenCode int = 403

/*
SubmitEvaluationReportForbidden The request was denied

swagger:response submitEvaluationReportForbidden
*/
type SubmitEvaluationReportForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewSubmitEvaluationReportForbidden creates SubmitEvaluationReportForbidden with default headers values
func NewSubmitEvaluationReportForbidden() *SubmitEvaluationReportForbidden {

	return &SubmitEvaluationReportForbidden{}
}

// WithPayload adds the payload to the submit evaluation report forbidden response
func (o *SubmitEvaluationReportForbidden) WithPayload(payload *ghcmessages.Error) *SubmitEvaluationReportForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the submit evaluation report forbidden response
func (o *SubmitEvaluationReportForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SubmitEvaluationReportForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SubmitEvaluationReportNotFoundCode is the HTTP code returned for type SubmitEvaluationReportNotFound
const SubmitEvaluationReportNotFoundCode int = 404

/*
SubmitEvaluationReportNotFound The requested resource wasn't found

swagger:response submitEvaluationReportNotFound
*/
type SubmitEvaluationReportNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewSubmitEvaluationReportNotFound creates SubmitEvaluationReportNotFound with default headers values
func NewSubmitEvaluationReportNotFound() *SubmitEvaluationReportNotFound {

	return &SubmitEvaluationReportNotFound{}
}

// WithPayload adds the payload to the submit evaluation report not found response
func (o *SubmitEvaluationReportNotFound) WithPayload(payload *ghcmessages.Error) *SubmitEvaluationReportNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the submit evaluation report not found response
func (o *SubmitEvaluationReportNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SubmitEvaluationReportNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SubmitEvaluationReportPreconditionFailedCode is the HTTP code returned for type SubmitEvaluationReportPreconditionFailed
const SubmitEvaluationReportPreconditionFailedCode int = 412

/*
SubmitEvaluationReportPreconditionFailed Precondition failed

swagger:response submitEvaluationReportPreconditionFailed
*/
type SubmitEvaluationReportPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewSubmitEvaluationReportPreconditionFailed creates SubmitEvaluationReportPreconditionFailed with default headers values
func NewSubmitEvaluationReportPreconditionFailed() *SubmitEvaluationReportPreconditionFailed {

	return &SubmitEvaluationReportPreconditionFailed{}
}

// WithPayload adds the payload to the submit evaluation report precondition failed response
func (o *SubmitEvaluationReportPreconditionFailed) WithPayload(payload *ghcmessages.Error) *SubmitEvaluationReportPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the submit evaluation report precondition failed response
func (o *SubmitEvaluationReportPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SubmitEvaluationReportPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SubmitEvaluationReportUnprocessableEntityCode is the HTTP code returned for type SubmitEvaluationReportUnprocessableEntity
const SubmitEvaluationReportUnprocessableEntityCode int = 422

/*
SubmitEvaluationReportUnprocessableEntity The payload was unprocessable.

swagger:response submitEvaluationReportUnprocessableEntity
*/
type SubmitEvaluationReportUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewSubmitEvaluationReportUnprocessableEntity creates SubmitEvaluationReportUnprocessableEntity with default headers values
func NewSubmitEvaluationReportUnprocessableEntity() *SubmitEvaluationReportUnprocessableEntity {

	return &SubmitEvaluationReportUnprocessableEntity{}
}

// WithPayload adds the payload to the submit evaluation report unprocessable entity response
func (o *SubmitEvaluationReportUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *SubmitEvaluationReportUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the submit evaluation report unprocessable entity response
func (o *SubmitEvaluationReportUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SubmitEvaluationReportUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SubmitEvaluationReportInternalServerErrorCode is the HTTP code returned for type SubmitEvaluationReportInternalServerError
const SubmitEvaluationReportInternalServerErrorCode int = 500

/*
SubmitEvaluationReportInternalServerError A server error occurred

swagger:response submitEvaluationReportInternalServerError
*/
type SubmitEvaluationReportInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewSubmitEvaluationReportInternalServerError creates SubmitEvaluationReportInternalServerError with default headers values
func NewSubmitEvaluationReportInternalServerError() *SubmitEvaluationReportInternalServerError {

	return &SubmitEvaluationReportInternalServerError{}
}

// WithPayload adds the payload to the submit evaluation report internal server error response
func (o *SubmitEvaluationReportInternalServerError) WithPayload(payload *ghcmessages.Error) *SubmitEvaluationReportInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the submit evaluation report internal server error response
func (o *SubmitEvaluationReportInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SubmitEvaluationReportInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
