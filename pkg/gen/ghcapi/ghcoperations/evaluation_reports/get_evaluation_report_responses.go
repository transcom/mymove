// Code generated by go-swagger; DO NOT EDIT.

package evaluation_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetEvaluationReportOKCode is the HTTP code returned for type GetEvaluationReportOK
const GetEvaluationReportOKCode int = 200

/*
GetEvaluationReportOK Successfully got the report

swagger:response getEvaluationReportOK
*/
type GetEvaluationReportOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.EvaluationReport `json:"body,omitempty"`
}

// NewGetEvaluationReportOK creates GetEvaluationReportOK with default headers values
func NewGetEvaluationReportOK() *GetEvaluationReportOK {

	return &GetEvaluationReportOK{}
}

// WithPayload adds the payload to the get evaluation report o k response
func (o *GetEvaluationReportOK) WithPayload(payload *ghcmessages.EvaluationReport) *GetEvaluationReportOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluation report o k response
func (o *GetEvaluationReportOK) SetPayload(payload *ghcmessages.EvaluationReport) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationReportOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEvaluationReportBadRequestCode is the HTTP code returned for type GetEvaluationReportBadRequest
const GetEvaluationReportBadRequestCode int = 400

/*
GetEvaluationReportBadRequest The request payload is invalid

swagger:response getEvaluationReportBadRequest
*/
type GetEvaluationReportBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetEvaluationReportBadRequest creates GetEvaluationReportBadRequest with default headers values
func NewGetEvaluationReportBadRequest() *GetEvaluationReportBadRequest {

	return &GetEvaluationReportBadRequest{}
}

// WithPayload adds the payload to the get evaluation report bad request response
func (o *GetEvaluationReportBadRequest) WithPayload(payload *ghcmessages.Error) *GetEvaluationReportBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluation report bad request response
func (o *GetEvaluationReportBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationReportBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEvaluationReportForbiddenCode is the HTTP code returned for type GetEvaluationReportForbidden
const GetEvaluationReportForbiddenCode int = 403

/*
GetEvaluationReportForbidden The request was denied

swagger:response getEvaluationReportForbidden
*/
type GetEvaluationReportForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetEvaluationReportForbidden creates GetEvaluationReportForbidden with default headers values
func NewGetEvaluationReportForbidden() *GetEvaluationReportForbidden {

	return &GetEvaluationReportForbidden{}
}

// WithPayload adds the payload to the get evaluation report forbidden response
func (o *GetEvaluationReportForbidden) WithPayload(payload *ghcmessages.Error) *GetEvaluationReportForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluation report forbidden response
func (o *GetEvaluationReportForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationReportForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEvaluationReportNotFoundCode is the HTTP code returned for type GetEvaluationReportNotFound
const GetEvaluationReportNotFoundCode int = 404

/*
GetEvaluationReportNotFound The requested resource wasn't found

swagger:response getEvaluationReportNotFound
*/
type GetEvaluationReportNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetEvaluationReportNotFound creates GetEvaluationReportNotFound with default headers values
func NewGetEvaluationReportNotFound() *GetEvaluationReportNotFound {

	return &GetEvaluationReportNotFound{}
}

// WithPayload adds the payload to the get evaluation report not found response
func (o *GetEvaluationReportNotFound) WithPayload(payload *ghcmessages.Error) *GetEvaluationReportNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluation report not found response
func (o *GetEvaluationReportNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationReportNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEvaluationReportInternalServerErrorCode is the HTTP code returned for type GetEvaluationReportInternalServerError
const GetEvaluationReportInternalServerErrorCode int = 500

/*
GetEvaluationReportInternalServerError A server error occurred

swagger:response getEvaluationReportInternalServerError
*/
type GetEvaluationReportInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetEvaluationReportInternalServerError creates GetEvaluationReportInternalServerError with default headers values
func NewGetEvaluationReportInternalServerError() *GetEvaluationReportInternalServerError {

	return &GetEvaluationReportInternalServerError{}
}

// WithPayload adds the payload to the get evaluation report internal server error response
func (o *GetEvaluationReportInternalServerError) WithPayload(payload *ghcmessages.Error) *GetEvaluationReportInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluation report internal server error response
func (o *GetEvaluationReportInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationReportInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
