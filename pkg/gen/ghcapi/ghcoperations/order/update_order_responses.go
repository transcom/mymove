// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateOrderOKCode is the HTTP code returned for type UpdateOrderOK
const UpdateOrderOKCode int = 200

/*
UpdateOrderOK updated instance of orders

swagger:response updateOrderOK
*/
type UpdateOrderOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Order `json:"body,omitempty"`
}

// NewUpdateOrderOK creates UpdateOrderOK with default headers values
func NewUpdateOrderOK() *UpdateOrderOK {

	return &UpdateOrderOK{}
}

// WithPayload adds the payload to the update order o k response
func (o *UpdateOrderOK) WithPayload(payload *ghcmessages.Order) *UpdateOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order o k response
func (o *UpdateOrderOK) SetPayload(payload *ghcmessages.Order) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateOrderBadRequestCode is the HTTP code returned for type UpdateOrderBadRequest
const UpdateOrderBadRequestCode int = 400

/*
UpdateOrderBadRequest The request payload is invalid

swagger:response updateOrderBadRequest
*/
type UpdateOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateOrderBadRequest creates UpdateOrderBadRequest with default headers values
func NewUpdateOrderBadRequest() *UpdateOrderBadRequest {

	return &UpdateOrderBadRequest{}
}

// WithPayload adds the payload to the update order bad request response
func (o *UpdateOrderBadRequest) WithPayload(payload *ghcmessages.Error) *UpdateOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order bad request response
func (o *UpdateOrderBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateOrderForbiddenCode is the HTTP code returned for type UpdateOrderForbidden
const UpdateOrderForbiddenCode int = 403

/*
UpdateOrderForbidden The request was denied

swagger:response updateOrderForbidden
*/
type UpdateOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateOrderForbidden creates UpdateOrderForbidden with default headers values
func NewUpdateOrderForbidden() *UpdateOrderForbidden {

	return &UpdateOrderForbidden{}
}

// WithPayload adds the payload to the update order forbidden response
func (o *UpdateOrderForbidden) WithPayload(payload *ghcmessages.Error) *UpdateOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order forbidden response
func (o *UpdateOrderForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateOrderNotFoundCode is the HTTP code returned for type UpdateOrderNotFound
const UpdateOrderNotFoundCode int = 404

/*
UpdateOrderNotFound The requested resource wasn't found

swagger:response updateOrderNotFound
*/
type UpdateOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateOrderNotFound creates UpdateOrderNotFound with default headers values
func NewUpdateOrderNotFound() *UpdateOrderNotFound {

	return &UpdateOrderNotFound{}
}

// WithPayload adds the payload to the update order not found response
func (o *UpdateOrderNotFound) WithPayload(payload *ghcmessages.Error) *UpdateOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order not found response
func (o *UpdateOrderNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateOrderConflictCode is the HTTP code returned for type UpdateOrderConflict
const UpdateOrderConflictCode int = 409

/*
UpdateOrderConflict Conflict error

swagger:response updateOrderConflict
*/
type UpdateOrderConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateOrderConflict creates UpdateOrderConflict with default headers values
func NewUpdateOrderConflict() *UpdateOrderConflict {

	return &UpdateOrderConflict{}
}

// WithPayload adds the payload to the update order conflict response
func (o *UpdateOrderConflict) WithPayload(payload *ghcmessages.Error) *UpdateOrderConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order conflict response
func (o *UpdateOrderConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateOrderPreconditionFailedCode is the HTTP code returned for type UpdateOrderPreconditionFailed
const UpdateOrderPreconditionFailedCode int = 412

/*
UpdateOrderPreconditionFailed Precondition failed

swagger:response updateOrderPreconditionFailed
*/
type UpdateOrderPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateOrderPreconditionFailed creates UpdateOrderPreconditionFailed with default headers values
func NewUpdateOrderPreconditionFailed() *UpdateOrderPreconditionFailed {

	return &UpdateOrderPreconditionFailed{}
}

// WithPayload adds the payload to the update order precondition failed response
func (o *UpdateOrderPreconditionFailed) WithPayload(payload *ghcmessages.Error) *UpdateOrderPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order precondition failed response
func (o *UpdateOrderPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateOrderUnprocessableEntityCode is the HTTP code returned for type UpdateOrderUnprocessableEntity
const UpdateOrderUnprocessableEntityCode int = 422

/*
UpdateOrderUnprocessableEntity The payload was unprocessable.

swagger:response updateOrderUnprocessableEntity
*/
type UpdateOrderUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateOrderUnprocessableEntity creates UpdateOrderUnprocessableEntity with default headers values
func NewUpdateOrderUnprocessableEntity() *UpdateOrderUnprocessableEntity {

	return &UpdateOrderUnprocessableEntity{}
}

// WithPayload adds the payload to the update order unprocessable entity response
func (o *UpdateOrderUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *UpdateOrderUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order unprocessable entity response
func (o *UpdateOrderUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateOrderInternalServerErrorCode is the HTTP code returned for type UpdateOrderInternalServerError
const UpdateOrderInternalServerErrorCode int = 500

/*
UpdateOrderInternalServerError A server error occurred

swagger:response updateOrderInternalServerError
*/
type UpdateOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateOrderInternalServerError creates UpdateOrderInternalServerError with default headers values
func NewUpdateOrderInternalServerError() *UpdateOrderInternalServerError {

	return &UpdateOrderInternalServerError{}
}

// WithPayload adds the payload to the update order internal server error response
func (o *UpdateOrderInternalServerError) WithPayload(payload *ghcmessages.Error) *UpdateOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update order internal server error response
func (o *UpdateOrderInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
