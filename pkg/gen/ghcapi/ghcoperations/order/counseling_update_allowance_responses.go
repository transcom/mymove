// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// CounselingUpdateAllowanceOKCode is the HTTP code returned for type CounselingUpdateAllowanceOK
const CounselingUpdateAllowanceOKCode int = 200

/*
CounselingUpdateAllowanceOK updated instance of allowance

swagger:response counselingUpdateAllowanceOK
*/
type CounselingUpdateAllowanceOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Order `json:"body,omitempty"`
}

// NewCounselingUpdateAllowanceOK creates CounselingUpdateAllowanceOK with default headers values
func NewCounselingUpdateAllowanceOK() *CounselingUpdateAllowanceOK {

	return &CounselingUpdateAllowanceOK{}
}

// WithPayload adds the payload to the counseling update allowance o k response
func (o *CounselingUpdateAllowanceOK) WithPayload(payload *ghcmessages.Order) *CounselingUpdateAllowanceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the counseling update allowance o k response
func (o *CounselingUpdateAllowanceOK) SetPayload(payload *ghcmessages.Order) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CounselingUpdateAllowanceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CounselingUpdateAllowanceForbiddenCode is the HTTP code returned for type CounselingUpdateAllowanceForbidden
const CounselingUpdateAllowanceForbiddenCode int = 403

/*
CounselingUpdateAllowanceForbidden The request was denied

swagger:response counselingUpdateAllowanceForbidden
*/
type CounselingUpdateAllowanceForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCounselingUpdateAllowanceForbidden creates CounselingUpdateAllowanceForbidden with default headers values
func NewCounselingUpdateAllowanceForbidden() *CounselingUpdateAllowanceForbidden {

	return &CounselingUpdateAllowanceForbidden{}
}

// WithPayload adds the payload to the counseling update allowance forbidden response
func (o *CounselingUpdateAllowanceForbidden) WithPayload(payload *ghcmessages.Error) *CounselingUpdateAllowanceForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the counseling update allowance forbidden response
func (o *CounselingUpdateAllowanceForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CounselingUpdateAllowanceForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CounselingUpdateAllowanceNotFoundCode is the HTTP code returned for type CounselingUpdateAllowanceNotFound
const CounselingUpdateAllowanceNotFoundCode int = 404

/*
CounselingUpdateAllowanceNotFound The requested resource wasn't found

swagger:response counselingUpdateAllowanceNotFound
*/
type CounselingUpdateAllowanceNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCounselingUpdateAllowanceNotFound creates CounselingUpdateAllowanceNotFound with default headers values
func NewCounselingUpdateAllowanceNotFound() *CounselingUpdateAllowanceNotFound {

	return &CounselingUpdateAllowanceNotFound{}
}

// WithPayload adds the payload to the counseling update allowance not found response
func (o *CounselingUpdateAllowanceNotFound) WithPayload(payload *ghcmessages.Error) *CounselingUpdateAllowanceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the counseling update allowance not found response
func (o *CounselingUpdateAllowanceNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CounselingUpdateAllowanceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CounselingUpdateAllowancePreconditionFailedCode is the HTTP code returned for type CounselingUpdateAllowancePreconditionFailed
const CounselingUpdateAllowancePreconditionFailedCode int = 412

/*
CounselingUpdateAllowancePreconditionFailed Precondition failed

swagger:response counselingUpdateAllowancePreconditionFailed
*/
type CounselingUpdateAllowancePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCounselingUpdateAllowancePreconditionFailed creates CounselingUpdateAllowancePreconditionFailed with default headers values
func NewCounselingUpdateAllowancePreconditionFailed() *CounselingUpdateAllowancePreconditionFailed {

	return &CounselingUpdateAllowancePreconditionFailed{}
}

// WithPayload adds the payload to the counseling update allowance precondition failed response
func (o *CounselingUpdateAllowancePreconditionFailed) WithPayload(payload *ghcmessages.Error) *CounselingUpdateAllowancePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the counseling update allowance precondition failed response
func (o *CounselingUpdateAllowancePreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CounselingUpdateAllowancePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CounselingUpdateAllowanceUnprocessableEntityCode is the HTTP code returned for type CounselingUpdateAllowanceUnprocessableEntity
const CounselingUpdateAllowanceUnprocessableEntityCode int = 422

/*
CounselingUpdateAllowanceUnprocessableEntity The payload was unprocessable.

swagger:response counselingUpdateAllowanceUnprocessableEntity
*/
type CounselingUpdateAllowanceUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewCounselingUpdateAllowanceUnprocessableEntity creates CounselingUpdateAllowanceUnprocessableEntity with default headers values
func NewCounselingUpdateAllowanceUnprocessableEntity() *CounselingUpdateAllowanceUnprocessableEntity {

	return &CounselingUpdateAllowanceUnprocessableEntity{}
}

// WithPayload adds the payload to the counseling update allowance unprocessable entity response
func (o *CounselingUpdateAllowanceUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *CounselingUpdateAllowanceUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the counseling update allowance unprocessable entity response
func (o *CounselingUpdateAllowanceUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CounselingUpdateAllowanceUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CounselingUpdateAllowanceInternalServerErrorCode is the HTTP code returned for type CounselingUpdateAllowanceInternalServerError
const CounselingUpdateAllowanceInternalServerErrorCode int = 500

/*
CounselingUpdateAllowanceInternalServerError A server error occurred

swagger:response counselingUpdateAllowanceInternalServerError
*/
type CounselingUpdateAllowanceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCounselingUpdateAllowanceInternalServerError creates CounselingUpdateAllowanceInternalServerError with default headers values
func NewCounselingUpdateAllowanceInternalServerError() *CounselingUpdateAllowanceInternalServerError {

	return &CounselingUpdateAllowanceInternalServerError{}
}

// WithPayload adds the payload to the counseling update allowance internal server error response
func (o *CounselingUpdateAllowanceInternalServerError) WithPayload(payload *ghcmessages.Error) *CounselingUpdateAllowanceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the counseling update allowance internal server error response
func (o *CounselingUpdateAllowanceInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CounselingUpdateAllowanceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
