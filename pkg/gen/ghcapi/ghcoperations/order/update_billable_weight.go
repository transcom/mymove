// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateBillableWeightHandlerFunc turns a function with the right signature into a update billable weight handler
type UpdateBillableWeightHandlerFunc func(UpdateBillableWeightParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateBillableWeightHandlerFunc) Handle(params UpdateBillableWeightParams) middleware.Responder {
	return fn(params)
}

// UpdateBillableWeightHandler interface for that can handle valid update billable weight params
type UpdateBillableWeightHandler interface {
	Handle(UpdateBillableWeightParams) middleware.Responder
}

// NewUpdateBillableWeight creates a new http.Handler for the update billable weight operation
func NewUpdateBillableWeight(ctx *middleware.Context, handler UpdateBillableWeightHandler) *UpdateBillableWeight {
	return &UpdateBillableWeight{Context: ctx, Handler: handler}
}

/*
	UpdateBillableWeight swagger:route PATCH /orders/{orderID}/update-billable-weight order updateBillableWeight

# Updates the max billable weight

Updates the DBAuthorizedWeight attribute for the Order Entitlements=
*/
type UpdateBillableWeight struct {
	Context *middleware.Context
	Handler UpdateBillableWeightHandler
}

func (o *UpdateBillableWeight) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateBillableWeightParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
