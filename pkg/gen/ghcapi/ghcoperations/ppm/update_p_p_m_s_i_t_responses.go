// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdatePPMSITOKCode is the HTTP code returned for type UpdatePPMSITOK
const UpdatePPMSITOKCode int = 200

/*
UpdatePPMSITOK Successfully finished PPM SIT update

swagger:response updatePPMSITOK
*/
type UpdatePPMSITOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.PPMShipment `json:"body,omitempty"`
}

// NewUpdatePPMSITOK creates UpdatePPMSITOK with default headers values
func NewUpdatePPMSITOK() *UpdatePPMSITOK {

	return &UpdatePPMSITOK{}
}

// WithPayload adds the payload to the update p p m s i t o k response
func (o *UpdatePPMSITOK) WithPayload(payload *ghcmessages.PPMShipment) *UpdatePPMSITOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update p p m s i t o k response
func (o *UpdatePPMSITOK) SetPayload(payload *ghcmessages.PPMShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePPMSITOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePPMSITBadRequestCode is the HTTP code returned for type UpdatePPMSITBadRequest
const UpdatePPMSITBadRequestCode int = 400

/*
UpdatePPMSITBadRequest The request payload is invalid

swagger:response updatePPMSITBadRequest
*/
type UpdatePPMSITBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdatePPMSITBadRequest creates UpdatePPMSITBadRequest with default headers values
func NewUpdatePPMSITBadRequest() *UpdatePPMSITBadRequest {

	return &UpdatePPMSITBadRequest{}
}

// WithPayload adds the payload to the update p p m s i t bad request response
func (o *UpdatePPMSITBadRequest) WithPayload(payload *ghcmessages.Error) *UpdatePPMSITBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update p p m s i t bad request response
func (o *UpdatePPMSITBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePPMSITBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePPMSITForbiddenCode is the HTTP code returned for type UpdatePPMSITForbidden
const UpdatePPMSITForbiddenCode int = 403

/*
UpdatePPMSITForbidden The request was denied

swagger:response updatePPMSITForbidden
*/
type UpdatePPMSITForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdatePPMSITForbidden creates UpdatePPMSITForbidden with default headers values
func NewUpdatePPMSITForbidden() *UpdatePPMSITForbidden {

	return &UpdatePPMSITForbidden{}
}

// WithPayload adds the payload to the update p p m s i t forbidden response
func (o *UpdatePPMSITForbidden) WithPayload(payload *ghcmessages.Error) *UpdatePPMSITForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update p p m s i t forbidden response
func (o *UpdatePPMSITForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePPMSITForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePPMSITNotFoundCode is the HTTP code returned for type UpdatePPMSITNotFound
const UpdatePPMSITNotFoundCode int = 404

/*
UpdatePPMSITNotFound The requested resource wasn't found

swagger:response updatePPMSITNotFound
*/
type UpdatePPMSITNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdatePPMSITNotFound creates UpdatePPMSITNotFound with default headers values
func NewUpdatePPMSITNotFound() *UpdatePPMSITNotFound {

	return &UpdatePPMSITNotFound{}
}

// WithPayload adds the payload to the update p p m s i t not found response
func (o *UpdatePPMSITNotFound) WithPayload(payload *ghcmessages.Error) *UpdatePPMSITNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update p p m s i t not found response
func (o *UpdatePPMSITNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePPMSITNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePPMSITPreconditionFailedCode is the HTTP code returned for type UpdatePPMSITPreconditionFailed
const UpdatePPMSITPreconditionFailedCode int = 412

/*
UpdatePPMSITPreconditionFailed Precondition failed

swagger:response updatePPMSITPreconditionFailed
*/
type UpdatePPMSITPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdatePPMSITPreconditionFailed creates UpdatePPMSITPreconditionFailed with default headers values
func NewUpdatePPMSITPreconditionFailed() *UpdatePPMSITPreconditionFailed {

	return &UpdatePPMSITPreconditionFailed{}
}

// WithPayload adds the payload to the update p p m s i t precondition failed response
func (o *UpdatePPMSITPreconditionFailed) WithPayload(payload *ghcmessages.Error) *UpdatePPMSITPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update p p m s i t precondition failed response
func (o *UpdatePPMSITPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePPMSITPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePPMSITUnprocessableEntityCode is the HTTP code returned for type UpdatePPMSITUnprocessableEntity
const UpdatePPMSITUnprocessableEntityCode int = 422

/*
UpdatePPMSITUnprocessableEntity The payload was unprocessable.

swagger:response updatePPMSITUnprocessableEntity
*/
type UpdatePPMSITUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdatePPMSITUnprocessableEntity creates UpdatePPMSITUnprocessableEntity with default headers values
func NewUpdatePPMSITUnprocessableEntity() *UpdatePPMSITUnprocessableEntity {

	return &UpdatePPMSITUnprocessableEntity{}
}

// WithPayload adds the payload to the update p p m s i t unprocessable entity response
func (o *UpdatePPMSITUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *UpdatePPMSITUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update p p m s i t unprocessable entity response
func (o *UpdatePPMSITUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePPMSITUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePPMSITInternalServerErrorCode is the HTTP code returned for type UpdatePPMSITInternalServerError
const UpdatePPMSITInternalServerErrorCode int = 500

/*
UpdatePPMSITInternalServerError A server error occurred

swagger:response updatePPMSITInternalServerError
*/
type UpdatePPMSITInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdatePPMSITInternalServerError creates UpdatePPMSITInternalServerError with default headers values
func NewUpdatePPMSITInternalServerError() *UpdatePPMSITInternalServerError {

	return &UpdatePPMSITInternalServerError{}
}

// WithPayload adds the payload to the update p p m s i t internal server error response
func (o *UpdatePPMSITInternalServerError) WithPayload(payload *ghcmessages.Error) *UpdatePPMSITInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update p p m s i t internal server error response
func (o *UpdatePPMSITInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePPMSITInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
