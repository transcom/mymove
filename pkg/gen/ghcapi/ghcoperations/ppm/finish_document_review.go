// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// FinishDocumentReviewHandlerFunc turns a function with the right signature into a finish document review handler
type FinishDocumentReviewHandlerFunc func(FinishDocumentReviewParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FinishDocumentReviewHandlerFunc) Handle(params FinishDocumentReviewParams) middleware.Responder {
	return fn(params)
}

// FinishDocumentReviewHandler interface for that can handle valid finish document review params
type FinishDocumentReviewHandler interface {
	Handle(FinishDocumentReviewParams) middleware.Responder
}

// NewFinishDocumentReview creates a new http.Handler for the finish document review operation
func NewFinishDocumentReview(ctx *middleware.Context, handler FinishDocumentReviewHandler) *FinishDocumentReview {
	return &FinishDocumentReview{Context: ctx, Handler: handler}
}

/*
	FinishDocumentReview swagger:route PATCH /ppm-shipments/{ppmShipmentId}/finish-document-review ppm finishDocumentReview

# Updates a PPM shipment's status after document review

Updates a PPM shipment's status once documents have been reviewed. Status is updated depending on whether any documents have been rejected.
*/
type FinishDocumentReview struct {
	Context *middleware.Context
	Handler FinishDocumentReviewHandler
}

func (o *FinishDocumentReview) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewFinishDocumentReviewParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
