// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPPMSITEstimatedCostHandlerFunc turns a function with the right signature into a get p p m s i t estimated cost handler
type GetPPMSITEstimatedCostHandlerFunc func(GetPPMSITEstimatedCostParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPPMSITEstimatedCostHandlerFunc) Handle(params GetPPMSITEstimatedCostParams) middleware.Responder {
	return fn(params)
}

// GetPPMSITEstimatedCostHandler interface for that can handle valid get p p m s i t estimated cost params
type GetPPMSITEstimatedCostHandler interface {
	Handle(GetPPMSITEstimatedCostParams) middleware.Responder
}

// NewGetPPMSITEstimatedCost creates a new http.Handler for the get p p m s i t estimated cost operation
func NewGetPPMSITEstimatedCost(ctx *middleware.Context, handler GetPPMSITEstimatedCostHandler) *GetPPMSITEstimatedCost {
	return &GetPPMSITEstimatedCost{Context: ctx, Handler: handler}
}

/*
	GetPPMSITEstimatedCost swagger:route GET /ppm-shipments/{ppmShipmentId}/sit_location/{sitLocation}/sit-estimated-cost ppm getPPMSITEstimatedCost

# Get the SIT estimated cost for a PPM shipment

Calculates and returns the SIT estimated cost for the specified PPM shipment.
*/
type GetPPMSITEstimatedCost struct {
	Context *middleware.Context
	Handler GetPPMSITEstimatedCostHandler
}

func (o *GetPPMSITEstimatedCost) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetPPMSITEstimatedCostParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
