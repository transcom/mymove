// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetWeightTicketsHandlerFunc turns a function with the right signature into a get weight tickets handler
type GetWeightTicketsHandlerFunc func(GetWeightTicketsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetWeightTicketsHandlerFunc) Handle(params GetWeightTicketsParams) middleware.Responder {
	return fn(params)
}

// GetWeightTicketsHandler interface for that can handle valid get weight tickets params
type GetWeightTicketsHandler interface {
	Handle(GetWeightTicketsParams) middleware.Responder
}

// NewGetWeightTickets creates a new http.Handler for the get weight tickets operation
func NewGetWeightTickets(ctx *middleware.Context, handler GetWeightTicketsHandler) *GetWeightTickets {
	return &GetWeightTickets{Context: ctx, Handler: handler}
}

/*
	GetWeightTickets swagger:route GET /ppm-shipments/{ppmShipmentId}/weight-tickets ppm getWeightTickets

# Gets all the weight tickets for a PPM shipment

Retrieves all of the weight tickets and associated uploads for each one for the specified PPM shipment. This
excludes any deleted weight tickets or uploads.
*/
type GetWeightTickets struct {
	Context *middleware.Context
	Handler GetWeightTicketsHandler
}

func (o *GetWeightTickets) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetWeightTicketsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
