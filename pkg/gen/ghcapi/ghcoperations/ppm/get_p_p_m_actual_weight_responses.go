// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetPPMActualWeightOKCode is the HTTP code returned for type GetPPMActualWeightOK
const GetPPMActualWeightOKCode int = 200

/*
GetPPMActualWeightOK Returns actual weight for the specified PPM shipment.

swagger:response getPPMActualWeightOK
*/
type GetPPMActualWeightOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.PPMActualWeight `json:"body,omitempty"`
}

// NewGetPPMActualWeightOK creates GetPPMActualWeightOK with default headers values
func NewGetPPMActualWeightOK() *GetPPMActualWeightOK {

	return &GetPPMActualWeightOK{}
}

// WithPayload adds the payload to the get p p m actual weight o k response
func (o *GetPPMActualWeightOK) WithPayload(payload *ghcmessages.PPMActualWeight) *GetPPMActualWeightOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m actual weight o k response
func (o *GetPPMActualWeightOK) SetPayload(payload *ghcmessages.PPMActualWeight) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMActualWeightOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPPMActualWeightBadRequestCode is the HTTP code returned for type GetPPMActualWeightBadRequest
const GetPPMActualWeightBadRequestCode int = 400

/*
GetPPMActualWeightBadRequest The request payload is invalid

swagger:response getPPMActualWeightBadRequest
*/
type GetPPMActualWeightBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPPMActualWeightBadRequest creates GetPPMActualWeightBadRequest with default headers values
func NewGetPPMActualWeightBadRequest() *GetPPMActualWeightBadRequest {

	return &GetPPMActualWeightBadRequest{}
}

// WithPayload adds the payload to the get p p m actual weight bad request response
func (o *GetPPMActualWeightBadRequest) WithPayload(payload *ghcmessages.Error) *GetPPMActualWeightBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m actual weight bad request response
func (o *GetPPMActualWeightBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMActualWeightBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPPMActualWeightForbiddenCode is the HTTP code returned for type GetPPMActualWeightForbidden
const GetPPMActualWeightForbiddenCode int = 403

/*
GetPPMActualWeightForbidden The request was denied

swagger:response getPPMActualWeightForbidden
*/
type GetPPMActualWeightForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPPMActualWeightForbidden creates GetPPMActualWeightForbidden with default headers values
func NewGetPPMActualWeightForbidden() *GetPPMActualWeightForbidden {

	return &GetPPMActualWeightForbidden{}
}

// WithPayload adds the payload to the get p p m actual weight forbidden response
func (o *GetPPMActualWeightForbidden) WithPayload(payload *ghcmessages.Error) *GetPPMActualWeightForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m actual weight forbidden response
func (o *GetPPMActualWeightForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMActualWeightForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPPMActualWeightNotFoundCode is the HTTP code returned for type GetPPMActualWeightNotFound
const GetPPMActualWeightNotFoundCode int = 404

/*
GetPPMActualWeightNotFound The requested resource wasn't found

swagger:response getPPMActualWeightNotFound
*/
type GetPPMActualWeightNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPPMActualWeightNotFound creates GetPPMActualWeightNotFound with default headers values
func NewGetPPMActualWeightNotFound() *GetPPMActualWeightNotFound {

	return &GetPPMActualWeightNotFound{}
}

// WithPayload adds the payload to the get p p m actual weight not found response
func (o *GetPPMActualWeightNotFound) WithPayload(payload *ghcmessages.Error) *GetPPMActualWeightNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m actual weight not found response
func (o *GetPPMActualWeightNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMActualWeightNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPPMActualWeightUnprocessableEntityCode is the HTTP code returned for type GetPPMActualWeightUnprocessableEntity
const GetPPMActualWeightUnprocessableEntityCode int = 422

/*
GetPPMActualWeightUnprocessableEntity The payload was unprocessable.

swagger:response getPPMActualWeightUnprocessableEntity
*/
type GetPPMActualWeightUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewGetPPMActualWeightUnprocessableEntity creates GetPPMActualWeightUnprocessableEntity with default headers values
func NewGetPPMActualWeightUnprocessableEntity() *GetPPMActualWeightUnprocessableEntity {

	return &GetPPMActualWeightUnprocessableEntity{}
}

// WithPayload adds the payload to the get p p m actual weight unprocessable entity response
func (o *GetPPMActualWeightUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *GetPPMActualWeightUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m actual weight unprocessable entity response
func (o *GetPPMActualWeightUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMActualWeightUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPPMActualWeightInternalServerErrorCode is the HTTP code returned for type GetPPMActualWeightInternalServerError
const GetPPMActualWeightInternalServerErrorCode int = 500

/*
GetPPMActualWeightInternalServerError A server error occurred

swagger:response getPPMActualWeightInternalServerError
*/
type GetPPMActualWeightInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetPPMActualWeightInternalServerError creates GetPPMActualWeightInternalServerError with default headers values
func NewGetPPMActualWeightInternalServerError() *GetPPMActualWeightInternalServerError {

	return &GetPPMActualWeightInternalServerError{}
}

// WithPayload adds the payload to the get p p m actual weight internal server error response
func (o *GetPPMActualWeightInternalServerError) WithPayload(payload *ghcmessages.Error) *GetPPMActualWeightInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get p p m actual weight internal server error response
func (o *GetPPMActualWeightInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPPMActualWeightInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
