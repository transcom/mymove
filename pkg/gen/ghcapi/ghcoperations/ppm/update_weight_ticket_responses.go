// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateWeightTicketOKCode is the HTTP code returned for type UpdateWeightTicketOK
const UpdateWeightTicketOKCode int = 200

/*
UpdateWeightTicketOK returns an updated weight ticket object

swagger:response updateWeightTicketOK
*/
type UpdateWeightTicketOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.WeightTicket `json:"body,omitempty"`
}

// NewUpdateWeightTicketOK creates UpdateWeightTicketOK with default headers values
func NewUpdateWeightTicketOK() *UpdateWeightTicketOK {

	return &UpdateWeightTicketOK{}
}

// WithPayload adds the payload to the update weight ticket o k response
func (o *UpdateWeightTicketOK) WithPayload(payload *ghcmessages.WeightTicket) *UpdateWeightTicketOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket o k response
func (o *UpdateWeightTicketOK) SetPayload(payload *ghcmessages.WeightTicket) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateWeightTicketBadRequestCode is the HTTP code returned for type UpdateWeightTicketBadRequest
const UpdateWeightTicketBadRequestCode int = 400

/*
UpdateWeightTicketBadRequest The request payload is invalid

swagger:response updateWeightTicketBadRequest
*/
type UpdateWeightTicketBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateWeightTicketBadRequest creates UpdateWeightTicketBadRequest with default headers values
func NewUpdateWeightTicketBadRequest() *UpdateWeightTicketBadRequest {

	return &UpdateWeightTicketBadRequest{}
}

// WithPayload adds the payload to the update weight ticket bad request response
func (o *UpdateWeightTicketBadRequest) WithPayload(payload *ghcmessages.Error) *UpdateWeightTicketBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket bad request response
func (o *UpdateWeightTicketBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateWeightTicketUnauthorizedCode is the HTTP code returned for type UpdateWeightTicketUnauthorized
const UpdateWeightTicketUnauthorizedCode int = 401

/*
UpdateWeightTicketUnauthorized The request was denied

swagger:response updateWeightTicketUnauthorized
*/
type UpdateWeightTicketUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateWeightTicketUnauthorized creates UpdateWeightTicketUnauthorized with default headers values
func NewUpdateWeightTicketUnauthorized() *UpdateWeightTicketUnauthorized {

	return &UpdateWeightTicketUnauthorized{}
}

// WithPayload adds the payload to the update weight ticket unauthorized response
func (o *UpdateWeightTicketUnauthorized) WithPayload(payload *ghcmessages.Error) *UpdateWeightTicketUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket unauthorized response
func (o *UpdateWeightTicketUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateWeightTicketForbiddenCode is the HTTP code returned for type UpdateWeightTicketForbidden
const UpdateWeightTicketForbiddenCode int = 403

/*
UpdateWeightTicketForbidden The request was denied

swagger:response updateWeightTicketForbidden
*/
type UpdateWeightTicketForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateWeightTicketForbidden creates UpdateWeightTicketForbidden with default headers values
func NewUpdateWeightTicketForbidden() *UpdateWeightTicketForbidden {

	return &UpdateWeightTicketForbidden{}
}

// WithPayload adds the payload to the update weight ticket forbidden response
func (o *UpdateWeightTicketForbidden) WithPayload(payload *ghcmessages.Error) *UpdateWeightTicketForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket forbidden response
func (o *UpdateWeightTicketForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateWeightTicketNotFoundCode is the HTTP code returned for type UpdateWeightTicketNotFound
const UpdateWeightTicketNotFoundCode int = 404

/*
UpdateWeightTicketNotFound The requested resource wasn't found

swagger:response updateWeightTicketNotFound
*/
type UpdateWeightTicketNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateWeightTicketNotFound creates UpdateWeightTicketNotFound with default headers values
func NewUpdateWeightTicketNotFound() *UpdateWeightTicketNotFound {

	return &UpdateWeightTicketNotFound{}
}

// WithPayload adds the payload to the update weight ticket not found response
func (o *UpdateWeightTicketNotFound) WithPayload(payload *ghcmessages.Error) *UpdateWeightTicketNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket not found response
func (o *UpdateWeightTicketNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateWeightTicketPreconditionFailedCode is the HTTP code returned for type UpdateWeightTicketPreconditionFailed
const UpdateWeightTicketPreconditionFailedCode int = 412

/*
UpdateWeightTicketPreconditionFailed Precondition failed

swagger:response updateWeightTicketPreconditionFailed
*/
type UpdateWeightTicketPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateWeightTicketPreconditionFailed creates UpdateWeightTicketPreconditionFailed with default headers values
func NewUpdateWeightTicketPreconditionFailed() *UpdateWeightTicketPreconditionFailed {

	return &UpdateWeightTicketPreconditionFailed{}
}

// WithPayload adds the payload to the update weight ticket precondition failed response
func (o *UpdateWeightTicketPreconditionFailed) WithPayload(payload *ghcmessages.Error) *UpdateWeightTicketPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket precondition failed response
func (o *UpdateWeightTicketPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateWeightTicketUnprocessableEntityCode is the HTTP code returned for type UpdateWeightTicketUnprocessableEntity
const UpdateWeightTicketUnprocessableEntityCode int = 422

/*
UpdateWeightTicketUnprocessableEntity The payload was unprocessable.

swagger:response updateWeightTicketUnprocessableEntity
*/
type UpdateWeightTicketUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateWeightTicketUnprocessableEntity creates UpdateWeightTicketUnprocessableEntity with default headers values
func NewUpdateWeightTicketUnprocessableEntity() *UpdateWeightTicketUnprocessableEntity {

	return &UpdateWeightTicketUnprocessableEntity{}
}

// WithPayload adds the payload to the update weight ticket unprocessable entity response
func (o *UpdateWeightTicketUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *UpdateWeightTicketUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket unprocessable entity response
func (o *UpdateWeightTicketUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateWeightTicketInternalServerErrorCode is the HTTP code returned for type UpdateWeightTicketInternalServerError
const UpdateWeightTicketInternalServerErrorCode int = 500

/*
UpdateWeightTicketInternalServerError A server error occurred

swagger:response updateWeightTicketInternalServerError
*/
type UpdateWeightTicketInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateWeightTicketInternalServerError creates UpdateWeightTicketInternalServerError with default headers values
func NewUpdateWeightTicketInternalServerError() *UpdateWeightTicketInternalServerError {

	return &UpdateWeightTicketInternalServerError{}
}

// WithPayload adds the payload to the update weight ticket internal server error response
func (o *UpdateWeightTicketInternalServerError) WithPayload(payload *ghcmessages.Error) *UpdateWeightTicketInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update weight ticket internal server error response
func (o *UpdateWeightTicketInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWeightTicketInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
