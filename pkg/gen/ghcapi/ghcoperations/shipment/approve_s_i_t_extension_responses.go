// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// ApproveSITExtensionOKCode is the HTTP code returned for type ApproveSITExtensionOK
const ApproveSITExtensionOKCode int = 200

/*
ApproveSITExtensionOK Successfully approved a SIT extension

swagger:response approveSITExtensionOK
*/
type ApproveSITExtensionOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewApproveSITExtensionOK creates ApproveSITExtensionOK with default headers values
func NewApproveSITExtensionOK() *ApproveSITExtensionOK {

	return &ApproveSITExtensionOK{}
}

// WithPayload adds the payload to the approve s i t extension o k response
func (o *ApproveSITExtensionOK) WithPayload(payload *ghcmessages.MTOShipment) *ApproveSITExtensionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve s i t extension o k response
func (o *ApproveSITExtensionOK) SetPayload(payload *ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSITExtensionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSITExtensionForbiddenCode is the HTTP code returned for type ApproveSITExtensionForbidden
const ApproveSITExtensionForbiddenCode int = 403

/*
ApproveSITExtensionForbidden The request was denied

swagger:response approveSITExtensionForbidden
*/
type ApproveSITExtensionForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSITExtensionForbidden creates ApproveSITExtensionForbidden with default headers values
func NewApproveSITExtensionForbidden() *ApproveSITExtensionForbidden {

	return &ApproveSITExtensionForbidden{}
}

// WithPayload adds the payload to the approve s i t extension forbidden response
func (o *ApproveSITExtensionForbidden) WithPayload(payload *ghcmessages.Error) *ApproveSITExtensionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve s i t extension forbidden response
func (o *ApproveSITExtensionForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSITExtensionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSITExtensionNotFoundCode is the HTTP code returned for type ApproveSITExtensionNotFound
const ApproveSITExtensionNotFoundCode int = 404

/*
ApproveSITExtensionNotFound The requested resource wasn't found

swagger:response approveSITExtensionNotFound
*/
type ApproveSITExtensionNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSITExtensionNotFound creates ApproveSITExtensionNotFound with default headers values
func NewApproveSITExtensionNotFound() *ApproveSITExtensionNotFound {

	return &ApproveSITExtensionNotFound{}
}

// WithPayload adds the payload to the approve s i t extension not found response
func (o *ApproveSITExtensionNotFound) WithPayload(payload *ghcmessages.Error) *ApproveSITExtensionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve s i t extension not found response
func (o *ApproveSITExtensionNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSITExtensionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSITExtensionConflictCode is the HTTP code returned for type ApproveSITExtensionConflict
const ApproveSITExtensionConflictCode int = 409

/*
ApproveSITExtensionConflict Conflict error

swagger:response approveSITExtensionConflict
*/
type ApproveSITExtensionConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSITExtensionConflict creates ApproveSITExtensionConflict with default headers values
func NewApproveSITExtensionConflict() *ApproveSITExtensionConflict {

	return &ApproveSITExtensionConflict{}
}

// WithPayload adds the payload to the approve s i t extension conflict response
func (o *ApproveSITExtensionConflict) WithPayload(payload *ghcmessages.Error) *ApproveSITExtensionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve s i t extension conflict response
func (o *ApproveSITExtensionConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSITExtensionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSITExtensionPreconditionFailedCode is the HTTP code returned for type ApproveSITExtensionPreconditionFailed
const ApproveSITExtensionPreconditionFailedCode int = 412

/*
ApproveSITExtensionPreconditionFailed Precondition failed

swagger:response approveSITExtensionPreconditionFailed
*/
type ApproveSITExtensionPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSITExtensionPreconditionFailed creates ApproveSITExtensionPreconditionFailed with default headers values
func NewApproveSITExtensionPreconditionFailed() *ApproveSITExtensionPreconditionFailed {

	return &ApproveSITExtensionPreconditionFailed{}
}

// WithPayload adds the payload to the approve s i t extension precondition failed response
func (o *ApproveSITExtensionPreconditionFailed) WithPayload(payload *ghcmessages.Error) *ApproveSITExtensionPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve s i t extension precondition failed response
func (o *ApproveSITExtensionPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSITExtensionPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSITExtensionUnprocessableEntityCode is the HTTP code returned for type ApproveSITExtensionUnprocessableEntity
const ApproveSITExtensionUnprocessableEntityCode int = 422

/*
ApproveSITExtensionUnprocessableEntity The payload was unprocessable.

swagger:response approveSITExtensionUnprocessableEntity
*/
type ApproveSITExtensionUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewApproveSITExtensionUnprocessableEntity creates ApproveSITExtensionUnprocessableEntity with default headers values
func NewApproveSITExtensionUnprocessableEntity() *ApproveSITExtensionUnprocessableEntity {

	return &ApproveSITExtensionUnprocessableEntity{}
}

// WithPayload adds the payload to the approve s i t extension unprocessable entity response
func (o *ApproveSITExtensionUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *ApproveSITExtensionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve s i t extension unprocessable entity response
func (o *ApproveSITExtensionUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSITExtensionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSITExtensionInternalServerErrorCode is the HTTP code returned for type ApproveSITExtensionInternalServerError
const ApproveSITExtensionInternalServerErrorCode int = 500

/*
ApproveSITExtensionInternalServerError A server error occurred

swagger:response approveSITExtensionInternalServerError
*/
type ApproveSITExtensionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSITExtensionInternalServerError creates ApproveSITExtensionInternalServerError with default headers values
func NewApproveSITExtensionInternalServerError() *ApproveSITExtensionInternalServerError {

	return &ApproveSITExtensionInternalServerError{}
}

// WithPayload adds the payload to the approve s i t extension internal server error response
func (o *ApproveSITExtensionInternalServerError) WithPayload(payload *ghcmessages.Error) *ApproveSITExtensionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve s i t extension internal server error response
func (o *ApproveSITExtensionInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSITExtensionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
