// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// RejectShipmentOKCode is the HTTP code returned for type RejectShipmentOK
const RejectShipmentOKCode int = 200

/*
RejectShipmentOK Successfully rejected the shipment

swagger:response rejectShipmentOK
*/
type RejectShipmentOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewRejectShipmentOK creates RejectShipmentOK with default headers values
func NewRejectShipmentOK() *RejectShipmentOK {

	return &RejectShipmentOK{}
}

// WithPayload adds the payload to the reject shipment o k response
func (o *RejectShipmentOK) WithPayload(payload *ghcmessages.MTOShipment) *RejectShipmentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reject shipment o k response
func (o *RejectShipmentOK) SetPayload(payload *ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RejectShipmentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RejectShipmentForbiddenCode is the HTTP code returned for type RejectShipmentForbidden
const RejectShipmentForbiddenCode int = 403

/*
RejectShipmentForbidden The request was denied

swagger:response rejectShipmentForbidden
*/
type RejectShipmentForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewRejectShipmentForbidden creates RejectShipmentForbidden with default headers values
func NewRejectShipmentForbidden() *RejectShipmentForbidden {

	return &RejectShipmentForbidden{}
}

// WithPayload adds the payload to the reject shipment forbidden response
func (o *RejectShipmentForbidden) WithPayload(payload *ghcmessages.Error) *RejectShipmentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reject shipment forbidden response
func (o *RejectShipmentForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RejectShipmentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RejectShipmentNotFoundCode is the HTTP code returned for type RejectShipmentNotFound
const RejectShipmentNotFoundCode int = 404

/*
RejectShipmentNotFound The requested resource wasn't found

swagger:response rejectShipmentNotFound
*/
type RejectShipmentNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewRejectShipmentNotFound creates RejectShipmentNotFound with default headers values
func NewRejectShipmentNotFound() *RejectShipmentNotFound {

	return &RejectShipmentNotFound{}
}

// WithPayload adds the payload to the reject shipment not found response
func (o *RejectShipmentNotFound) WithPayload(payload *ghcmessages.Error) *RejectShipmentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reject shipment not found response
func (o *RejectShipmentNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RejectShipmentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RejectShipmentConflictCode is the HTTP code returned for type RejectShipmentConflict
const RejectShipmentConflictCode int = 409

/*
RejectShipmentConflict Conflict error

swagger:response rejectShipmentConflict
*/
type RejectShipmentConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewRejectShipmentConflict creates RejectShipmentConflict with default headers values
func NewRejectShipmentConflict() *RejectShipmentConflict {

	return &RejectShipmentConflict{}
}

// WithPayload adds the payload to the reject shipment conflict response
func (o *RejectShipmentConflict) WithPayload(payload *ghcmessages.Error) *RejectShipmentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reject shipment conflict response
func (o *RejectShipmentConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RejectShipmentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RejectShipmentPreconditionFailedCode is the HTTP code returned for type RejectShipmentPreconditionFailed
const RejectShipmentPreconditionFailedCode int = 412

/*
RejectShipmentPreconditionFailed Precondition failed

swagger:response rejectShipmentPreconditionFailed
*/
type RejectShipmentPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewRejectShipmentPreconditionFailed creates RejectShipmentPreconditionFailed with default headers values
func NewRejectShipmentPreconditionFailed() *RejectShipmentPreconditionFailed {

	return &RejectShipmentPreconditionFailed{}
}

// WithPayload adds the payload to the reject shipment precondition failed response
func (o *RejectShipmentPreconditionFailed) WithPayload(payload *ghcmessages.Error) *RejectShipmentPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reject shipment precondition failed response
func (o *RejectShipmentPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RejectShipmentPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RejectShipmentUnprocessableEntityCode is the HTTP code returned for type RejectShipmentUnprocessableEntity
const RejectShipmentUnprocessableEntityCode int = 422

/*
RejectShipmentUnprocessableEntity The payload was unprocessable.

swagger:response rejectShipmentUnprocessableEntity
*/
type RejectShipmentUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewRejectShipmentUnprocessableEntity creates RejectShipmentUnprocessableEntity with default headers values
func NewRejectShipmentUnprocessableEntity() *RejectShipmentUnprocessableEntity {

	return &RejectShipmentUnprocessableEntity{}
}

// WithPayload adds the payload to the reject shipment unprocessable entity response
func (o *RejectShipmentUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *RejectShipmentUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reject shipment unprocessable entity response
func (o *RejectShipmentUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RejectShipmentUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RejectShipmentInternalServerErrorCode is the HTTP code returned for type RejectShipmentInternalServerError
const RejectShipmentInternalServerErrorCode int = 500

/*
RejectShipmentInternalServerError A server error occurred

swagger:response rejectShipmentInternalServerError
*/
type RejectShipmentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewRejectShipmentInternalServerError creates RejectShipmentInternalServerError with default headers values
func NewRejectShipmentInternalServerError() *RejectShipmentInternalServerError {

	return &RejectShipmentInternalServerError{}
}

// WithPayload adds the payload to the reject shipment internal server error response
func (o *RejectShipmentInternalServerError) WithPayload(payload *ghcmessages.Error) *RejectShipmentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reject shipment internal server error response
func (o *RejectShipmentInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RejectShipmentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
