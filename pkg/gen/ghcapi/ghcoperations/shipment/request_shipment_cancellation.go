// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// RequestShipmentCancellationHandlerFunc turns a function with the right signature into a request shipment cancellation handler
type RequestShipmentCancellationHandlerFunc func(RequestShipmentCancellationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RequestShipmentCancellationHandlerFunc) Handle(params RequestShipmentCancellationParams) middleware.Responder {
	return fn(params)
}

// RequestShipmentCancellationHandler interface for that can handle valid request shipment cancellation params
type RequestShipmentCancellationHandler interface {
	Handle(RequestShipmentCancellationParams) middleware.Responder
}

// NewRequestShipmentCancellation creates a new http.Handler for the request shipment cancellation operation
func NewRequestShipmentCancellation(ctx *middleware.Context, handler RequestShipmentCancellationHandler) *RequestShipmentCancellation {
	return &RequestShipmentCancellation{Context: ctx, Handler: handler}
}

/*
	RequestShipmentCancellation swagger:route POST /shipments/{shipmentID}/request-cancellation shipment requestShipmentCancellation

# Requests a shipment cancellation

Requests a shipment cancellation
*/
type RequestShipmentCancellation struct {
	Context *middleware.Context
	Handler RequestShipmentCancellationHandler
}

func (o *RequestShipmentCancellation) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewRequestShipmentCancellationParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
