// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// RequestShipmentReweighHandlerFunc turns a function with the right signature into a request shipment reweigh handler
type RequestShipmentReweighHandlerFunc func(RequestShipmentReweighParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RequestShipmentReweighHandlerFunc) Handle(params RequestShipmentReweighParams) middleware.Responder {
	return fn(params)
}

// RequestShipmentReweighHandler interface for that can handle valid request shipment reweigh params
type RequestShipmentReweighHandler interface {
	Handle(RequestShipmentReweighParams) middleware.Responder
}

// NewRequestShipmentReweigh creates a new http.Handler for the request shipment reweigh operation
func NewRequestShipmentReweigh(ctx *middleware.Context, handler RequestShipmentReweighHandler) *RequestShipmentReweigh {
	return &RequestShipmentReweigh{Context: ctx, Handler: handler}
}

/*
	RequestShipmentReweigh swagger:route POST /shipments/{shipmentID}/request-reweigh shipment reweigh requestShipmentReweigh

# Requests a shipment reweigh

Requests a shipment reweigh
*/
type RequestShipmentReweigh struct {
	Context *middleware.Context
	Handler RequestShipmentReweighHandler
}

func (o *RequestShipmentReweigh) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewRequestShipmentReweighParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
