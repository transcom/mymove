// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// ApproveShipmentsOKCode is the HTTP code returned for type ApproveShipmentsOK
const ApproveShipmentsOKCode int = 200

/*
ApproveShipmentsOK Successfully approved the shipments

swagger:response approveShipmentsOK
*/
type ApproveShipmentsOK struct {

	/*
	  In: Body
	*/
	Payload []*ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewApproveShipmentsOK creates ApproveShipmentsOK with default headers values
func NewApproveShipmentsOK() *ApproveShipmentsOK {

	return &ApproveShipmentsOK{}
}

// WithPayload adds the payload to the approve shipments o k response
func (o *ApproveShipmentsOK) WithPayload(payload []*ghcmessages.MTOShipment) *ApproveShipmentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipments o k response
func (o *ApproveShipmentsOK) SetPayload(payload []*ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ghcmessages.MTOShipment, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ApproveShipmentsForbiddenCode is the HTTP code returned for type ApproveShipmentsForbidden
const ApproveShipmentsForbiddenCode int = 403

/*
ApproveShipmentsForbidden The request was denied

swagger:response approveShipmentsForbidden
*/
type ApproveShipmentsForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentsForbidden creates ApproveShipmentsForbidden with default headers values
func NewApproveShipmentsForbidden() *ApproveShipmentsForbidden {

	return &ApproveShipmentsForbidden{}
}

// WithPayload adds the payload to the approve shipments forbidden response
func (o *ApproveShipmentsForbidden) WithPayload(payload *ghcmessages.Error) *ApproveShipmentsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipments forbidden response
func (o *ApproveShipmentsForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentsNotFoundCode is the HTTP code returned for type ApproveShipmentsNotFound
const ApproveShipmentsNotFoundCode int = 404

/*
ApproveShipmentsNotFound The requested resource wasn't found

swagger:response approveShipmentsNotFound
*/
type ApproveShipmentsNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentsNotFound creates ApproveShipmentsNotFound with default headers values
func NewApproveShipmentsNotFound() *ApproveShipmentsNotFound {

	return &ApproveShipmentsNotFound{}
}

// WithPayload adds the payload to the approve shipments not found response
func (o *ApproveShipmentsNotFound) WithPayload(payload *ghcmessages.Error) *ApproveShipmentsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipments not found response
func (o *ApproveShipmentsNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentsConflictCode is the HTTP code returned for type ApproveShipmentsConflict
const ApproveShipmentsConflictCode int = 409

/*
ApproveShipmentsConflict Conflict error

swagger:response approveShipmentsConflict
*/
type ApproveShipmentsConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentsConflict creates ApproveShipmentsConflict with default headers values
func NewApproveShipmentsConflict() *ApproveShipmentsConflict {

	return &ApproveShipmentsConflict{}
}

// WithPayload adds the payload to the approve shipments conflict response
func (o *ApproveShipmentsConflict) WithPayload(payload *ghcmessages.Error) *ApproveShipmentsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipments conflict response
func (o *ApproveShipmentsConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentsPreconditionFailedCode is the HTTP code returned for type ApproveShipmentsPreconditionFailed
const ApproveShipmentsPreconditionFailedCode int = 412

/*
ApproveShipmentsPreconditionFailed Precondition failed

swagger:response approveShipmentsPreconditionFailed
*/
type ApproveShipmentsPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentsPreconditionFailed creates ApproveShipmentsPreconditionFailed with default headers values
func NewApproveShipmentsPreconditionFailed() *ApproveShipmentsPreconditionFailed {

	return &ApproveShipmentsPreconditionFailed{}
}

// WithPayload adds the payload to the approve shipments precondition failed response
func (o *ApproveShipmentsPreconditionFailed) WithPayload(payload *ghcmessages.Error) *ApproveShipmentsPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipments precondition failed response
func (o *ApproveShipmentsPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentsPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentsUnprocessableEntityCode is the HTTP code returned for type ApproveShipmentsUnprocessableEntity
const ApproveShipmentsUnprocessableEntityCode int = 422

/*
ApproveShipmentsUnprocessableEntity The payload was unprocessable.

swagger:response approveShipmentsUnprocessableEntity
*/
type ApproveShipmentsUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewApproveShipmentsUnprocessableEntity creates ApproveShipmentsUnprocessableEntity with default headers values
func NewApproveShipmentsUnprocessableEntity() *ApproveShipmentsUnprocessableEntity {

	return &ApproveShipmentsUnprocessableEntity{}
}

// WithPayload adds the payload to the approve shipments unprocessable entity response
func (o *ApproveShipmentsUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *ApproveShipmentsUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipments unprocessable entity response
func (o *ApproveShipmentsUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentsInternalServerErrorCode is the HTTP code returned for type ApproveShipmentsInternalServerError
const ApproveShipmentsInternalServerErrorCode int = 500

/*
ApproveShipmentsInternalServerError A server error occurred

swagger:response approveShipmentsInternalServerError
*/
type ApproveShipmentsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentsInternalServerError creates ApproveShipmentsInternalServerError with default headers values
func NewApproveShipmentsInternalServerError() *ApproveShipmentsInternalServerError {

	return &ApproveShipmentsInternalServerError{}
}

// WithPayload adds the payload to the approve shipments internal server error response
func (o *ApproveShipmentsInternalServerError) WithPayload(payload *ghcmessages.Error) *ApproveShipmentsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipments internal server error response
func (o *ApproveShipmentsInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
