// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// ApproveShipmentOKCode is the HTTP code returned for type ApproveShipmentOK
const ApproveShipmentOKCode int = 200

/*
ApproveShipmentOK Successfully approved the shipment

swagger:response approveShipmentOK
*/
type ApproveShipmentOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewApproveShipmentOK creates ApproveShipmentOK with default headers values
func NewApproveShipmentOK() *ApproveShipmentOK {

	return &ApproveShipmentOK{}
}

// WithPayload adds the payload to the approve shipment o k response
func (o *ApproveShipmentOK) WithPayload(payload *ghcmessages.MTOShipment) *ApproveShipmentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipment o k response
func (o *ApproveShipmentOK) SetPayload(payload *ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentForbiddenCode is the HTTP code returned for type ApproveShipmentForbidden
const ApproveShipmentForbiddenCode int = 403

/*
ApproveShipmentForbidden The request was denied

swagger:response approveShipmentForbidden
*/
type ApproveShipmentForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentForbidden creates ApproveShipmentForbidden with default headers values
func NewApproveShipmentForbidden() *ApproveShipmentForbidden {

	return &ApproveShipmentForbidden{}
}

// WithPayload adds the payload to the approve shipment forbidden response
func (o *ApproveShipmentForbidden) WithPayload(payload *ghcmessages.Error) *ApproveShipmentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipment forbidden response
func (o *ApproveShipmentForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentNotFoundCode is the HTTP code returned for type ApproveShipmentNotFound
const ApproveShipmentNotFoundCode int = 404

/*
ApproveShipmentNotFound The requested resource wasn't found

swagger:response approveShipmentNotFound
*/
type ApproveShipmentNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentNotFound creates ApproveShipmentNotFound with default headers values
func NewApproveShipmentNotFound() *ApproveShipmentNotFound {

	return &ApproveShipmentNotFound{}
}

// WithPayload adds the payload to the approve shipment not found response
func (o *ApproveShipmentNotFound) WithPayload(payload *ghcmessages.Error) *ApproveShipmentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipment not found response
func (o *ApproveShipmentNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentConflictCode is the HTTP code returned for type ApproveShipmentConflict
const ApproveShipmentConflictCode int = 409

/*
ApproveShipmentConflict Conflict error

swagger:response approveShipmentConflict
*/
type ApproveShipmentConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentConflict creates ApproveShipmentConflict with default headers values
func NewApproveShipmentConflict() *ApproveShipmentConflict {

	return &ApproveShipmentConflict{}
}

// WithPayload adds the payload to the approve shipment conflict response
func (o *ApproveShipmentConflict) WithPayload(payload *ghcmessages.Error) *ApproveShipmentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipment conflict response
func (o *ApproveShipmentConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentPreconditionFailedCode is the HTTP code returned for type ApproveShipmentPreconditionFailed
const ApproveShipmentPreconditionFailedCode int = 412

/*
ApproveShipmentPreconditionFailed Precondition failed

swagger:response approveShipmentPreconditionFailed
*/
type ApproveShipmentPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentPreconditionFailed creates ApproveShipmentPreconditionFailed with default headers values
func NewApproveShipmentPreconditionFailed() *ApproveShipmentPreconditionFailed {

	return &ApproveShipmentPreconditionFailed{}
}

// WithPayload adds the payload to the approve shipment precondition failed response
func (o *ApproveShipmentPreconditionFailed) WithPayload(payload *ghcmessages.Error) *ApproveShipmentPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipment precondition failed response
func (o *ApproveShipmentPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentUnprocessableEntityCode is the HTTP code returned for type ApproveShipmentUnprocessableEntity
const ApproveShipmentUnprocessableEntityCode int = 422

/*
ApproveShipmentUnprocessableEntity The payload was unprocessable.

swagger:response approveShipmentUnprocessableEntity
*/
type ApproveShipmentUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewApproveShipmentUnprocessableEntity creates ApproveShipmentUnprocessableEntity with default headers values
func NewApproveShipmentUnprocessableEntity() *ApproveShipmentUnprocessableEntity {

	return &ApproveShipmentUnprocessableEntity{}
}

// WithPayload adds the payload to the approve shipment unprocessable entity response
func (o *ApproveShipmentUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *ApproveShipmentUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipment unprocessable entity response
func (o *ApproveShipmentUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveShipmentInternalServerErrorCode is the HTTP code returned for type ApproveShipmentInternalServerError
const ApproveShipmentInternalServerErrorCode int = 500

/*
ApproveShipmentInternalServerError A server error occurred

swagger:response approveShipmentInternalServerError
*/
type ApproveShipmentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveShipmentInternalServerError creates ApproveShipmentInternalServerError with default headers values
func NewApproveShipmentInternalServerError() *ApproveShipmentInternalServerError {

	return &ApproveShipmentInternalServerError{}
}

// WithPayload adds the payload to the approve shipment internal server error response
func (o *ApproveShipmentInternalServerError) WithPayload(payload *ghcmessages.Error) *ApproveShipmentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve shipment internal server error response
func (o *ApproveShipmentInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveShipmentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
