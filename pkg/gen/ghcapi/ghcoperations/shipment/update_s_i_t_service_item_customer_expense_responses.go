// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateSITServiceItemCustomerExpenseOKCode is the HTTP code returned for type UpdateSITServiceItemCustomerExpenseOK
const UpdateSITServiceItemCustomerExpenseOKCode int = 200

/*
UpdateSITServiceItemCustomerExpenseOK Successfully converted to customer expense

swagger:response updateSITServiceItemCustomerExpenseOK
*/
type UpdateSITServiceItemCustomerExpenseOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewUpdateSITServiceItemCustomerExpenseOK creates UpdateSITServiceItemCustomerExpenseOK with default headers values
func NewUpdateSITServiceItemCustomerExpenseOK() *UpdateSITServiceItemCustomerExpenseOK {

	return &UpdateSITServiceItemCustomerExpenseOK{}
}

// WithPayload adds the payload to the update s i t service item customer expense o k response
func (o *UpdateSITServiceItemCustomerExpenseOK) WithPayload(payload *ghcmessages.MTOShipment) *UpdateSITServiceItemCustomerExpenseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update s i t service item customer expense o k response
func (o *UpdateSITServiceItemCustomerExpenseOK) SetPayload(payload *ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSITServiceItemCustomerExpenseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSITServiceItemCustomerExpenseForbiddenCode is the HTTP code returned for type UpdateSITServiceItemCustomerExpenseForbidden
const UpdateSITServiceItemCustomerExpenseForbiddenCode int = 403

/*
UpdateSITServiceItemCustomerExpenseForbidden The request was denied

swagger:response updateSITServiceItemCustomerExpenseForbidden
*/
type UpdateSITServiceItemCustomerExpenseForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateSITServiceItemCustomerExpenseForbidden creates UpdateSITServiceItemCustomerExpenseForbidden with default headers values
func NewUpdateSITServiceItemCustomerExpenseForbidden() *UpdateSITServiceItemCustomerExpenseForbidden {

	return &UpdateSITServiceItemCustomerExpenseForbidden{}
}

// WithPayload adds the payload to the update s i t service item customer expense forbidden response
func (o *UpdateSITServiceItemCustomerExpenseForbidden) WithPayload(payload *ghcmessages.Error) *UpdateSITServiceItemCustomerExpenseForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update s i t service item customer expense forbidden response
func (o *UpdateSITServiceItemCustomerExpenseForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSITServiceItemCustomerExpenseForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSITServiceItemCustomerExpenseNotFoundCode is the HTTP code returned for type UpdateSITServiceItemCustomerExpenseNotFound
const UpdateSITServiceItemCustomerExpenseNotFoundCode int = 404

/*
UpdateSITServiceItemCustomerExpenseNotFound The requested resource wasn't found

swagger:response updateSITServiceItemCustomerExpenseNotFound
*/
type UpdateSITServiceItemCustomerExpenseNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateSITServiceItemCustomerExpenseNotFound creates UpdateSITServiceItemCustomerExpenseNotFound with default headers values
func NewUpdateSITServiceItemCustomerExpenseNotFound() *UpdateSITServiceItemCustomerExpenseNotFound {

	return &UpdateSITServiceItemCustomerExpenseNotFound{}
}

// WithPayload adds the payload to the update s i t service item customer expense not found response
func (o *UpdateSITServiceItemCustomerExpenseNotFound) WithPayload(payload *ghcmessages.Error) *UpdateSITServiceItemCustomerExpenseNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update s i t service item customer expense not found response
func (o *UpdateSITServiceItemCustomerExpenseNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSITServiceItemCustomerExpenseNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSITServiceItemCustomerExpenseConflictCode is the HTTP code returned for type UpdateSITServiceItemCustomerExpenseConflict
const UpdateSITServiceItemCustomerExpenseConflictCode int = 409

/*
UpdateSITServiceItemCustomerExpenseConflict Conflict error

swagger:response updateSITServiceItemCustomerExpenseConflict
*/
type UpdateSITServiceItemCustomerExpenseConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateSITServiceItemCustomerExpenseConflict creates UpdateSITServiceItemCustomerExpenseConflict with default headers values
func NewUpdateSITServiceItemCustomerExpenseConflict() *UpdateSITServiceItemCustomerExpenseConflict {

	return &UpdateSITServiceItemCustomerExpenseConflict{}
}

// WithPayload adds the payload to the update s i t service item customer expense conflict response
func (o *UpdateSITServiceItemCustomerExpenseConflict) WithPayload(payload *ghcmessages.Error) *UpdateSITServiceItemCustomerExpenseConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update s i t service item customer expense conflict response
func (o *UpdateSITServiceItemCustomerExpenseConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSITServiceItemCustomerExpenseConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSITServiceItemCustomerExpensePreconditionFailedCode is the HTTP code returned for type UpdateSITServiceItemCustomerExpensePreconditionFailed
const UpdateSITServiceItemCustomerExpensePreconditionFailedCode int = 412

/*
UpdateSITServiceItemCustomerExpensePreconditionFailed Precondition failed

swagger:response updateSITServiceItemCustomerExpensePreconditionFailed
*/
type UpdateSITServiceItemCustomerExpensePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateSITServiceItemCustomerExpensePreconditionFailed creates UpdateSITServiceItemCustomerExpensePreconditionFailed with default headers values
func NewUpdateSITServiceItemCustomerExpensePreconditionFailed() *UpdateSITServiceItemCustomerExpensePreconditionFailed {

	return &UpdateSITServiceItemCustomerExpensePreconditionFailed{}
}

// WithPayload adds the payload to the update s i t service item customer expense precondition failed response
func (o *UpdateSITServiceItemCustomerExpensePreconditionFailed) WithPayload(payload *ghcmessages.Error) *UpdateSITServiceItemCustomerExpensePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update s i t service item customer expense precondition failed response
func (o *UpdateSITServiceItemCustomerExpensePreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSITServiceItemCustomerExpensePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSITServiceItemCustomerExpenseUnprocessableEntityCode is the HTTP code returned for type UpdateSITServiceItemCustomerExpenseUnprocessableEntity
const UpdateSITServiceItemCustomerExpenseUnprocessableEntityCode int = 422

/*
UpdateSITServiceItemCustomerExpenseUnprocessableEntity The payload was unprocessable.

swagger:response updateSITServiceItemCustomerExpenseUnprocessableEntity
*/
type UpdateSITServiceItemCustomerExpenseUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateSITServiceItemCustomerExpenseUnprocessableEntity creates UpdateSITServiceItemCustomerExpenseUnprocessableEntity with default headers values
func NewUpdateSITServiceItemCustomerExpenseUnprocessableEntity() *UpdateSITServiceItemCustomerExpenseUnprocessableEntity {

	return &UpdateSITServiceItemCustomerExpenseUnprocessableEntity{}
}

// WithPayload adds the payload to the update s i t service item customer expense unprocessable entity response
func (o *UpdateSITServiceItemCustomerExpenseUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *UpdateSITServiceItemCustomerExpenseUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update s i t service item customer expense unprocessable entity response
func (o *UpdateSITServiceItemCustomerExpenseUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSITServiceItemCustomerExpenseUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSITServiceItemCustomerExpenseInternalServerErrorCode is the HTTP code returned for type UpdateSITServiceItemCustomerExpenseInternalServerError
const UpdateSITServiceItemCustomerExpenseInternalServerErrorCode int = 500

/*
UpdateSITServiceItemCustomerExpenseInternalServerError A server error occurred

swagger:response updateSITServiceItemCustomerExpenseInternalServerError
*/
type UpdateSITServiceItemCustomerExpenseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateSITServiceItemCustomerExpenseInternalServerError creates UpdateSITServiceItemCustomerExpenseInternalServerError with default headers values
func NewUpdateSITServiceItemCustomerExpenseInternalServerError() *UpdateSITServiceItemCustomerExpenseInternalServerError {

	return &UpdateSITServiceItemCustomerExpenseInternalServerError{}
}

// WithPayload adds the payload to the update s i t service item customer expense internal server error response
func (o *UpdateSITServiceItemCustomerExpenseInternalServerError) WithPayload(payload *ghcmessages.Error) *UpdateSITServiceItemCustomerExpenseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update s i t service item customer expense internal server error response
func (o *UpdateSITServiceItemCustomerExpenseInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSITServiceItemCustomerExpenseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
