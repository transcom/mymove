// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// DenySITExtensionOKCode is the HTTP code returned for type DenySITExtensionOK
const DenySITExtensionOKCode int = 200

/*
DenySITExtensionOK Successfully denied a SIT extension

swagger:response denySITExtensionOK
*/
type DenySITExtensionOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewDenySITExtensionOK creates DenySITExtensionOK with default headers values
func NewDenySITExtensionOK() *DenySITExtensionOK {

	return &DenySITExtensionOK{}
}

// WithPayload adds the payload to the deny s i t extension o k response
func (o *DenySITExtensionOK) WithPayload(payload *ghcmessages.MTOShipment) *DenySITExtensionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deny s i t extension o k response
func (o *DenySITExtensionOK) SetPayload(payload *ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DenySITExtensionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DenySITExtensionForbiddenCode is the HTTP code returned for type DenySITExtensionForbidden
const DenySITExtensionForbiddenCode int = 403

/*
DenySITExtensionForbidden The request was denied

swagger:response denySITExtensionForbidden
*/
type DenySITExtensionForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewDenySITExtensionForbidden creates DenySITExtensionForbidden with default headers values
func NewDenySITExtensionForbidden() *DenySITExtensionForbidden {

	return &DenySITExtensionForbidden{}
}

// WithPayload adds the payload to the deny s i t extension forbidden response
func (o *DenySITExtensionForbidden) WithPayload(payload *ghcmessages.Error) *DenySITExtensionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deny s i t extension forbidden response
func (o *DenySITExtensionForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DenySITExtensionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DenySITExtensionNotFoundCode is the HTTP code returned for type DenySITExtensionNotFound
const DenySITExtensionNotFoundCode int = 404

/*
DenySITExtensionNotFound The requested resource wasn't found

swagger:response denySITExtensionNotFound
*/
type DenySITExtensionNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewDenySITExtensionNotFound creates DenySITExtensionNotFound with default headers values
func NewDenySITExtensionNotFound() *DenySITExtensionNotFound {

	return &DenySITExtensionNotFound{}
}

// WithPayload adds the payload to the deny s i t extension not found response
func (o *DenySITExtensionNotFound) WithPayload(payload *ghcmessages.Error) *DenySITExtensionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deny s i t extension not found response
func (o *DenySITExtensionNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DenySITExtensionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DenySITExtensionConflictCode is the HTTP code returned for type DenySITExtensionConflict
const DenySITExtensionConflictCode int = 409

/*
DenySITExtensionConflict Conflict error

swagger:response denySITExtensionConflict
*/
type DenySITExtensionConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewDenySITExtensionConflict creates DenySITExtensionConflict with default headers values
func NewDenySITExtensionConflict() *DenySITExtensionConflict {

	return &DenySITExtensionConflict{}
}

// WithPayload adds the payload to the deny s i t extension conflict response
func (o *DenySITExtensionConflict) WithPayload(payload *ghcmessages.Error) *DenySITExtensionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deny s i t extension conflict response
func (o *DenySITExtensionConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DenySITExtensionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DenySITExtensionPreconditionFailedCode is the HTTP code returned for type DenySITExtensionPreconditionFailed
const DenySITExtensionPreconditionFailedCode int = 412

/*
DenySITExtensionPreconditionFailed Precondition failed

swagger:response denySITExtensionPreconditionFailed
*/
type DenySITExtensionPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewDenySITExtensionPreconditionFailed creates DenySITExtensionPreconditionFailed with default headers values
func NewDenySITExtensionPreconditionFailed() *DenySITExtensionPreconditionFailed {

	return &DenySITExtensionPreconditionFailed{}
}

// WithPayload adds the payload to the deny s i t extension precondition failed response
func (o *DenySITExtensionPreconditionFailed) WithPayload(payload *ghcmessages.Error) *DenySITExtensionPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deny s i t extension precondition failed response
func (o *DenySITExtensionPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DenySITExtensionPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DenySITExtensionUnprocessableEntityCode is the HTTP code returned for type DenySITExtensionUnprocessableEntity
const DenySITExtensionUnprocessableEntityCode int = 422

/*
DenySITExtensionUnprocessableEntity The payload was unprocessable.

swagger:response denySITExtensionUnprocessableEntity
*/
type DenySITExtensionUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewDenySITExtensionUnprocessableEntity creates DenySITExtensionUnprocessableEntity with default headers values
func NewDenySITExtensionUnprocessableEntity() *DenySITExtensionUnprocessableEntity {

	return &DenySITExtensionUnprocessableEntity{}
}

// WithPayload adds the payload to the deny s i t extension unprocessable entity response
func (o *DenySITExtensionUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *DenySITExtensionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deny s i t extension unprocessable entity response
func (o *DenySITExtensionUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DenySITExtensionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DenySITExtensionInternalServerErrorCode is the HTTP code returned for type DenySITExtensionInternalServerError
const DenySITExtensionInternalServerErrorCode int = 500

/*
DenySITExtensionInternalServerError A server error occurred

swagger:response denySITExtensionInternalServerError
*/
type DenySITExtensionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewDenySITExtensionInternalServerError creates DenySITExtensionInternalServerError with default headers values
func NewDenySITExtensionInternalServerError() *DenySITExtensionInternalServerError {

	return &DenySITExtensionInternalServerError{}
}

// WithPayload adds the payload to the deny s i t extension internal server error response
func (o *DenySITExtensionInternalServerError) WithPayload(payload *ghcmessages.Error) *DenySITExtensionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deny s i t extension internal server error response
func (o *DenySITExtensionInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DenySITExtensionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
