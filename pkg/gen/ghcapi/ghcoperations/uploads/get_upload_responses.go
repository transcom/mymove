// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetUploadOKCode is the HTTP code returned for type GetUploadOK
const GetUploadOKCode int = 200

/*
GetUploadOK Successfully retrieved upload

swagger:response getUploadOK
*/
type GetUploadOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Upload `json:"body,omitempty"`
}

// NewGetUploadOK creates GetUploadOK with default headers values
func NewGetUploadOK() *GetUploadOK {

	return &GetUploadOK{}
}

// WithPayload adds the payload to the get upload o k response
func (o *GetUploadOK) WithPayload(payload *ghcmessages.Upload) *GetUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload o k response
func (o *GetUploadOK) SetPayload(payload *ghcmessages.Upload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadBadRequestCode is the HTTP code returned for type GetUploadBadRequest
const GetUploadBadRequestCode int = 400

/*
GetUploadBadRequest The request payload is invalid

swagger:response getUploadBadRequest
*/
type GetUploadBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetUploadBadRequest creates GetUploadBadRequest with default headers values
func NewGetUploadBadRequest() *GetUploadBadRequest {

	return &GetUploadBadRequest{}
}

// WithPayload adds the payload to the get upload bad request response
func (o *GetUploadBadRequest) WithPayload(payload *ghcmessages.Error) *GetUploadBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload bad request response
func (o *GetUploadBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadUnauthorizedCode is the HTTP code returned for type GetUploadUnauthorized
const GetUploadUnauthorizedCode int = 401

/*
GetUploadUnauthorized The request was denied

swagger:response getUploadUnauthorized
*/
type GetUploadUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetUploadUnauthorized creates GetUploadUnauthorized with default headers values
func NewGetUploadUnauthorized() *GetUploadUnauthorized {

	return &GetUploadUnauthorized{}
}

// WithPayload adds the payload to the get upload unauthorized response
func (o *GetUploadUnauthorized) WithPayload(payload *ghcmessages.Error) *GetUploadUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload unauthorized response
func (o *GetUploadUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadForbiddenCode is the HTTP code returned for type GetUploadForbidden
const GetUploadForbiddenCode int = 403

/*
GetUploadForbidden The request was denied

swagger:response getUploadForbidden
*/
type GetUploadForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetUploadForbidden creates GetUploadForbidden with default headers values
func NewGetUploadForbidden() *GetUploadForbidden {

	return &GetUploadForbidden{}
}

// WithPayload adds the payload to the get upload forbidden response
func (o *GetUploadForbidden) WithPayload(payload *ghcmessages.Error) *GetUploadForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload forbidden response
func (o *GetUploadForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadNotFoundCode is the HTTP code returned for type GetUploadNotFound
const GetUploadNotFoundCode int = 404

/*
GetUploadNotFound The requested resource wasn't found

swagger:response getUploadNotFound
*/
type GetUploadNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetUploadNotFound creates GetUploadNotFound with default headers values
func NewGetUploadNotFound() *GetUploadNotFound {

	return &GetUploadNotFound{}
}

// WithPayload adds the payload to the get upload not found response
func (o *GetUploadNotFound) WithPayload(payload *ghcmessages.Error) *GetUploadNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload not found response
func (o *GetUploadNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadInternalServerErrorCode is the HTTP code returned for type GetUploadInternalServerError
const GetUploadInternalServerErrorCode int = 500

/*
GetUploadInternalServerError A server error occurred

swagger:response getUploadInternalServerError
*/
type GetUploadInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetUploadInternalServerError creates GetUploadInternalServerError with default headers values
func NewGetUploadInternalServerError() *GetUploadInternalServerError {

	return &GetUploadInternalServerError{}
}

// WithPayload adds the payload to the get upload internal server error response
func (o *GetUploadInternalServerError) WithPayload(payload *ghcmessages.Error) *GetUploadInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload internal server error response
func (o *GetUploadInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
