// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetUploadStatusOKCode is the HTTP code returned for type GetUploadStatusOK
const GetUploadStatusOKCode int = 200

/*
GetUploadStatusOK the requested upload status

swagger:response getUploadStatusOK
*/
type GetUploadStatusOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetUploadStatusOK creates GetUploadStatusOK with default headers values
func NewGetUploadStatusOK() *GetUploadStatusOK {

	return &GetUploadStatusOK{}
}

// WithPayload adds the payload to the get upload status o k response
func (o *GetUploadStatusOK) WithPayload(payload string) *GetUploadStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload status o k response
func (o *GetUploadStatusOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetUploadStatusBadRequestCode is the HTTP code returned for type GetUploadStatusBadRequest
const GetUploadStatusBadRequestCode int = 400

/*
GetUploadStatusBadRequest invalid request

swagger:response getUploadStatusBadRequest
*/
type GetUploadStatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.InvalidRequestResponsePayload `json:"body,omitempty"`
}

// NewGetUploadStatusBadRequest creates GetUploadStatusBadRequest with default headers values
func NewGetUploadStatusBadRequest() *GetUploadStatusBadRequest {

	return &GetUploadStatusBadRequest{}
}

// WithPayload adds the payload to the get upload status bad request response
func (o *GetUploadStatusBadRequest) WithPayload(payload *ghcmessages.InvalidRequestResponsePayload) *GetUploadStatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload status bad request response
func (o *GetUploadStatusBadRequest) SetPayload(payload *ghcmessages.InvalidRequestResponsePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadStatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadStatusForbiddenCode is the HTTP code returned for type GetUploadStatusForbidden
const GetUploadStatusForbiddenCode int = 403

/*
GetUploadStatusForbidden not authorized

swagger:response getUploadStatusForbidden
*/
type GetUploadStatusForbidden struct {
}

// NewGetUploadStatusForbidden creates GetUploadStatusForbidden with default headers values
func NewGetUploadStatusForbidden() *GetUploadStatusForbidden {

	return &GetUploadStatusForbidden{}
}

// WriteResponse to the client
func (o *GetUploadStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetUploadStatusNotFoundCode is the HTTP code returned for type GetUploadStatusNotFound
const GetUploadStatusNotFoundCode int = 404

/*
GetUploadStatusNotFound not found

swagger:response getUploadStatusNotFound
*/
type GetUploadStatusNotFound struct {
}

// NewGetUploadStatusNotFound creates GetUploadStatusNotFound with default headers values
func NewGetUploadStatusNotFound() *GetUploadStatusNotFound {

	return &GetUploadStatusNotFound{}
}

// WriteResponse to the client
func (o *GetUploadStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetUploadStatusInternalServerErrorCode is the HTTP code returned for type GetUploadStatusInternalServerError
const GetUploadStatusInternalServerErrorCode int = 500

/*
GetUploadStatusInternalServerError server error

swagger:response getUploadStatusInternalServerError
*/
type GetUploadStatusInternalServerError struct {
}

// NewGetUploadStatusInternalServerError creates GetUploadStatusInternalServerError with default headers values
func NewGetUploadStatusInternalServerError() *GetUploadStatusInternalServerError {

	return &GetUploadStatusInternalServerError{}
}

// WriteResponse to the client
func (o *GetUploadStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
