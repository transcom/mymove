// Code generated by go-swagger; DO NOT EDIT.

package calendar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// IsDateWeekendHolidayOKCode is the HTTP code returned for type IsDateWeekendHolidayOK
const IsDateWeekendHolidayOKCode int = 200

/*
IsDateWeekendHolidayOK Successfully determine if given date is weekend and/or holiday for given country.

swagger:response isDateWeekendHolidayOK
*/
type IsDateWeekendHolidayOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.IsDateWeekendHolidayInfo `json:"body,omitempty"`
}

// NewIsDateWeekendHolidayOK creates IsDateWeekendHolidayOK with default headers values
func NewIsDateWeekendHolidayOK() *IsDateWeekendHolidayOK {

	return &IsDateWeekendHolidayOK{}
}

// WithPayload adds the payload to the is date weekend holiday o k response
func (o *IsDateWeekendHolidayOK) WithPayload(payload *ghcmessages.IsDateWeekendHolidayInfo) *IsDateWeekendHolidayOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is date weekend holiday o k response
func (o *IsDateWeekendHolidayOK) SetPayload(payload *ghcmessages.IsDateWeekendHolidayInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsDateWeekendHolidayOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsDateWeekendHolidayBadRequestCode is the HTTP code returned for type IsDateWeekendHolidayBadRequest
const IsDateWeekendHolidayBadRequestCode int = 400

/*
IsDateWeekendHolidayBadRequest The request payload is invalid

swagger:response isDateWeekendHolidayBadRequest
*/
type IsDateWeekendHolidayBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewIsDateWeekendHolidayBadRequest creates IsDateWeekendHolidayBadRequest with default headers values
func NewIsDateWeekendHolidayBadRequest() *IsDateWeekendHolidayBadRequest {

	return &IsDateWeekendHolidayBadRequest{}
}

// WithPayload adds the payload to the is date weekend holiday bad request response
func (o *IsDateWeekendHolidayBadRequest) WithPayload(payload *ghcmessages.Error) *IsDateWeekendHolidayBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is date weekend holiday bad request response
func (o *IsDateWeekendHolidayBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsDateWeekendHolidayBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsDateWeekendHolidayUnauthorizedCode is the HTTP code returned for type IsDateWeekendHolidayUnauthorized
const IsDateWeekendHolidayUnauthorizedCode int = 401

/*
IsDateWeekendHolidayUnauthorized The request was denied

swagger:response isDateWeekendHolidayUnauthorized
*/
type IsDateWeekendHolidayUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewIsDateWeekendHolidayUnauthorized creates IsDateWeekendHolidayUnauthorized with default headers values
func NewIsDateWeekendHolidayUnauthorized() *IsDateWeekendHolidayUnauthorized {

	return &IsDateWeekendHolidayUnauthorized{}
}

// WithPayload adds the payload to the is date weekend holiday unauthorized response
func (o *IsDateWeekendHolidayUnauthorized) WithPayload(payload *ghcmessages.Error) *IsDateWeekendHolidayUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is date weekend holiday unauthorized response
func (o *IsDateWeekendHolidayUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsDateWeekendHolidayUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsDateWeekendHolidayNotFoundCode is the HTTP code returned for type IsDateWeekendHolidayNotFound
const IsDateWeekendHolidayNotFoundCode int = 404

/*
IsDateWeekendHolidayNotFound The requested resource wasn't found

swagger:response isDateWeekendHolidayNotFound
*/
type IsDateWeekendHolidayNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewIsDateWeekendHolidayNotFound creates IsDateWeekendHolidayNotFound with default headers values
func NewIsDateWeekendHolidayNotFound() *IsDateWeekendHolidayNotFound {

	return &IsDateWeekendHolidayNotFound{}
}

// WithPayload adds the payload to the is date weekend holiday not found response
func (o *IsDateWeekendHolidayNotFound) WithPayload(payload *ghcmessages.Error) *IsDateWeekendHolidayNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is date weekend holiday not found response
func (o *IsDateWeekendHolidayNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsDateWeekendHolidayNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IsDateWeekendHolidayInternalServerErrorCode is the HTTP code returned for type IsDateWeekendHolidayInternalServerError
const IsDateWeekendHolidayInternalServerErrorCode int = 500

/*
IsDateWeekendHolidayInternalServerError A server error occurred

swagger:response isDateWeekendHolidayInternalServerError
*/
type IsDateWeekendHolidayInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewIsDateWeekendHolidayInternalServerError creates IsDateWeekendHolidayInternalServerError with default headers values
func NewIsDateWeekendHolidayInternalServerError() *IsDateWeekendHolidayInternalServerError {

	return &IsDateWeekendHolidayInternalServerError{}
}

// WithPayload adds the payload to the is date weekend holiday internal server error response
func (o *IsDateWeekendHolidayInternalServerError) WithPayload(payload *ghcmessages.Error) *IsDateWeekendHolidayInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is date weekend holiday internal server error response
func (o *IsDateWeekendHolidayInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsDateWeekendHolidayInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
