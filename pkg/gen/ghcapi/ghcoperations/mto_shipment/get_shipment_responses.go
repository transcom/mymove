// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetShipmentOKCode is the HTTP code returned for type GetShipmentOK
const GetShipmentOKCode int = 200

/*
GetShipmentOK Successfully fetched the shipment

swagger:response getShipmentOK
*/
type GetShipmentOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewGetShipmentOK creates GetShipmentOK with default headers values
func NewGetShipmentOK() *GetShipmentOK {

	return &GetShipmentOK{}
}

// WithPayload adds the payload to the get shipment o k response
func (o *GetShipmentOK) WithPayload(payload *ghcmessages.MTOShipment) *GetShipmentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shipment o k response
func (o *GetShipmentOK) SetPayload(payload *ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShipmentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShipmentBadRequestCode is the HTTP code returned for type GetShipmentBadRequest
const GetShipmentBadRequestCode int = 400

/*
GetShipmentBadRequest The request payload is invalid

swagger:response getShipmentBadRequest
*/
type GetShipmentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetShipmentBadRequest creates GetShipmentBadRequest with default headers values
func NewGetShipmentBadRequest() *GetShipmentBadRequest {

	return &GetShipmentBadRequest{}
}

// WithPayload adds the payload to the get shipment bad request response
func (o *GetShipmentBadRequest) WithPayload(payload *ghcmessages.Error) *GetShipmentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shipment bad request response
func (o *GetShipmentBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShipmentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShipmentForbiddenCode is the HTTP code returned for type GetShipmentForbidden
const GetShipmentForbiddenCode int = 403

/*
GetShipmentForbidden The request was denied

swagger:response getShipmentForbidden
*/
type GetShipmentForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetShipmentForbidden creates GetShipmentForbidden with default headers values
func NewGetShipmentForbidden() *GetShipmentForbidden {

	return &GetShipmentForbidden{}
}

// WithPayload adds the payload to the get shipment forbidden response
func (o *GetShipmentForbidden) WithPayload(payload *ghcmessages.Error) *GetShipmentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shipment forbidden response
func (o *GetShipmentForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShipmentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShipmentNotFoundCode is the HTTP code returned for type GetShipmentNotFound
const GetShipmentNotFoundCode int = 404

/*
GetShipmentNotFound The requested resource wasn't found

swagger:response getShipmentNotFound
*/
type GetShipmentNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetShipmentNotFound creates GetShipmentNotFound with default headers values
func NewGetShipmentNotFound() *GetShipmentNotFound {

	return &GetShipmentNotFound{}
}

// WithPayload adds the payload to the get shipment not found response
func (o *GetShipmentNotFound) WithPayload(payload *ghcmessages.Error) *GetShipmentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shipment not found response
func (o *GetShipmentNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShipmentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShipmentUnprocessableEntityCode is the HTTP code returned for type GetShipmentUnprocessableEntity
const GetShipmentUnprocessableEntityCode int = 422

/*
GetShipmentUnprocessableEntity The payload was unprocessable.

swagger:response getShipmentUnprocessableEntity
*/
type GetShipmentUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewGetShipmentUnprocessableEntity creates GetShipmentUnprocessableEntity with default headers values
func NewGetShipmentUnprocessableEntity() *GetShipmentUnprocessableEntity {

	return &GetShipmentUnprocessableEntity{}
}

// WithPayload adds the payload to the get shipment unprocessable entity response
func (o *GetShipmentUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *GetShipmentUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shipment unprocessable entity response
func (o *GetShipmentUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShipmentUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShipmentInternalServerErrorCode is the HTTP code returned for type GetShipmentInternalServerError
const GetShipmentInternalServerErrorCode int = 500

/*
GetShipmentInternalServerError A server error occurred

swagger:response getShipmentInternalServerError
*/
type GetShipmentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetShipmentInternalServerError creates GetShipmentInternalServerError with default headers values
func NewGetShipmentInternalServerError() *GetShipmentInternalServerError {

	return &GetShipmentInternalServerError{}
}

// WithPayload adds the payload to the get shipment internal server error response
func (o *GetShipmentInternalServerError) WithPayload(payload *ghcmessages.Error) *GetShipmentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shipment internal server error response
func (o *GetShipmentInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShipmentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
