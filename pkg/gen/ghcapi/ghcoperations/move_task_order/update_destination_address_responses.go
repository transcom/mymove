// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	ghcmessages "github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateDestinationAddressOKCode is the HTTP code returned for type UpdateDestinationAddressOK
const UpdateDestinationAddressOKCode int = 200

/*UpdateDestinationAddressOK Successfully retrieved move task order

swagger:response updateDestinationAddressOK
*/
type UpdateDestinationAddressOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MoveTaskOrder `json:"body,omitempty"`
}

// NewUpdateDestinationAddressOK creates UpdateDestinationAddressOK with default headers values
func NewUpdateDestinationAddressOK() *UpdateDestinationAddressOK {

	return &UpdateDestinationAddressOK{}
}

// WithPayload adds the payload to the update destination address o k response
func (o *UpdateDestinationAddressOK) WithPayload(payload *ghcmessages.MoveTaskOrder) *UpdateDestinationAddressOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update destination address o k response
func (o *UpdateDestinationAddressOK) SetPayload(payload *ghcmessages.MoveTaskOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDestinationAddressOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDestinationAddressBadRequestCode is the HTTP code returned for type UpdateDestinationAddressBadRequest
const UpdateDestinationAddressBadRequestCode int = 400

/*UpdateDestinationAddressBadRequest The request payload is invalid

swagger:response updateDestinationAddressBadRequest
*/
type UpdateDestinationAddressBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateDestinationAddressBadRequest creates UpdateDestinationAddressBadRequest with default headers values
func NewUpdateDestinationAddressBadRequest() *UpdateDestinationAddressBadRequest {

	return &UpdateDestinationAddressBadRequest{}
}

// WithPayload adds the payload to the update destination address bad request response
func (o *UpdateDestinationAddressBadRequest) WithPayload(payload interface{}) *UpdateDestinationAddressBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update destination address bad request response
func (o *UpdateDestinationAddressBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDestinationAddressBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateDestinationAddressUnauthorizedCode is the HTTP code returned for type UpdateDestinationAddressUnauthorized
const UpdateDestinationAddressUnauthorizedCode int = 401

/*UpdateDestinationAddressUnauthorized The request was denied

swagger:response updateDestinationAddressUnauthorized
*/
type UpdateDestinationAddressUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateDestinationAddressUnauthorized creates UpdateDestinationAddressUnauthorized with default headers values
func NewUpdateDestinationAddressUnauthorized() *UpdateDestinationAddressUnauthorized {

	return &UpdateDestinationAddressUnauthorized{}
}

// WithPayload adds the payload to the update destination address unauthorized response
func (o *UpdateDestinationAddressUnauthorized) WithPayload(payload interface{}) *UpdateDestinationAddressUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update destination address unauthorized response
func (o *UpdateDestinationAddressUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDestinationAddressUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateDestinationAddressForbiddenCode is the HTTP code returned for type UpdateDestinationAddressForbidden
const UpdateDestinationAddressForbiddenCode int = 403

/*UpdateDestinationAddressForbidden The request was denied

swagger:response updateDestinationAddressForbidden
*/
type UpdateDestinationAddressForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateDestinationAddressForbidden creates UpdateDestinationAddressForbidden with default headers values
func NewUpdateDestinationAddressForbidden() *UpdateDestinationAddressForbidden {

	return &UpdateDestinationAddressForbidden{}
}

// WithPayload adds the payload to the update destination address forbidden response
func (o *UpdateDestinationAddressForbidden) WithPayload(payload interface{}) *UpdateDestinationAddressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update destination address forbidden response
func (o *UpdateDestinationAddressForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDestinationAddressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateDestinationAddressNotFoundCode is the HTTP code returned for type UpdateDestinationAddressNotFound
const UpdateDestinationAddressNotFoundCode int = 404

/*UpdateDestinationAddressNotFound The requested resource wasn't found

swagger:response updateDestinationAddressNotFound
*/
type UpdateDestinationAddressNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateDestinationAddressNotFound creates UpdateDestinationAddressNotFound with default headers values
func NewUpdateDestinationAddressNotFound() *UpdateDestinationAddressNotFound {

	return &UpdateDestinationAddressNotFound{}
}

// WithPayload adds the payload to the update destination address not found response
func (o *UpdateDestinationAddressNotFound) WithPayload(payload interface{}) *UpdateDestinationAddressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update destination address not found response
func (o *UpdateDestinationAddressNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDestinationAddressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateDestinationAddressInternalServerErrorCode is the HTTP code returned for type UpdateDestinationAddressInternalServerError
const UpdateDestinationAddressInternalServerErrorCode int = 500

/*UpdateDestinationAddressInternalServerError A server error occurred

swagger:response updateDestinationAddressInternalServerError
*/
type UpdateDestinationAddressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateDestinationAddressInternalServerError creates UpdateDestinationAddressInternalServerError with default headers values
func NewUpdateDestinationAddressInternalServerError() *UpdateDestinationAddressInternalServerError {

	return &UpdateDestinationAddressInternalServerError{}
}

// WithPayload adds the payload to the update destination address internal server error response
func (o *UpdateDestinationAddressInternalServerError) WithPayload(payload interface{}) *UpdateDestinationAddressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update destination address internal server error response
func (o *UpdateDestinationAddressInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDestinationAddressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
