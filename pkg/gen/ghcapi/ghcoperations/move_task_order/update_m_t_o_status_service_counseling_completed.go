// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateMTOStatusServiceCounselingCompletedHandlerFunc turns a function with the right signature into a update m t o status service counseling completed handler
type UpdateMTOStatusServiceCounselingCompletedHandlerFunc func(UpdateMTOStatusServiceCounselingCompletedParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMTOStatusServiceCounselingCompletedHandlerFunc) Handle(params UpdateMTOStatusServiceCounselingCompletedParams) middleware.Responder {
	return fn(params)
}

// UpdateMTOStatusServiceCounselingCompletedHandler interface for that can handle valid update m t o status service counseling completed params
type UpdateMTOStatusServiceCounselingCompletedHandler interface {
	Handle(UpdateMTOStatusServiceCounselingCompletedParams) middleware.Responder
}

// NewUpdateMTOStatusServiceCounselingCompleted creates a new http.Handler for the update m t o status service counseling completed operation
func NewUpdateMTOStatusServiceCounselingCompleted(ctx *middleware.Context, handler UpdateMTOStatusServiceCounselingCompletedHandler) *UpdateMTOStatusServiceCounselingCompleted {
	return &UpdateMTOStatusServiceCounselingCompleted{Context: ctx, Handler: handler}
}

/*UpdateMTOStatusServiceCounselingCompleted swagger:route PATCH /move-task-orders/{moveTaskOrderID}/status/service-counseling-completed moveTaskOrder updateMTOStatusServiceCounselingCompleted

Changes move (move task order) status to service counseling completed

Changes move (move task order) status to service counseling completed

*/
type UpdateMTOStatusServiceCounselingCompleted struct {
	Context *middleware.Context
	Handler UpdateMTOStatusServiceCounselingCompletedHandler
}

func (o *UpdateMTOStatusServiceCounselingCompleted) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateMTOStatusServiceCounselingCompletedParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
