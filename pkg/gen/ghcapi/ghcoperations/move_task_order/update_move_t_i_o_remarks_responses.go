// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateMoveTIORemarksOKCode is the HTTP code returned for type UpdateMoveTIORemarksOK
const UpdateMoveTIORemarksOKCode int = 200

/*
UpdateMoveTIORemarksOK Successfully updated move task order tioRemarks field

swagger:response updateMoveTIORemarksOK
*/
type UpdateMoveTIORemarksOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Move `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksOK creates UpdateMoveTIORemarksOK with default headers values
func NewUpdateMoveTIORemarksOK() *UpdateMoveTIORemarksOK {

	return &UpdateMoveTIORemarksOK{}
}

// WithPayload adds the payload to the update move t i o remarks o k response
func (o *UpdateMoveTIORemarksOK) WithPayload(payload *ghcmessages.Move) *UpdateMoveTIORemarksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks o k response
func (o *UpdateMoveTIORemarksOK) SetPayload(payload *ghcmessages.Move) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksBadRequestCode is the HTTP code returned for type UpdateMoveTIORemarksBadRequest
const UpdateMoveTIORemarksBadRequestCode int = 400

/*
UpdateMoveTIORemarksBadRequest The request payload is invalid

swagger:response updateMoveTIORemarksBadRequest
*/
type UpdateMoveTIORemarksBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksBadRequest creates UpdateMoveTIORemarksBadRequest with default headers values
func NewUpdateMoveTIORemarksBadRequest() *UpdateMoveTIORemarksBadRequest {

	return &UpdateMoveTIORemarksBadRequest{}
}

// WithPayload adds the payload to the update move t i o remarks bad request response
func (o *UpdateMoveTIORemarksBadRequest) WithPayload(payload *ghcmessages.Error) *UpdateMoveTIORemarksBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks bad request response
func (o *UpdateMoveTIORemarksBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksUnauthorizedCode is the HTTP code returned for type UpdateMoveTIORemarksUnauthorized
const UpdateMoveTIORemarksUnauthorizedCode int = 401

/*
UpdateMoveTIORemarksUnauthorized The request was denied

swagger:response updateMoveTIORemarksUnauthorized
*/
type UpdateMoveTIORemarksUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksUnauthorized creates UpdateMoveTIORemarksUnauthorized with default headers values
func NewUpdateMoveTIORemarksUnauthorized() *UpdateMoveTIORemarksUnauthorized {

	return &UpdateMoveTIORemarksUnauthorized{}
}

// WithPayload adds the payload to the update move t i o remarks unauthorized response
func (o *UpdateMoveTIORemarksUnauthorized) WithPayload(payload *ghcmessages.Error) *UpdateMoveTIORemarksUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks unauthorized response
func (o *UpdateMoveTIORemarksUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksForbiddenCode is the HTTP code returned for type UpdateMoveTIORemarksForbidden
const UpdateMoveTIORemarksForbiddenCode int = 403

/*
UpdateMoveTIORemarksForbidden The request was denied

swagger:response updateMoveTIORemarksForbidden
*/
type UpdateMoveTIORemarksForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksForbidden creates UpdateMoveTIORemarksForbidden with default headers values
func NewUpdateMoveTIORemarksForbidden() *UpdateMoveTIORemarksForbidden {

	return &UpdateMoveTIORemarksForbidden{}
}

// WithPayload adds the payload to the update move t i o remarks forbidden response
func (o *UpdateMoveTIORemarksForbidden) WithPayload(payload *ghcmessages.Error) *UpdateMoveTIORemarksForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks forbidden response
func (o *UpdateMoveTIORemarksForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksNotFoundCode is the HTTP code returned for type UpdateMoveTIORemarksNotFound
const UpdateMoveTIORemarksNotFoundCode int = 404

/*
UpdateMoveTIORemarksNotFound The requested resource wasn't found

swagger:response updateMoveTIORemarksNotFound
*/
type UpdateMoveTIORemarksNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksNotFound creates UpdateMoveTIORemarksNotFound with default headers values
func NewUpdateMoveTIORemarksNotFound() *UpdateMoveTIORemarksNotFound {

	return &UpdateMoveTIORemarksNotFound{}
}

// WithPayload adds the payload to the update move t i o remarks not found response
func (o *UpdateMoveTIORemarksNotFound) WithPayload(payload *ghcmessages.Error) *UpdateMoveTIORemarksNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks not found response
func (o *UpdateMoveTIORemarksNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksConflictCode is the HTTP code returned for type UpdateMoveTIORemarksConflict
const UpdateMoveTIORemarksConflictCode int = 409

/*
UpdateMoveTIORemarksConflict Conflict error

swagger:response updateMoveTIORemarksConflict
*/
type UpdateMoveTIORemarksConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksConflict creates UpdateMoveTIORemarksConflict with default headers values
func NewUpdateMoveTIORemarksConflict() *UpdateMoveTIORemarksConflict {

	return &UpdateMoveTIORemarksConflict{}
}

// WithPayload adds the payload to the update move t i o remarks conflict response
func (o *UpdateMoveTIORemarksConflict) WithPayload(payload *ghcmessages.Error) *UpdateMoveTIORemarksConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks conflict response
func (o *UpdateMoveTIORemarksConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksPreconditionFailedCode is the HTTP code returned for type UpdateMoveTIORemarksPreconditionFailed
const UpdateMoveTIORemarksPreconditionFailedCode int = 412

/*
UpdateMoveTIORemarksPreconditionFailed Precondition failed

swagger:response updateMoveTIORemarksPreconditionFailed
*/
type UpdateMoveTIORemarksPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksPreconditionFailed creates UpdateMoveTIORemarksPreconditionFailed with default headers values
func NewUpdateMoveTIORemarksPreconditionFailed() *UpdateMoveTIORemarksPreconditionFailed {

	return &UpdateMoveTIORemarksPreconditionFailed{}
}

// WithPayload adds the payload to the update move t i o remarks precondition failed response
func (o *UpdateMoveTIORemarksPreconditionFailed) WithPayload(payload *ghcmessages.Error) *UpdateMoveTIORemarksPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks precondition failed response
func (o *UpdateMoveTIORemarksPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksUnprocessableEntityCode is the HTTP code returned for type UpdateMoveTIORemarksUnprocessableEntity
const UpdateMoveTIORemarksUnprocessableEntityCode int = 422

/*
UpdateMoveTIORemarksUnprocessableEntity The payload was unprocessable.

swagger:response updateMoveTIORemarksUnprocessableEntity
*/
type UpdateMoveTIORemarksUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksUnprocessableEntity creates UpdateMoveTIORemarksUnprocessableEntity with default headers values
func NewUpdateMoveTIORemarksUnprocessableEntity() *UpdateMoveTIORemarksUnprocessableEntity {

	return &UpdateMoveTIORemarksUnprocessableEntity{}
}

// WithPayload adds the payload to the update move t i o remarks unprocessable entity response
func (o *UpdateMoveTIORemarksUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *UpdateMoveTIORemarksUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks unprocessable entity response
func (o *UpdateMoveTIORemarksUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMoveTIORemarksInternalServerErrorCode is the HTTP code returned for type UpdateMoveTIORemarksInternalServerError
const UpdateMoveTIORemarksInternalServerErrorCode int = 500

/*
UpdateMoveTIORemarksInternalServerError A server error occurred

swagger:response updateMoveTIORemarksInternalServerError
*/
type UpdateMoveTIORemarksInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMoveTIORemarksInternalServerError creates UpdateMoveTIORemarksInternalServerError with default headers values
func NewUpdateMoveTIORemarksInternalServerError() *UpdateMoveTIORemarksInternalServerError {

	return &UpdateMoveTIORemarksInternalServerError{}
}

// WithPayload adds the payload to the update move t i o remarks internal server error response
func (o *UpdateMoveTIORemarksInternalServerError) WithPayload(payload *ghcmessages.Error) *UpdateMoveTIORemarksInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update move t i o remarks internal server error response
func (o *UpdateMoveTIORemarksInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMoveTIORemarksInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
