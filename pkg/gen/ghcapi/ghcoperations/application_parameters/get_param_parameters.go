// Code generated by go-swagger; DO NOT EDIT.

package application_parameters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
)

// NewGetParamParams creates a new GetParamParams object
//
// There are no default values defined in the spec.
func NewGetParamParams() GetParamParams {

	return GetParamParams{}
}

// GetParamParams contains all the bound params for the get param operation
// typically these are obtained from a http.Request
//
// swagger:parameters getParam
type GetParamParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Parameter Name
	  Required: true
	  In: path
	*/
	ParameterName string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetParamParams() beforehand.
func (o *GetParamParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rParameterName, rhkParameterName, _ := route.Params.GetOK("parameterName")
	if err := o.bindParameterName(rParameterName, rhkParameterName, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParameterName binds and validates parameter ParameterName from path.
func (o *GetParamParams) bindParameterName(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.ParameterName = raw

	return nil
}
