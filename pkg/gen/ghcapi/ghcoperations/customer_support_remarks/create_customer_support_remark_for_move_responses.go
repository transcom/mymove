// Code generated by go-swagger; DO NOT EDIT.

package customer_support_remarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// CreateCustomerSupportRemarkForMoveOKCode is the HTTP code returned for type CreateCustomerSupportRemarkForMoveOK
const CreateCustomerSupportRemarkForMoveOKCode int = 200

/*
CreateCustomerSupportRemarkForMoveOK Successfully created customer support remark

swagger:response createCustomerSupportRemarkForMoveOK
*/
type CreateCustomerSupportRemarkForMoveOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.CustomerSupportRemark `json:"body,omitempty"`
}

// NewCreateCustomerSupportRemarkForMoveOK creates CreateCustomerSupportRemarkForMoveOK with default headers values
func NewCreateCustomerSupportRemarkForMoveOK() *CreateCustomerSupportRemarkForMoveOK {

	return &CreateCustomerSupportRemarkForMoveOK{}
}

// WithPayload adds the payload to the create customer support remark for move o k response
func (o *CreateCustomerSupportRemarkForMoveOK) WithPayload(payload *ghcmessages.CustomerSupportRemark) *CreateCustomerSupportRemarkForMoveOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer support remark for move o k response
func (o *CreateCustomerSupportRemarkForMoveOK) SetPayload(payload *ghcmessages.CustomerSupportRemark) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerSupportRemarkForMoveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerSupportRemarkForMoveBadRequestCode is the HTTP code returned for type CreateCustomerSupportRemarkForMoveBadRequest
const CreateCustomerSupportRemarkForMoveBadRequestCode int = 400

/*
CreateCustomerSupportRemarkForMoveBadRequest The request payload is invalid

swagger:response createCustomerSupportRemarkForMoveBadRequest
*/
type CreateCustomerSupportRemarkForMoveBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerSupportRemarkForMoveBadRequest creates CreateCustomerSupportRemarkForMoveBadRequest with default headers values
func NewCreateCustomerSupportRemarkForMoveBadRequest() *CreateCustomerSupportRemarkForMoveBadRequest {

	return &CreateCustomerSupportRemarkForMoveBadRequest{}
}

// WithPayload adds the payload to the create customer support remark for move bad request response
func (o *CreateCustomerSupportRemarkForMoveBadRequest) WithPayload(payload *ghcmessages.Error) *CreateCustomerSupportRemarkForMoveBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer support remark for move bad request response
func (o *CreateCustomerSupportRemarkForMoveBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerSupportRemarkForMoveBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerSupportRemarkForMoveNotFoundCode is the HTTP code returned for type CreateCustomerSupportRemarkForMoveNotFound
const CreateCustomerSupportRemarkForMoveNotFoundCode int = 404

/*
CreateCustomerSupportRemarkForMoveNotFound The requested resource wasn't found

swagger:response createCustomerSupportRemarkForMoveNotFound
*/
type CreateCustomerSupportRemarkForMoveNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerSupportRemarkForMoveNotFound creates CreateCustomerSupportRemarkForMoveNotFound with default headers values
func NewCreateCustomerSupportRemarkForMoveNotFound() *CreateCustomerSupportRemarkForMoveNotFound {

	return &CreateCustomerSupportRemarkForMoveNotFound{}
}

// WithPayload adds the payload to the create customer support remark for move not found response
func (o *CreateCustomerSupportRemarkForMoveNotFound) WithPayload(payload *ghcmessages.Error) *CreateCustomerSupportRemarkForMoveNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer support remark for move not found response
func (o *CreateCustomerSupportRemarkForMoveNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerSupportRemarkForMoveNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerSupportRemarkForMoveUnprocessableEntityCode is the HTTP code returned for type CreateCustomerSupportRemarkForMoveUnprocessableEntity
const CreateCustomerSupportRemarkForMoveUnprocessableEntityCode int = 422

/*
CreateCustomerSupportRemarkForMoveUnprocessableEntity The payload was unprocessable.

swagger:response createCustomerSupportRemarkForMoveUnprocessableEntity
*/
type CreateCustomerSupportRemarkForMoveUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewCreateCustomerSupportRemarkForMoveUnprocessableEntity creates CreateCustomerSupportRemarkForMoveUnprocessableEntity with default headers values
func NewCreateCustomerSupportRemarkForMoveUnprocessableEntity() *CreateCustomerSupportRemarkForMoveUnprocessableEntity {

	return &CreateCustomerSupportRemarkForMoveUnprocessableEntity{}
}

// WithPayload adds the payload to the create customer support remark for move unprocessable entity response
func (o *CreateCustomerSupportRemarkForMoveUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *CreateCustomerSupportRemarkForMoveUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer support remark for move unprocessable entity response
func (o *CreateCustomerSupportRemarkForMoveUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerSupportRemarkForMoveUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCustomerSupportRemarkForMoveInternalServerErrorCode is the HTTP code returned for type CreateCustomerSupportRemarkForMoveInternalServerError
const CreateCustomerSupportRemarkForMoveInternalServerErrorCode int = 500

/*
CreateCustomerSupportRemarkForMoveInternalServerError A server error occurred

swagger:response createCustomerSupportRemarkForMoveInternalServerError
*/
type CreateCustomerSupportRemarkForMoveInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateCustomerSupportRemarkForMoveInternalServerError creates CreateCustomerSupportRemarkForMoveInternalServerError with default headers values
func NewCreateCustomerSupportRemarkForMoveInternalServerError() *CreateCustomerSupportRemarkForMoveInternalServerError {

	return &CreateCustomerSupportRemarkForMoveInternalServerError{}
}

// WithPayload adds the payload to the create customer support remark for move internal server error response
func (o *CreateCustomerSupportRemarkForMoveInternalServerError) WithPayload(payload *ghcmessages.Error) *CreateCustomerSupportRemarkForMoveInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create customer support remark for move internal server error response
func (o *CreateCustomerSupportRemarkForMoveInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCustomerSupportRemarkForMoveInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
