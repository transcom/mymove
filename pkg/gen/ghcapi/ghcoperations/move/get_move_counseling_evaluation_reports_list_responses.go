// Code generated by go-swagger; DO NOT EDIT.

package move

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetMoveCounselingEvaluationReportsListOKCode is the HTTP code returned for type GetMoveCounselingEvaluationReportsListOK
const GetMoveCounselingEvaluationReportsListOKCode int = 200

/*
GetMoveCounselingEvaluationReportsListOK Successfully retrieved the move's evaluation reports

swagger:response getMoveCounselingEvaluationReportsListOK
*/
type GetMoveCounselingEvaluationReportsListOK struct {

	/*
	  In: Body
	*/
	Payload ghcmessages.EvaluationReportList `json:"body,omitempty"`
}

// NewGetMoveCounselingEvaluationReportsListOK creates GetMoveCounselingEvaluationReportsListOK with default headers values
func NewGetMoveCounselingEvaluationReportsListOK() *GetMoveCounselingEvaluationReportsListOK {

	return &GetMoveCounselingEvaluationReportsListOK{}
}

// WithPayload adds the payload to the get move counseling evaluation reports list o k response
func (o *GetMoveCounselingEvaluationReportsListOK) WithPayload(payload ghcmessages.EvaluationReportList) *GetMoveCounselingEvaluationReportsListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move counseling evaluation reports list o k response
func (o *GetMoveCounselingEvaluationReportsListOK) SetPayload(payload ghcmessages.EvaluationReportList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveCounselingEvaluationReportsListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = ghcmessages.EvaluationReportList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveCounselingEvaluationReportsListBadRequestCode is the HTTP code returned for type GetMoveCounselingEvaluationReportsListBadRequest
const GetMoveCounselingEvaluationReportsListBadRequestCode int = 400

/*
GetMoveCounselingEvaluationReportsListBadRequest The request payload is invalid

swagger:response getMoveCounselingEvaluationReportsListBadRequest
*/
type GetMoveCounselingEvaluationReportsListBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveCounselingEvaluationReportsListBadRequest creates GetMoveCounselingEvaluationReportsListBadRequest with default headers values
func NewGetMoveCounselingEvaluationReportsListBadRequest() *GetMoveCounselingEvaluationReportsListBadRequest {

	return &GetMoveCounselingEvaluationReportsListBadRequest{}
}

// WithPayload adds the payload to the get move counseling evaluation reports list bad request response
func (o *GetMoveCounselingEvaluationReportsListBadRequest) WithPayload(payload *ghcmessages.Error) *GetMoveCounselingEvaluationReportsListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move counseling evaluation reports list bad request response
func (o *GetMoveCounselingEvaluationReportsListBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveCounselingEvaluationReportsListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveCounselingEvaluationReportsListUnauthorizedCode is the HTTP code returned for type GetMoveCounselingEvaluationReportsListUnauthorized
const GetMoveCounselingEvaluationReportsListUnauthorizedCode int = 401

/*
GetMoveCounselingEvaluationReportsListUnauthorized The request was denied

swagger:response getMoveCounselingEvaluationReportsListUnauthorized
*/
type GetMoveCounselingEvaluationReportsListUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveCounselingEvaluationReportsListUnauthorized creates GetMoveCounselingEvaluationReportsListUnauthorized with default headers values
func NewGetMoveCounselingEvaluationReportsListUnauthorized() *GetMoveCounselingEvaluationReportsListUnauthorized {

	return &GetMoveCounselingEvaluationReportsListUnauthorized{}
}

// WithPayload adds the payload to the get move counseling evaluation reports list unauthorized response
func (o *GetMoveCounselingEvaluationReportsListUnauthorized) WithPayload(payload *ghcmessages.Error) *GetMoveCounselingEvaluationReportsListUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move counseling evaluation reports list unauthorized response
func (o *GetMoveCounselingEvaluationReportsListUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveCounselingEvaluationReportsListUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveCounselingEvaluationReportsListForbiddenCode is the HTTP code returned for type GetMoveCounselingEvaluationReportsListForbidden
const GetMoveCounselingEvaluationReportsListForbiddenCode int = 403

/*
GetMoveCounselingEvaluationReportsListForbidden The request was denied

swagger:response getMoveCounselingEvaluationReportsListForbidden
*/
type GetMoveCounselingEvaluationReportsListForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveCounselingEvaluationReportsListForbidden creates GetMoveCounselingEvaluationReportsListForbidden with default headers values
func NewGetMoveCounselingEvaluationReportsListForbidden() *GetMoveCounselingEvaluationReportsListForbidden {

	return &GetMoveCounselingEvaluationReportsListForbidden{}
}

// WithPayload adds the payload to the get move counseling evaluation reports list forbidden response
func (o *GetMoveCounselingEvaluationReportsListForbidden) WithPayload(payload *ghcmessages.Error) *GetMoveCounselingEvaluationReportsListForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move counseling evaluation reports list forbidden response
func (o *GetMoveCounselingEvaluationReportsListForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveCounselingEvaluationReportsListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveCounselingEvaluationReportsListNotFoundCode is the HTTP code returned for type GetMoveCounselingEvaluationReportsListNotFound
const GetMoveCounselingEvaluationReportsListNotFoundCode int = 404

/*
GetMoveCounselingEvaluationReportsListNotFound The requested resource wasn't found

swagger:response getMoveCounselingEvaluationReportsListNotFound
*/
type GetMoveCounselingEvaluationReportsListNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveCounselingEvaluationReportsListNotFound creates GetMoveCounselingEvaluationReportsListNotFound with default headers values
func NewGetMoveCounselingEvaluationReportsListNotFound() *GetMoveCounselingEvaluationReportsListNotFound {

	return &GetMoveCounselingEvaluationReportsListNotFound{}
}

// WithPayload adds the payload to the get move counseling evaluation reports list not found response
func (o *GetMoveCounselingEvaluationReportsListNotFound) WithPayload(payload *ghcmessages.Error) *GetMoveCounselingEvaluationReportsListNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move counseling evaluation reports list not found response
func (o *GetMoveCounselingEvaluationReportsListNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveCounselingEvaluationReportsListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveCounselingEvaluationReportsListInternalServerErrorCode is the HTTP code returned for type GetMoveCounselingEvaluationReportsListInternalServerError
const GetMoveCounselingEvaluationReportsListInternalServerErrorCode int = 500

/*
GetMoveCounselingEvaluationReportsListInternalServerError A server error occurred

swagger:response getMoveCounselingEvaluationReportsListInternalServerError
*/
type GetMoveCounselingEvaluationReportsListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveCounselingEvaluationReportsListInternalServerError creates GetMoveCounselingEvaluationReportsListInternalServerError with default headers values
func NewGetMoveCounselingEvaluationReportsListInternalServerError() *GetMoveCounselingEvaluationReportsListInternalServerError {

	return &GetMoveCounselingEvaluationReportsListInternalServerError{}
}

// WithPayload adds the payload to the get move counseling evaluation reports list internal server error response
func (o *GetMoveCounselingEvaluationReportsListInternalServerError) WithPayload(payload *ghcmessages.Error) *GetMoveCounselingEvaluationReportsListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move counseling evaluation reports list internal server error response
func (o *GetMoveCounselingEvaluationReportsListInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveCounselingEvaluationReportsListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
