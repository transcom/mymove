// Code generated by go-swagger; DO NOT EDIT.

package move

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// CheckForLockedMovesAndUnlockOKCode is the HTTP code returned for type CheckForLockedMovesAndUnlockOK
const CheckForLockedMovesAndUnlockOKCode int = 200

/*
CheckForLockedMovesAndUnlockOK Successfully unlocked officer's move(s).

swagger:response checkForLockedMovesAndUnlockOK
*/
type CheckForLockedMovesAndUnlockOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.UnlockedMoves `json:"body,omitempty"`
}

// NewCheckForLockedMovesAndUnlockOK creates CheckForLockedMovesAndUnlockOK with default headers values
func NewCheckForLockedMovesAndUnlockOK() *CheckForLockedMovesAndUnlockOK {

	return &CheckForLockedMovesAndUnlockOK{}
}

// WithPayload adds the payload to the check for locked moves and unlock o k response
func (o *CheckForLockedMovesAndUnlockOK) WithPayload(payload *ghcmessages.UnlockedMoves) *CheckForLockedMovesAndUnlockOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check for locked moves and unlock o k response
func (o *CheckForLockedMovesAndUnlockOK) SetPayload(payload *ghcmessages.UnlockedMoves) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckForLockedMovesAndUnlockOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CheckForLockedMovesAndUnlockInternalServerErrorCode is the HTTP code returned for type CheckForLockedMovesAndUnlockInternalServerError
const CheckForLockedMovesAndUnlockInternalServerErrorCode int = 500

/*
CheckForLockedMovesAndUnlockInternalServerError A server error occurred

swagger:response checkForLockedMovesAndUnlockInternalServerError
*/
type CheckForLockedMovesAndUnlockInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCheckForLockedMovesAndUnlockInternalServerError creates CheckForLockedMovesAndUnlockInternalServerError with default headers values
func NewCheckForLockedMovesAndUnlockInternalServerError() *CheckForLockedMovesAndUnlockInternalServerError {

	return &CheckForLockedMovesAndUnlockInternalServerError{}
}

// WithPayload adds the payload to the check for locked moves and unlock internal server error response
func (o *CheckForLockedMovesAndUnlockInternalServerError) WithPayload(payload *ghcmessages.Error) *CheckForLockedMovesAndUnlockInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check for locked moves and unlock internal server error response
func (o *CheckForLockedMovesAndUnlockInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckForLockedMovesAndUnlockInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
