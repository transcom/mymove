// Code generated by go-swagger; DO NOT EDIT.

package move

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetMoveShipmentEvaluationReportsListHandlerFunc turns a function with the right signature into a get move shipment evaluation reports list handler
type GetMoveShipmentEvaluationReportsListHandlerFunc func(GetMoveShipmentEvaluationReportsListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMoveShipmentEvaluationReportsListHandlerFunc) Handle(params GetMoveShipmentEvaluationReportsListParams) middleware.Responder {
	return fn(params)
}

// GetMoveShipmentEvaluationReportsListHandler interface for that can handle valid get move shipment evaluation reports list params
type GetMoveShipmentEvaluationReportsListHandler interface {
	Handle(GetMoveShipmentEvaluationReportsListParams) middleware.Responder
}

// NewGetMoveShipmentEvaluationReportsList creates a new http.Handler for the get move shipment evaluation reports list operation
func NewGetMoveShipmentEvaluationReportsList(ctx *middleware.Context, handler GetMoveShipmentEvaluationReportsListHandler) *GetMoveShipmentEvaluationReportsList {
	return &GetMoveShipmentEvaluationReportsList{Context: ctx, Handler: handler}
}

/*
	GetMoveShipmentEvaluationReportsList swagger:route GET /moves/{moveID}/shipment-evaluation-reports-list move getMoveShipmentEvaluationReportsList

# Returns shipment evaluation reports for the specified move that are visible to the current office user

Returns shipment evaluation reports for the specified move that are visible to the current office user
*/
type GetMoveShipmentEvaluationReportsList struct {
	Context *middleware.Context
	Handler GetMoveShipmentEvaluationReportsListHandler
}

func (o *GetMoveShipmentEvaluationReportsList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetMoveShipmentEvaluationReportsListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
