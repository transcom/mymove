// Code generated by go-swagger; DO NOT EDIT.

package move

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// MoveCancellationOKCode is the HTTP code returned for type MoveCancellationOK
const MoveCancellationOKCode int = 200

/*
MoveCancellationOK Successfully cancelled move

swagger:response moveCancellationOK
*/
type MoveCancellationOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Move `json:"body,omitempty"`
}

// NewMoveCancellationOK creates MoveCancellationOK with default headers values
func NewMoveCancellationOK() *MoveCancellationOK {

	return &MoveCancellationOK{}
}

// WithPayload adds the payload to the move cancellation o k response
func (o *MoveCancellationOK) WithPayload(payload *ghcmessages.Move) *MoveCancellationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move cancellation o k response
func (o *MoveCancellationOK) SetPayload(payload *ghcmessages.Move) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveCancellationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveCancellationForbiddenCode is the HTTP code returned for type MoveCancellationForbidden
const MoveCancellationForbiddenCode int = 403

/*
MoveCancellationForbidden The request was denied

swagger:response moveCancellationForbidden
*/
type MoveCancellationForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewMoveCancellationForbidden creates MoveCancellationForbidden with default headers values
func NewMoveCancellationForbidden() *MoveCancellationForbidden {

	return &MoveCancellationForbidden{}
}

// WithPayload adds the payload to the move cancellation forbidden response
func (o *MoveCancellationForbidden) WithPayload(payload *ghcmessages.Error) *MoveCancellationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move cancellation forbidden response
func (o *MoveCancellationForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveCancellationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveCancellationNotFoundCode is the HTTP code returned for type MoveCancellationNotFound
const MoveCancellationNotFoundCode int = 404

/*
MoveCancellationNotFound The requested resource wasn't found

swagger:response moveCancellationNotFound
*/
type MoveCancellationNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewMoveCancellationNotFound creates MoveCancellationNotFound with default headers values
func NewMoveCancellationNotFound() *MoveCancellationNotFound {

	return &MoveCancellationNotFound{}
}

// WithPayload adds the payload to the move cancellation not found response
func (o *MoveCancellationNotFound) WithPayload(payload *ghcmessages.Error) *MoveCancellationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move cancellation not found response
func (o *MoveCancellationNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveCancellationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveCancellationConflictCode is the HTTP code returned for type MoveCancellationConflict
const MoveCancellationConflictCode int = 409

/*
MoveCancellationConflict Conflict error

swagger:response moveCancellationConflict
*/
type MoveCancellationConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewMoveCancellationConflict creates MoveCancellationConflict with default headers values
func NewMoveCancellationConflict() *MoveCancellationConflict {

	return &MoveCancellationConflict{}
}

// WithPayload adds the payload to the move cancellation conflict response
func (o *MoveCancellationConflict) WithPayload(payload *ghcmessages.Error) *MoveCancellationConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move cancellation conflict response
func (o *MoveCancellationConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveCancellationConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveCancellationPreconditionFailedCode is the HTTP code returned for type MoveCancellationPreconditionFailed
const MoveCancellationPreconditionFailedCode int = 412

/*
MoveCancellationPreconditionFailed Precondition failed

swagger:response moveCancellationPreconditionFailed
*/
type MoveCancellationPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewMoveCancellationPreconditionFailed creates MoveCancellationPreconditionFailed with default headers values
func NewMoveCancellationPreconditionFailed() *MoveCancellationPreconditionFailed {

	return &MoveCancellationPreconditionFailed{}
}

// WithPayload adds the payload to the move cancellation precondition failed response
func (o *MoveCancellationPreconditionFailed) WithPayload(payload *ghcmessages.Error) *MoveCancellationPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move cancellation precondition failed response
func (o *MoveCancellationPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveCancellationPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveCancellationUnprocessableEntityCode is the HTTP code returned for type MoveCancellationUnprocessableEntity
const MoveCancellationUnprocessableEntityCode int = 422

/*
MoveCancellationUnprocessableEntity The payload was unprocessable.

swagger:response moveCancellationUnprocessableEntity
*/
type MoveCancellationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewMoveCancellationUnprocessableEntity creates MoveCancellationUnprocessableEntity with default headers values
func NewMoveCancellationUnprocessableEntity() *MoveCancellationUnprocessableEntity {

	return &MoveCancellationUnprocessableEntity{}
}

// WithPayload adds the payload to the move cancellation unprocessable entity response
func (o *MoveCancellationUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *MoveCancellationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move cancellation unprocessable entity response
func (o *MoveCancellationUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveCancellationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveCancellationInternalServerErrorCode is the HTTP code returned for type MoveCancellationInternalServerError
const MoveCancellationInternalServerErrorCode int = 500

/*
MoveCancellationInternalServerError A server error occurred

swagger:response moveCancellationInternalServerError
*/
type MoveCancellationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewMoveCancellationInternalServerError creates MoveCancellationInternalServerError with default headers values
func NewMoveCancellationInternalServerError() *MoveCancellationInternalServerError {

	return &MoveCancellationInternalServerError{}
}

// WithPayload adds the payload to the move cancellation internal server error response
func (o *MoveCancellationInternalServerError) WithPayload(payload *ghcmessages.Error) *MoveCancellationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move cancellation internal server error response
func (o *MoveCancellationInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveCancellationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
