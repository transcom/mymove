// Code generated by go-swagger; DO NOT EDIT.

package move

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetMoveShipmentEvaluationReportsListOKCode is the HTTP code returned for type GetMoveShipmentEvaluationReportsListOK
const GetMoveShipmentEvaluationReportsListOKCode int = 200

/*
GetMoveShipmentEvaluationReportsListOK Successfully retrieved the move's evaluation reports

swagger:response getMoveShipmentEvaluationReportsListOK
*/
type GetMoveShipmentEvaluationReportsListOK struct {

	/*
	  In: Body
	*/
	Payload ghcmessages.EvaluationReportList `json:"body,omitempty"`
}

// NewGetMoveShipmentEvaluationReportsListOK creates GetMoveShipmentEvaluationReportsListOK with default headers values
func NewGetMoveShipmentEvaluationReportsListOK() *GetMoveShipmentEvaluationReportsListOK {

	return &GetMoveShipmentEvaluationReportsListOK{}
}

// WithPayload adds the payload to the get move shipment evaluation reports list o k response
func (o *GetMoveShipmentEvaluationReportsListOK) WithPayload(payload ghcmessages.EvaluationReportList) *GetMoveShipmentEvaluationReportsListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move shipment evaluation reports list o k response
func (o *GetMoveShipmentEvaluationReportsListOK) SetPayload(payload ghcmessages.EvaluationReportList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveShipmentEvaluationReportsListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = ghcmessages.EvaluationReportList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveShipmentEvaluationReportsListBadRequestCode is the HTTP code returned for type GetMoveShipmentEvaluationReportsListBadRequest
const GetMoveShipmentEvaluationReportsListBadRequestCode int = 400

/*
GetMoveShipmentEvaluationReportsListBadRequest The request payload is invalid

swagger:response getMoveShipmentEvaluationReportsListBadRequest
*/
type GetMoveShipmentEvaluationReportsListBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveShipmentEvaluationReportsListBadRequest creates GetMoveShipmentEvaluationReportsListBadRequest with default headers values
func NewGetMoveShipmentEvaluationReportsListBadRequest() *GetMoveShipmentEvaluationReportsListBadRequest {

	return &GetMoveShipmentEvaluationReportsListBadRequest{}
}

// WithPayload adds the payload to the get move shipment evaluation reports list bad request response
func (o *GetMoveShipmentEvaluationReportsListBadRequest) WithPayload(payload *ghcmessages.Error) *GetMoveShipmentEvaluationReportsListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move shipment evaluation reports list bad request response
func (o *GetMoveShipmentEvaluationReportsListBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveShipmentEvaluationReportsListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveShipmentEvaluationReportsListUnauthorizedCode is the HTTP code returned for type GetMoveShipmentEvaluationReportsListUnauthorized
const GetMoveShipmentEvaluationReportsListUnauthorizedCode int = 401

/*
GetMoveShipmentEvaluationReportsListUnauthorized The request was denied

swagger:response getMoveShipmentEvaluationReportsListUnauthorized
*/
type GetMoveShipmentEvaluationReportsListUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveShipmentEvaluationReportsListUnauthorized creates GetMoveShipmentEvaluationReportsListUnauthorized with default headers values
func NewGetMoveShipmentEvaluationReportsListUnauthorized() *GetMoveShipmentEvaluationReportsListUnauthorized {

	return &GetMoveShipmentEvaluationReportsListUnauthorized{}
}

// WithPayload adds the payload to the get move shipment evaluation reports list unauthorized response
func (o *GetMoveShipmentEvaluationReportsListUnauthorized) WithPayload(payload *ghcmessages.Error) *GetMoveShipmentEvaluationReportsListUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move shipment evaluation reports list unauthorized response
func (o *GetMoveShipmentEvaluationReportsListUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveShipmentEvaluationReportsListUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveShipmentEvaluationReportsListForbiddenCode is the HTTP code returned for type GetMoveShipmentEvaluationReportsListForbidden
const GetMoveShipmentEvaluationReportsListForbiddenCode int = 403

/*
GetMoveShipmentEvaluationReportsListForbidden The request was denied

swagger:response getMoveShipmentEvaluationReportsListForbidden
*/
type GetMoveShipmentEvaluationReportsListForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveShipmentEvaluationReportsListForbidden creates GetMoveShipmentEvaluationReportsListForbidden with default headers values
func NewGetMoveShipmentEvaluationReportsListForbidden() *GetMoveShipmentEvaluationReportsListForbidden {

	return &GetMoveShipmentEvaluationReportsListForbidden{}
}

// WithPayload adds the payload to the get move shipment evaluation reports list forbidden response
func (o *GetMoveShipmentEvaluationReportsListForbidden) WithPayload(payload *ghcmessages.Error) *GetMoveShipmentEvaluationReportsListForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move shipment evaluation reports list forbidden response
func (o *GetMoveShipmentEvaluationReportsListForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveShipmentEvaluationReportsListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveShipmentEvaluationReportsListNotFoundCode is the HTTP code returned for type GetMoveShipmentEvaluationReportsListNotFound
const GetMoveShipmentEvaluationReportsListNotFoundCode int = 404

/*
GetMoveShipmentEvaluationReportsListNotFound The requested resource wasn't found

swagger:response getMoveShipmentEvaluationReportsListNotFound
*/
type GetMoveShipmentEvaluationReportsListNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveShipmentEvaluationReportsListNotFound creates GetMoveShipmentEvaluationReportsListNotFound with default headers values
func NewGetMoveShipmentEvaluationReportsListNotFound() *GetMoveShipmentEvaluationReportsListNotFound {

	return &GetMoveShipmentEvaluationReportsListNotFound{}
}

// WithPayload adds the payload to the get move shipment evaluation reports list not found response
func (o *GetMoveShipmentEvaluationReportsListNotFound) WithPayload(payload *ghcmessages.Error) *GetMoveShipmentEvaluationReportsListNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move shipment evaluation reports list not found response
func (o *GetMoveShipmentEvaluationReportsListNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveShipmentEvaluationReportsListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveShipmentEvaluationReportsListInternalServerErrorCode is the HTTP code returned for type GetMoveShipmentEvaluationReportsListInternalServerError
const GetMoveShipmentEvaluationReportsListInternalServerErrorCode int = 500

/*
GetMoveShipmentEvaluationReportsListInternalServerError A server error occurred

swagger:response getMoveShipmentEvaluationReportsListInternalServerError
*/
type GetMoveShipmentEvaluationReportsListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewGetMoveShipmentEvaluationReportsListInternalServerError creates GetMoveShipmentEvaluationReportsListInternalServerError with default headers values
func NewGetMoveShipmentEvaluationReportsListInternalServerError() *GetMoveShipmentEvaluationReportsListInternalServerError {

	return &GetMoveShipmentEvaluationReportsListInternalServerError{}
}

// WithPayload adds the payload to the get move shipment evaluation reports list internal server error response
func (o *GetMoveShipmentEvaluationReportsListInternalServerError) WithPayload(payload *ghcmessages.Error) *GetMoveShipmentEvaluationReportsListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move shipment evaluation reports list internal server error response
func (o *GetMoveShipmentEvaluationReportsListInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveShipmentEvaluationReportsListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
