// Code generated by go-swagger; DO NOT EDIT.

package payment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPaymentRequestHandlerFunc turns a function with the right signature into a get payment request handler
type GetPaymentRequestHandlerFunc func(GetPaymentRequestParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPaymentRequestHandlerFunc) Handle(params GetPaymentRequestParams) middleware.Responder {
	return fn(params)
}

// GetPaymentRequestHandler interface for that can handle valid get payment request params
type GetPaymentRequestHandler interface {
	Handle(GetPaymentRequestParams) middleware.Responder
}

// NewGetPaymentRequest creates a new http.Handler for the get payment request operation
func NewGetPaymentRequest(ctx *middleware.Context, handler GetPaymentRequestHandler) *GetPaymentRequest {
	return &GetPaymentRequest{Context: ctx, Handler: handler}
}

/*
	GetPaymentRequest swagger:route GET /payment-requests/{paymentRequestID} paymentRequests getPaymentRequest

# Fetches a payment request by id

Fetches an instance of a payment request by id
*/
type GetPaymentRequest struct {
	Context *middleware.Context
	Handler GetPaymentRequestHandler
}

func (o *GetPaymentRequest) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetPaymentRequestParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
