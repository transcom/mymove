// Code generated by go-swagger; DO NOT EDIT.

package payment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdatePaymentRequestHandlerFunc turns a function with the right signature into a update payment request handler
type UpdatePaymentRequestHandlerFunc func(UpdatePaymentRequestParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdatePaymentRequestHandlerFunc) Handle(params UpdatePaymentRequestParams) middleware.Responder {
	return fn(params)
}

// UpdatePaymentRequestHandler interface for that can handle valid update payment request params
type UpdatePaymentRequestHandler interface {
	Handle(UpdatePaymentRequestParams) middleware.Responder
}

// NewUpdatePaymentRequest creates a new http.Handler for the update payment request operation
func NewUpdatePaymentRequest(ctx *middleware.Context, handler UpdatePaymentRequestHandler) *UpdatePaymentRequest {
	return &UpdatePaymentRequest{Context: ctx, Handler: handler}
}

/*UpdatePaymentRequest swagger:route PATCH /payment-requests/{paymentRequestID} paymentRequests updatePaymentRequest

Updates a payment request by id

Updates a payment request by id

*/
type UpdatePaymentRequest struct {
	Context *middleware.Context
	Handler UpdatePaymentRequestHandler
}

func (o *UpdatePaymentRequest) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdatePaymentRequestParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
