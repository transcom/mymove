// Code generated by go-swagger; DO NOT EDIT.

package mto_agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// FetchMTOAgentListHandlerFunc turns a function with the right signature into a fetch m t o agent list handler
type FetchMTOAgentListHandlerFunc func(FetchMTOAgentListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FetchMTOAgentListHandlerFunc) Handle(params FetchMTOAgentListParams) middleware.Responder {
	return fn(params)
}

// FetchMTOAgentListHandler interface for that can handle valid fetch m t o agent list params
type FetchMTOAgentListHandler interface {
	Handle(FetchMTOAgentListParams) middleware.Responder
}

// NewFetchMTOAgentList creates a new http.Handler for the fetch m t o agent list operation
func NewFetchMTOAgentList(ctx *middleware.Context, handler FetchMTOAgentListHandler) *FetchMTOAgentList {
	return &FetchMTOAgentList{Context: ctx, Handler: handler}
}

/*
	FetchMTOAgentList swagger:route GET /move_task_orders/{moveTaskOrderID}/mto_shipments/{shipmentID}/mto-agents mtoAgent fetchMTOAgentList

Fetch move task order agents.

Fetches a list of agents associated with a move task order.
*/
type FetchMTOAgentList struct {
	Context *middleware.Context
	Handler FetchMTOAgentListHandler
}

func (o *FetchMTOAgentList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewFetchMTOAgentListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
