// Code generated by go-swagger; DO NOT EDIT.

package ghc_documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// CreateDocumentCreatedCode is the HTTP code returned for type CreateDocumentCreated
const CreateDocumentCreatedCode int = 201

/*
CreateDocumentCreated created document

swagger:response createDocumentCreated
*/
type CreateDocumentCreated struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Document `json:"body,omitempty"`
}

// NewCreateDocumentCreated creates CreateDocumentCreated with default headers values
func NewCreateDocumentCreated() *CreateDocumentCreated {

	return &CreateDocumentCreated{}
}

// WithPayload adds the payload to the create document created response
func (o *CreateDocumentCreated) WithPayload(payload *ghcmessages.Document) *CreateDocumentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create document created response
func (o *CreateDocumentCreated) SetPayload(payload *ghcmessages.Document) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDocumentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDocumentBadRequestCode is the HTTP code returned for type CreateDocumentBadRequest
const CreateDocumentBadRequestCode int = 400

/*
CreateDocumentBadRequest invalid request

swagger:response createDocumentBadRequest
*/
type CreateDocumentBadRequest struct {
}

// NewCreateDocumentBadRequest creates CreateDocumentBadRequest with default headers values
func NewCreateDocumentBadRequest() *CreateDocumentBadRequest {

	return &CreateDocumentBadRequest{}
}

// WriteResponse to the client
func (o *CreateDocumentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// CreateDocumentForbiddenCode is the HTTP code returned for type CreateDocumentForbidden
const CreateDocumentForbiddenCode int = 403

/*
CreateDocumentForbidden The request was denied

swagger:response createDocumentForbidden
*/
type CreateDocumentForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewCreateDocumentForbidden creates CreateDocumentForbidden with default headers values
func NewCreateDocumentForbidden() *CreateDocumentForbidden {

	return &CreateDocumentForbidden{}
}

// WithPayload adds the payload to the create document forbidden response
func (o *CreateDocumentForbidden) WithPayload(payload *ghcmessages.Error) *CreateDocumentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create document forbidden response
func (o *CreateDocumentForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDocumentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDocumentInternalServerErrorCode is the HTTP code returned for type CreateDocumentInternalServerError
const CreateDocumentInternalServerErrorCode int = 500

/*
CreateDocumentInternalServerError server error

swagger:response createDocumentInternalServerError
*/
type CreateDocumentInternalServerError struct {
}

// NewCreateDocumentInternalServerError creates CreateDocumentInternalServerError with default headers values
func NewCreateDocumentInternalServerError() *CreateDocumentInternalServerError {

	return &CreateDocumentInternalServerError{}
}

// WriteResponse to the client
func (o *CreateDocumentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
