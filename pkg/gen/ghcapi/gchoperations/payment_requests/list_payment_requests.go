// Code generated by go-swagger; DO NOT EDIT.

package payment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListPaymentRequestsHandlerFunc turns a function with the right signature into a list payment requests handler
type ListPaymentRequestsHandlerFunc func(ListPaymentRequestsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListPaymentRequestsHandlerFunc) Handle(params ListPaymentRequestsParams) middleware.Responder {
	return fn(params)
}

// ListPaymentRequestsHandler interface for that can handle valid list payment requests params
type ListPaymentRequestsHandler interface {
	Handle(ListPaymentRequestsParams) middleware.Responder
}

// NewListPaymentRequests creates a new http.Handler for the list payment requests operation
func NewListPaymentRequests(ctx *middleware.Context, handler ListPaymentRequestsHandler) *ListPaymentRequests {
	return &ListPaymentRequests{Context: ctx, Handler: handler}
}

/*ListPaymentRequests swagger:route GET /payment-requests paymentRequests prime gov listPaymentRequests

Gets payment requests

Gets a list of payment requests

*/
type ListPaymentRequests struct {
	Context *middleware.Context
	Handler ListPaymentRequestsHandler
}

func (o *ListPaymentRequests) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListPaymentRequestsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
