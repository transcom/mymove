// Code generated by go-swagger; DO NOT EDIT.

package primev3messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RateArea Rate area info for OCONUS postal code
//
// swagger:model RateArea
type RateArea struct {

	// id
	// Example: 1f2270c7-7166-40ae-981e-b200ebdf3054
	// Required: true
	// Format: uuid
	ID *strfmt.UUID `json:"id"`

	// Rate area code
	// Example: US8101000
	// Required: true
	RateAreaID *string `json:"rateAreaId"`

	// Rate area name
	// Example: Alaska (Zone) I
	// Required: true
	RateAreaName *string `json:"rateAreaName"`
}

// Validate validates this rate area
func (m *RateArea) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRateAreaID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRateAreaName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RateArea) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *RateArea) validateRateAreaID(formats strfmt.Registry) error {

	if err := validate.Required("rateAreaId", "body", m.RateAreaID); err != nil {
		return err
	}

	return nil
}

func (m *RateArea) validateRateAreaName(formats strfmt.Registry) error {

	if err := validate.Required("rateAreaName", "body", m.RateAreaName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this rate area based on context it is used
func (m *RateArea) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RateArea) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RateArea) UnmarshalBinary(b []byte) error {
	var res RateArea
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
