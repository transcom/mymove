// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// HideNonFakeMoveTaskOrdersOKCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersOK
const HideNonFakeMoveTaskOrdersOKCode int = 200

/*
HideNonFakeMoveTaskOrdersOK Successfully hid MTOs.

swagger:response hideNonFakeMoveTaskOrdersOK
*/
type HideNonFakeMoveTaskOrdersOK struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.MTOHideMovesResponse `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersOK creates HideNonFakeMoveTaskOrdersOK with default headers values
func NewHideNonFakeMoveTaskOrdersOK() *HideNonFakeMoveTaskOrdersOK {

	return &HideNonFakeMoveTaskOrdersOK{}
}

// WithPayload adds the payload to the hide non fake move task orders o k response
func (o *HideNonFakeMoveTaskOrdersOK) WithPayload(payload *supportmessages.MTOHideMovesResponse) *HideNonFakeMoveTaskOrdersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders o k response
func (o *HideNonFakeMoveTaskOrdersOK) SetPayload(payload *supportmessages.MTOHideMovesResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersBadRequestCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersBadRequest
const HideNonFakeMoveTaskOrdersBadRequestCode int = 400

/*
HideNonFakeMoveTaskOrdersBadRequest The request payload is invalid.

swagger:response hideNonFakeMoveTaskOrdersBadRequest
*/
type HideNonFakeMoveTaskOrdersBadRequest struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersBadRequest creates HideNonFakeMoveTaskOrdersBadRequest with default headers values
func NewHideNonFakeMoveTaskOrdersBadRequest() *HideNonFakeMoveTaskOrdersBadRequest {

	return &HideNonFakeMoveTaskOrdersBadRequest{}
}

// WithPayload adds the payload to the hide non fake move task orders bad request response
func (o *HideNonFakeMoveTaskOrdersBadRequest) WithPayload(payload *supportmessages.ClientError) *HideNonFakeMoveTaskOrdersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders bad request response
func (o *HideNonFakeMoveTaskOrdersBadRequest) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersUnauthorizedCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersUnauthorized
const HideNonFakeMoveTaskOrdersUnauthorizedCode int = 401

/*
HideNonFakeMoveTaskOrdersUnauthorized The request was denied.

swagger:response hideNonFakeMoveTaskOrdersUnauthorized
*/
type HideNonFakeMoveTaskOrdersUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersUnauthorized creates HideNonFakeMoveTaskOrdersUnauthorized with default headers values
func NewHideNonFakeMoveTaskOrdersUnauthorized() *HideNonFakeMoveTaskOrdersUnauthorized {

	return &HideNonFakeMoveTaskOrdersUnauthorized{}
}

// WithPayload adds the payload to the hide non fake move task orders unauthorized response
func (o *HideNonFakeMoveTaskOrdersUnauthorized) WithPayload(payload *supportmessages.ClientError) *HideNonFakeMoveTaskOrdersUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders unauthorized response
func (o *HideNonFakeMoveTaskOrdersUnauthorized) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersForbiddenCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersForbidden
const HideNonFakeMoveTaskOrdersForbiddenCode int = 403

/*
HideNonFakeMoveTaskOrdersForbidden The request was denied.

swagger:response hideNonFakeMoveTaskOrdersForbidden
*/
type HideNonFakeMoveTaskOrdersForbidden struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersForbidden creates HideNonFakeMoveTaskOrdersForbidden with default headers values
func NewHideNonFakeMoveTaskOrdersForbidden() *HideNonFakeMoveTaskOrdersForbidden {

	return &HideNonFakeMoveTaskOrdersForbidden{}
}

// WithPayload adds the payload to the hide non fake move task orders forbidden response
func (o *HideNonFakeMoveTaskOrdersForbidden) WithPayload(payload *supportmessages.ClientError) *HideNonFakeMoveTaskOrdersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders forbidden response
func (o *HideNonFakeMoveTaskOrdersForbidden) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersNotFoundCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersNotFound
const HideNonFakeMoveTaskOrdersNotFoundCode int = 404

/*
HideNonFakeMoveTaskOrdersNotFound The requested resource wasn't found.

swagger:response hideNonFakeMoveTaskOrdersNotFound
*/
type HideNonFakeMoveTaskOrdersNotFound struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersNotFound creates HideNonFakeMoveTaskOrdersNotFound with default headers values
func NewHideNonFakeMoveTaskOrdersNotFound() *HideNonFakeMoveTaskOrdersNotFound {

	return &HideNonFakeMoveTaskOrdersNotFound{}
}

// WithPayload adds the payload to the hide non fake move task orders not found response
func (o *HideNonFakeMoveTaskOrdersNotFound) WithPayload(payload *supportmessages.ClientError) *HideNonFakeMoveTaskOrdersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders not found response
func (o *HideNonFakeMoveTaskOrdersNotFound) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersConflictCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersConflict
const HideNonFakeMoveTaskOrdersConflictCode int = 409

/*
HideNonFakeMoveTaskOrdersConflict There was a conflict with the request.

swagger:response hideNonFakeMoveTaskOrdersConflict
*/
type HideNonFakeMoveTaskOrdersConflict struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersConflict creates HideNonFakeMoveTaskOrdersConflict with default headers values
func NewHideNonFakeMoveTaskOrdersConflict() *HideNonFakeMoveTaskOrdersConflict {

	return &HideNonFakeMoveTaskOrdersConflict{}
}

// WithPayload adds the payload to the hide non fake move task orders conflict response
func (o *HideNonFakeMoveTaskOrdersConflict) WithPayload(payload *supportmessages.ClientError) *HideNonFakeMoveTaskOrdersConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders conflict response
func (o *HideNonFakeMoveTaskOrdersConflict) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersPreconditionFailedCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersPreconditionFailed
const HideNonFakeMoveTaskOrdersPreconditionFailedCode int = 412

/*
HideNonFakeMoveTaskOrdersPreconditionFailed Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.

swagger:response hideNonFakeMoveTaskOrdersPreconditionFailed
*/
type HideNonFakeMoveTaskOrdersPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersPreconditionFailed creates HideNonFakeMoveTaskOrdersPreconditionFailed with default headers values
func NewHideNonFakeMoveTaskOrdersPreconditionFailed() *HideNonFakeMoveTaskOrdersPreconditionFailed {

	return &HideNonFakeMoveTaskOrdersPreconditionFailed{}
}

// WithPayload adds the payload to the hide non fake move task orders precondition failed response
func (o *HideNonFakeMoveTaskOrdersPreconditionFailed) WithPayload(payload *supportmessages.ClientError) *HideNonFakeMoveTaskOrdersPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders precondition failed response
func (o *HideNonFakeMoveTaskOrdersPreconditionFailed) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersUnprocessableEntityCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersUnprocessableEntity
const HideNonFakeMoveTaskOrdersUnprocessableEntityCode int = 422

/*
HideNonFakeMoveTaskOrdersUnprocessableEntity The payload was unprocessable.

swagger:response hideNonFakeMoveTaskOrdersUnprocessableEntity
*/
type HideNonFakeMoveTaskOrdersUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ValidationError `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersUnprocessableEntity creates HideNonFakeMoveTaskOrdersUnprocessableEntity with default headers values
func NewHideNonFakeMoveTaskOrdersUnprocessableEntity() *HideNonFakeMoveTaskOrdersUnprocessableEntity {

	return &HideNonFakeMoveTaskOrdersUnprocessableEntity{}
}

// WithPayload adds the payload to the hide non fake move task orders unprocessable entity response
func (o *HideNonFakeMoveTaskOrdersUnprocessableEntity) WithPayload(payload *supportmessages.ValidationError) *HideNonFakeMoveTaskOrdersUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders unprocessable entity response
func (o *HideNonFakeMoveTaskOrdersUnprocessableEntity) SetPayload(payload *supportmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideNonFakeMoveTaskOrdersInternalServerErrorCode is the HTTP code returned for type HideNonFakeMoveTaskOrdersInternalServerError
const HideNonFakeMoveTaskOrdersInternalServerErrorCode int = 500

/*
HideNonFakeMoveTaskOrdersInternalServerError A server error occurred.

swagger:response hideNonFakeMoveTaskOrdersInternalServerError
*/
type HideNonFakeMoveTaskOrdersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.Error `json:"body,omitempty"`
}

// NewHideNonFakeMoveTaskOrdersInternalServerError creates HideNonFakeMoveTaskOrdersInternalServerError with default headers values
func NewHideNonFakeMoveTaskOrdersInternalServerError() *HideNonFakeMoveTaskOrdersInternalServerError {

	return &HideNonFakeMoveTaskOrdersInternalServerError{}
}

// WithPayload adds the payload to the hide non fake move task orders internal server error response
func (o *HideNonFakeMoveTaskOrdersInternalServerError) WithPayload(payload *supportmessages.Error) *HideNonFakeMoveTaskOrdersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide non fake move task orders internal server error response
func (o *HideNonFakeMoveTaskOrdersInternalServerError) SetPayload(payload *supportmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideNonFakeMoveTaskOrdersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
