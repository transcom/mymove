// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// CreateWebhookNotificationCreatedCode is the HTTP code returned for type CreateWebhookNotificationCreated
const CreateWebhookNotificationCreatedCode int = 201

/*CreateWebhookNotificationCreated Successful creation

swagger:response createWebhookNotificationCreated
*/
type CreateWebhookNotificationCreated struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.WebhookNotification `json:"body,omitempty"`
}

// NewCreateWebhookNotificationCreated creates CreateWebhookNotificationCreated with default headers values
func NewCreateWebhookNotificationCreated() *CreateWebhookNotificationCreated {

	return &CreateWebhookNotificationCreated{}
}

// WithPayload adds the payload to the create webhook notification created response
func (o *CreateWebhookNotificationCreated) WithPayload(payload *supportmessages.WebhookNotification) *CreateWebhookNotificationCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create webhook notification created response
func (o *CreateWebhookNotificationCreated) SetPayload(payload *supportmessages.WebhookNotification) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWebhookNotificationCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateWebhookNotificationUnprocessableEntityCode is the HTTP code returned for type CreateWebhookNotificationUnprocessableEntity
const CreateWebhookNotificationUnprocessableEntityCode int = 422

/*CreateWebhookNotificationUnprocessableEntity The payload was unprocessable.

swagger:response createWebhookNotificationUnprocessableEntity
*/
type CreateWebhookNotificationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ValidationError `json:"body,omitempty"`
}

// NewCreateWebhookNotificationUnprocessableEntity creates CreateWebhookNotificationUnprocessableEntity with default headers values
func NewCreateWebhookNotificationUnprocessableEntity() *CreateWebhookNotificationUnprocessableEntity {

	return &CreateWebhookNotificationUnprocessableEntity{}
}

// WithPayload adds the payload to the create webhook notification unprocessable entity response
func (o *CreateWebhookNotificationUnprocessableEntity) WithPayload(payload *supportmessages.ValidationError) *CreateWebhookNotificationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create webhook notification unprocessable entity response
func (o *CreateWebhookNotificationUnprocessableEntity) SetPayload(payload *supportmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWebhookNotificationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateWebhookNotificationInternalServerErrorCode is the HTTP code returned for type CreateWebhookNotificationInternalServerError
const CreateWebhookNotificationInternalServerErrorCode int = 500

/*CreateWebhookNotificationInternalServerError A server error occurred.

swagger:response createWebhookNotificationInternalServerError
*/
type CreateWebhookNotificationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.Error `json:"body,omitempty"`
}

// NewCreateWebhookNotificationInternalServerError creates CreateWebhookNotificationInternalServerError with default headers values
func NewCreateWebhookNotificationInternalServerError() *CreateWebhookNotificationInternalServerError {

	return &CreateWebhookNotificationInternalServerError{}
}

// WithPayload adds the payload to the create webhook notification internal server error response
func (o *CreateWebhookNotificationInternalServerError) WithPayload(payload *supportmessages.Error) *CreateWebhookNotificationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create webhook notification internal server error response
func (o *CreateWebhookNotificationInternalServerError) SetPayload(payload *supportmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWebhookNotificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
