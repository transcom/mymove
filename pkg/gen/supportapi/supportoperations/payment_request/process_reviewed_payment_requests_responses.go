// Code generated by go-swagger; DO NOT EDIT.

package payment_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// ProcessReviewedPaymentRequestsOKCode is the HTTP code returned for type ProcessReviewedPaymentRequestsOK
const ProcessReviewedPaymentRequestsOKCode int = 200

/*
ProcessReviewedPaymentRequestsOK Successfully updated status of reviewed payment request and sent to Syncada if that flag is set

swagger:response processReviewedPaymentRequestsOK
*/
type ProcessReviewedPaymentRequestsOK struct {

	/*
	  In: Body
	*/
	Payload supportmessages.PaymentRequests `json:"body,omitempty"`
}

// NewProcessReviewedPaymentRequestsOK creates ProcessReviewedPaymentRequestsOK with default headers values
func NewProcessReviewedPaymentRequestsOK() *ProcessReviewedPaymentRequestsOK {

	return &ProcessReviewedPaymentRequestsOK{}
}

// WithPayload adds the payload to the process reviewed payment requests o k response
func (o *ProcessReviewedPaymentRequestsOK) WithPayload(payload supportmessages.PaymentRequests) *ProcessReviewedPaymentRequestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process reviewed payment requests o k response
func (o *ProcessReviewedPaymentRequestsOK) SetPayload(payload supportmessages.PaymentRequests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessReviewedPaymentRequestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = supportmessages.PaymentRequests{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ProcessReviewedPaymentRequestsBadRequestCode is the HTTP code returned for type ProcessReviewedPaymentRequestsBadRequest
const ProcessReviewedPaymentRequestsBadRequestCode int = 400

/*
ProcessReviewedPaymentRequestsBadRequest The request payload is invalid.

swagger:response processReviewedPaymentRequestsBadRequest
*/
type ProcessReviewedPaymentRequestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewProcessReviewedPaymentRequestsBadRequest creates ProcessReviewedPaymentRequestsBadRequest with default headers values
func NewProcessReviewedPaymentRequestsBadRequest() *ProcessReviewedPaymentRequestsBadRequest {

	return &ProcessReviewedPaymentRequestsBadRequest{}
}

// WithPayload adds the payload to the process reviewed payment requests bad request response
func (o *ProcessReviewedPaymentRequestsBadRequest) WithPayload(payload *supportmessages.ClientError) *ProcessReviewedPaymentRequestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process reviewed payment requests bad request response
func (o *ProcessReviewedPaymentRequestsBadRequest) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessReviewedPaymentRequestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProcessReviewedPaymentRequestsUnauthorizedCode is the HTTP code returned for type ProcessReviewedPaymentRequestsUnauthorized
const ProcessReviewedPaymentRequestsUnauthorizedCode int = 401

/*
ProcessReviewedPaymentRequestsUnauthorized The request was denied.

swagger:response processReviewedPaymentRequestsUnauthorized
*/
type ProcessReviewedPaymentRequestsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewProcessReviewedPaymentRequestsUnauthorized creates ProcessReviewedPaymentRequestsUnauthorized with default headers values
func NewProcessReviewedPaymentRequestsUnauthorized() *ProcessReviewedPaymentRequestsUnauthorized {

	return &ProcessReviewedPaymentRequestsUnauthorized{}
}

// WithPayload adds the payload to the process reviewed payment requests unauthorized response
func (o *ProcessReviewedPaymentRequestsUnauthorized) WithPayload(payload *supportmessages.ClientError) *ProcessReviewedPaymentRequestsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process reviewed payment requests unauthorized response
func (o *ProcessReviewedPaymentRequestsUnauthorized) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessReviewedPaymentRequestsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProcessReviewedPaymentRequestsForbiddenCode is the HTTP code returned for type ProcessReviewedPaymentRequestsForbidden
const ProcessReviewedPaymentRequestsForbiddenCode int = 403

/*
ProcessReviewedPaymentRequestsForbidden The request was denied.

swagger:response processReviewedPaymentRequestsForbidden
*/
type ProcessReviewedPaymentRequestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewProcessReviewedPaymentRequestsForbidden creates ProcessReviewedPaymentRequestsForbidden with default headers values
func NewProcessReviewedPaymentRequestsForbidden() *ProcessReviewedPaymentRequestsForbidden {

	return &ProcessReviewedPaymentRequestsForbidden{}
}

// WithPayload adds the payload to the process reviewed payment requests forbidden response
func (o *ProcessReviewedPaymentRequestsForbidden) WithPayload(payload *supportmessages.ClientError) *ProcessReviewedPaymentRequestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process reviewed payment requests forbidden response
func (o *ProcessReviewedPaymentRequestsForbidden) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessReviewedPaymentRequestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProcessReviewedPaymentRequestsNotFoundCode is the HTTP code returned for type ProcessReviewedPaymentRequestsNotFound
const ProcessReviewedPaymentRequestsNotFoundCode int = 404

/*
ProcessReviewedPaymentRequestsNotFound The requested resource wasn't found.

swagger:response processReviewedPaymentRequestsNotFound
*/
type ProcessReviewedPaymentRequestsNotFound struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewProcessReviewedPaymentRequestsNotFound creates ProcessReviewedPaymentRequestsNotFound with default headers values
func NewProcessReviewedPaymentRequestsNotFound() *ProcessReviewedPaymentRequestsNotFound {

	return &ProcessReviewedPaymentRequestsNotFound{}
}

// WithPayload adds the payload to the process reviewed payment requests not found response
func (o *ProcessReviewedPaymentRequestsNotFound) WithPayload(payload *supportmessages.ClientError) *ProcessReviewedPaymentRequestsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process reviewed payment requests not found response
func (o *ProcessReviewedPaymentRequestsNotFound) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessReviewedPaymentRequestsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProcessReviewedPaymentRequestsUnprocessableEntityCode is the HTTP code returned for type ProcessReviewedPaymentRequestsUnprocessableEntity
const ProcessReviewedPaymentRequestsUnprocessableEntityCode int = 422

/*
ProcessReviewedPaymentRequestsUnprocessableEntity The payload was unprocessable.

swagger:response processReviewedPaymentRequestsUnprocessableEntity
*/
type ProcessReviewedPaymentRequestsUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ValidationError `json:"body,omitempty"`
}

// NewProcessReviewedPaymentRequestsUnprocessableEntity creates ProcessReviewedPaymentRequestsUnprocessableEntity with default headers values
func NewProcessReviewedPaymentRequestsUnprocessableEntity() *ProcessReviewedPaymentRequestsUnprocessableEntity {

	return &ProcessReviewedPaymentRequestsUnprocessableEntity{}
}

// WithPayload adds the payload to the process reviewed payment requests unprocessable entity response
func (o *ProcessReviewedPaymentRequestsUnprocessableEntity) WithPayload(payload *supportmessages.ValidationError) *ProcessReviewedPaymentRequestsUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process reviewed payment requests unprocessable entity response
func (o *ProcessReviewedPaymentRequestsUnprocessableEntity) SetPayload(payload *supportmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessReviewedPaymentRequestsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProcessReviewedPaymentRequestsInternalServerErrorCode is the HTTP code returned for type ProcessReviewedPaymentRequestsInternalServerError
const ProcessReviewedPaymentRequestsInternalServerErrorCode int = 500

/*
ProcessReviewedPaymentRequestsInternalServerError A server error occurred.

swagger:response processReviewedPaymentRequestsInternalServerError
*/
type ProcessReviewedPaymentRequestsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.Error `json:"body,omitempty"`
}

// NewProcessReviewedPaymentRequestsInternalServerError creates ProcessReviewedPaymentRequestsInternalServerError with default headers values
func NewProcessReviewedPaymentRequestsInternalServerError() *ProcessReviewedPaymentRequestsInternalServerError {

	return &ProcessReviewedPaymentRequestsInternalServerError{}
}

// WithPayload adds the payload to the process reviewed payment requests internal server error response
func (o *ProcessReviewedPaymentRequestsInternalServerError) WithPayload(payload *supportmessages.Error) *ProcessReviewedPaymentRequestsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process reviewed payment requests internal server error response
func (o *ProcessReviewedPaymentRequestsInternalServerError) SetPayload(payload *supportmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessReviewedPaymentRequestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
