// Code generated by go-swagger; DO NOT EDIT.

package payment_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// RecalculatePaymentRequestCreatedCode is the HTTP code returned for type RecalculatePaymentRequestCreated
const RecalculatePaymentRequestCreatedCode int = 201

/*
RecalculatePaymentRequestCreated The new payment request with recalculated pricing.

swagger:response recalculatePaymentRequestCreated
*/
type RecalculatePaymentRequestCreated struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.PaymentRequest `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestCreated creates RecalculatePaymentRequestCreated with default headers values
func NewRecalculatePaymentRequestCreated() *RecalculatePaymentRequestCreated {

	return &RecalculatePaymentRequestCreated{}
}

// WithPayload adds the payload to the recalculate payment request created response
func (o *RecalculatePaymentRequestCreated) WithPayload(payload *supportmessages.PaymentRequest) *RecalculatePaymentRequestCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request created response
func (o *RecalculatePaymentRequestCreated) SetPayload(payload *supportmessages.PaymentRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestBadRequestCode is the HTTP code returned for type RecalculatePaymentRequestBadRequest
const RecalculatePaymentRequestBadRequestCode int = 400

/*
RecalculatePaymentRequestBadRequest The request payload is invalid.

swagger:response recalculatePaymentRequestBadRequest
*/
type RecalculatePaymentRequestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestBadRequest creates RecalculatePaymentRequestBadRequest with default headers values
func NewRecalculatePaymentRequestBadRequest() *RecalculatePaymentRequestBadRequest {

	return &RecalculatePaymentRequestBadRequest{}
}

// WithPayload adds the payload to the recalculate payment request bad request response
func (o *RecalculatePaymentRequestBadRequest) WithPayload(payload *supportmessages.ClientError) *RecalculatePaymentRequestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request bad request response
func (o *RecalculatePaymentRequestBadRequest) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestUnauthorizedCode is the HTTP code returned for type RecalculatePaymentRequestUnauthorized
const RecalculatePaymentRequestUnauthorizedCode int = 401

/*
RecalculatePaymentRequestUnauthorized The request was denied.

swagger:response recalculatePaymentRequestUnauthorized
*/
type RecalculatePaymentRequestUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestUnauthorized creates RecalculatePaymentRequestUnauthorized with default headers values
func NewRecalculatePaymentRequestUnauthorized() *RecalculatePaymentRequestUnauthorized {

	return &RecalculatePaymentRequestUnauthorized{}
}

// WithPayload adds the payload to the recalculate payment request unauthorized response
func (o *RecalculatePaymentRequestUnauthorized) WithPayload(payload *supportmessages.ClientError) *RecalculatePaymentRequestUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request unauthorized response
func (o *RecalculatePaymentRequestUnauthorized) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestForbiddenCode is the HTTP code returned for type RecalculatePaymentRequestForbidden
const RecalculatePaymentRequestForbiddenCode int = 403

/*
RecalculatePaymentRequestForbidden The request was denied.

swagger:response recalculatePaymentRequestForbidden
*/
type RecalculatePaymentRequestForbidden struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestForbidden creates RecalculatePaymentRequestForbidden with default headers values
func NewRecalculatePaymentRequestForbidden() *RecalculatePaymentRequestForbidden {

	return &RecalculatePaymentRequestForbidden{}
}

// WithPayload adds the payload to the recalculate payment request forbidden response
func (o *RecalculatePaymentRequestForbidden) WithPayload(payload *supportmessages.ClientError) *RecalculatePaymentRequestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request forbidden response
func (o *RecalculatePaymentRequestForbidden) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestNotFoundCode is the HTTP code returned for type RecalculatePaymentRequestNotFound
const RecalculatePaymentRequestNotFoundCode int = 404

/*
RecalculatePaymentRequestNotFound The requested resource wasn't found.

swagger:response recalculatePaymentRequestNotFound
*/
type RecalculatePaymentRequestNotFound struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestNotFound creates RecalculatePaymentRequestNotFound with default headers values
func NewRecalculatePaymentRequestNotFound() *RecalculatePaymentRequestNotFound {

	return &RecalculatePaymentRequestNotFound{}
}

// WithPayload adds the payload to the recalculate payment request not found response
func (o *RecalculatePaymentRequestNotFound) WithPayload(payload *supportmessages.ClientError) *RecalculatePaymentRequestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request not found response
func (o *RecalculatePaymentRequestNotFound) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestConflictCode is the HTTP code returned for type RecalculatePaymentRequestConflict
const RecalculatePaymentRequestConflictCode int = 409

/*
RecalculatePaymentRequestConflict There was a conflict with the request.

swagger:response recalculatePaymentRequestConflict
*/
type RecalculatePaymentRequestConflict struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestConflict creates RecalculatePaymentRequestConflict with default headers values
func NewRecalculatePaymentRequestConflict() *RecalculatePaymentRequestConflict {

	return &RecalculatePaymentRequestConflict{}
}

// WithPayload adds the payload to the recalculate payment request conflict response
func (o *RecalculatePaymentRequestConflict) WithPayload(payload *supportmessages.ClientError) *RecalculatePaymentRequestConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request conflict response
func (o *RecalculatePaymentRequestConflict) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestPreconditionFailedCode is the HTTP code returned for type RecalculatePaymentRequestPreconditionFailed
const RecalculatePaymentRequestPreconditionFailedCode int = 412

/*
RecalculatePaymentRequestPreconditionFailed Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.

swagger:response recalculatePaymentRequestPreconditionFailed
*/
type RecalculatePaymentRequestPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestPreconditionFailed creates RecalculatePaymentRequestPreconditionFailed with default headers values
func NewRecalculatePaymentRequestPreconditionFailed() *RecalculatePaymentRequestPreconditionFailed {

	return &RecalculatePaymentRequestPreconditionFailed{}
}

// WithPayload adds the payload to the recalculate payment request precondition failed response
func (o *RecalculatePaymentRequestPreconditionFailed) WithPayload(payload *supportmessages.ClientError) *RecalculatePaymentRequestPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request precondition failed response
func (o *RecalculatePaymentRequestPreconditionFailed) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestUnprocessableEntityCode is the HTTP code returned for type RecalculatePaymentRequestUnprocessableEntity
const RecalculatePaymentRequestUnprocessableEntityCode int = 422

/*
RecalculatePaymentRequestUnprocessableEntity The payload was unprocessable.

swagger:response recalculatePaymentRequestUnprocessableEntity
*/
type RecalculatePaymentRequestUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ValidationError `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestUnprocessableEntity creates RecalculatePaymentRequestUnprocessableEntity with default headers values
func NewRecalculatePaymentRequestUnprocessableEntity() *RecalculatePaymentRequestUnprocessableEntity {

	return &RecalculatePaymentRequestUnprocessableEntity{}
}

// WithPayload adds the payload to the recalculate payment request unprocessable entity response
func (o *RecalculatePaymentRequestUnprocessableEntity) WithPayload(payload *supportmessages.ValidationError) *RecalculatePaymentRequestUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request unprocessable entity response
func (o *RecalculatePaymentRequestUnprocessableEntity) SetPayload(payload *supportmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RecalculatePaymentRequestInternalServerErrorCode is the HTTP code returned for type RecalculatePaymentRequestInternalServerError
const RecalculatePaymentRequestInternalServerErrorCode int = 500

/*
RecalculatePaymentRequestInternalServerError A server error occurred.

swagger:response recalculatePaymentRequestInternalServerError
*/
type RecalculatePaymentRequestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.Error `json:"body,omitempty"`
}

// NewRecalculatePaymentRequestInternalServerError creates RecalculatePaymentRequestInternalServerError with default headers values
func NewRecalculatePaymentRequestInternalServerError() *RecalculatePaymentRequestInternalServerError {

	return &RecalculatePaymentRequestInternalServerError{}
}

// WithPayload adds the payload to the recalculate payment request internal server error response
func (o *RecalculatePaymentRequestInternalServerError) WithPayload(payload *supportmessages.Error) *RecalculatePaymentRequestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the recalculate payment request internal server error response
func (o *RecalculatePaymentRequestInternalServerError) SetPayload(payload *supportmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RecalculatePaymentRequestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
