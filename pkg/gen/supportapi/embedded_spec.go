// Code generated by go-swagger; DO NOT EDIT.

package supportapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/support/v1",
  "paths": {
    "/move-task-orders": {
      "post": {
        "description": "Creates an instance of moveTaskOrder.\nCurrently this will also create a number of nested objects but not all.\nIt will currently create\n* MoveTaskOrder\n* MoveOrder\n* Customer\n* User\n* Entitlement\n\nIt will not create addresses or duty stations.\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Creates a move task order",
        "operationId": "createMoveTaskOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created MoveTaskOrder object.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "description": "The request was unauthorized.",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The client doesn't have permissions to perform the request.",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}": {
      "get": {
        "description": "Gets an individual move task order",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets a move task order by ID",
        "operationId": "getMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully retrieve an individual move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        },
        "x-swagger-roles": [
          "transportation_invoicing_officer",
          "transportation_ordering_officer",
          "contracting_officer",
          "ppm_office_users"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move task order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/status": {
      "patch": {
        "description": "Changes move task order status to make it available to prime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Change the status of a move task order to make it available to prime",
        "operationId": "updateMoveTaskOrderStatus",
        "parameters": [
          {
            "type": "string",
            "description": "ID of move order to use",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order status",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/responses/PreconditionFailed"
            }
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        },
        "x-swagger-roles": [
          "transportation_invoicing_officer",
          "transportation_ordering_officer",
          "contracting_officer",
          "ppm_office_users"
        ]
      }
    },
    "/mto-shipments/{mtoShipmentID}/status": {
      "patch": {
        "description": "Updates a shipment's status to APPROVED or REJECTED for the purpose of testing the Prime API. If APPROVED, ` + "`" + `rejectionReason` + "`" + ` should be blank and any value passed through the body will be ignored. If REJECTED, a value in ` + "`" + `rejectionReason` + "`" + ` is required.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "Updates a shipment's status",
        "operationId": "patchMTOShipmentStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchMTOShipmentStatus"
            }
          },
          {
            "type": "string",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the shipment's status",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "409": {
            "description": "Conflict error due to trying to change the status of shipment that is not currently \"SUBMITTED\"",
            "schema": {
              "$ref": "#/responses/Conflict"
            }
          },
          "412": {
            "description": "Precondition failed, likely due to a stale eTag (If-Match) value",
            "schema": {
              "$ref": "#/responses/PreconditionFailed"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the shipment being updated",
          "name": "mtoShipmentID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/status": {
      "patch": {
        "description": "Approves or rejects a payment request, located using the payment request id. It can also add or update an optional rejection reason to add more context to the status.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests"
        ],
        "summary": "Updates status of a payment request by id",
        "operationId": "updatePaymentRequestStatus",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of payment request",
            "name": "paymentRequestID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestStatus"
            }
          },
          {
            "type": "string",
            "description": "Unique value that automatically changes when the request is updated. Required when sending POST or PATCH requests to prevent updating stale data. The same value as the eTag attribute.",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated payment request status.",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid. Check the payment request body and try again.",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "412": {
            "description": "Precondition failed. It is likely the eTag you passed is stale. Fetch the payment request again to get the updated eTag value.",
            "schema": {
              "$ref": "#/responses/PreconditionFailed"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/service-items/{mtoServiceItemID}/status": {
      "patch": {
        "description": "Changes the status of a line item for a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoServiceItem"
        ],
        "summary": "Change the status of a line item for a move order by ID",
        "operationId": "updateMTOServiceItemStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          },
          {
            "type": "string",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated status for a line item for a move task order by ID",
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "409": {
            "description": "Conflict error",
            "schema": {
              "$ref": "#/responses/Conflict"
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/responses/PreconditionFailed"
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        },
        "x-swagger-roles": [
          "transportation_invoicing_officer",
          "transportation_ordering_officer",
          "contracting_officer",
          "ppm_office_users"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of mto service item to use",
          "name": "mtoServiceItemID",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "street_address_1",
        "city",
        "state",
        "postal_code"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postal_code": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "street_address_1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "street_address_2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "street_address_3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "agency": {
          "type": "string",
          "title": "Agency customer is affilated with"
        },
        "currentAddress": {
          "x-nullable": true,
          "$ref": "#/definitions/Address"
        },
        "destinationAddress": {
          "x-nullable": true,
          "$ref": "#/definitions/Address"
        },
        "dodID": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "example": "Vanya"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lastName": {
          "type": "string",
          "example": "Petrovna"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "DutyStation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "address_id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlement": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MTOAgent": {
      "type": "object",
      "properties": {
        "agentType": {
          "type": "string",
          "enum": [
            "RELEASING_AGENT",
            "RECEIVING_AGENT"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "eTag": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MTOAgents": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOAgent"
      }
    },
    "MTOServiceItem": {
      "type": "object",
      "required": [
        "id",
        "moveTaskOrderID",
        "reServiceID",
        "reServiceCode",
        "reServiceName",
        "mtoShipmentID"
      ],
      "properties": {
        "approvedAt": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "reServiceCode": {
          "type": "string"
        },
        "reServiceID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "type": "string"
        },
        "rejectedAt": {
          "type": "string",
          "format": "date"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        },
        "submittedAt": {
          "type": "string",
          "format": "date"
        },
        "total": {
          "type": "integer",
          "format": "cents"
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "MTOServiceItemStatus": {
      "description": "Describes all statuses for a MTOServiceItem",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "MTOServiceItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOServiceItem"
      }
    },
    "MTOShipment": {
      "properties": {
        "approvedDate": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "datetime"
        },
        "customerRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "scheduledPickupDate": {
          "type": "string",
          "format": "date"
        },
        "secondaryDeliveryAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "secondaryPickupAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "shipmentType": {
          "enum": [
            "HHG",
            "INTERNATIONAL_HHG",
            "INTERNATIONAL_UB"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "MTOShipments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipment"
      }
    },
    "MoveOrder": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "customerID": {
          "description": "ID of the Customer this MoveOrder belongs to.\n\nIf creating a MoveTaskOrder. either an existing customerID should be provided or the nested customer object should be populated for creation.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "dateIssued": {
          "description": "The date the orders were issued.",
          "type": "string",
          "format": "date",
          "example": "2020-01-01"
        },
        "destinationDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "destinationDutyStationID": {
          "description": "ID of the destination duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string",
          "readOnly": true
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlement"
        },
        "id": {
          "description": "ID of the MoveOrder object.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "orderNumber": {
          "description": "ID of the military orders associated with this move.",
          "type": "string",
          "x-nullable": true,
          "example": "030-00362"
        },
        "orderType": {
          "type": "string",
          "enum": [
            "GHC",
            "NTS"
          ],
          "x-nullable": true,
          "example": "GHC"
        },
        "orderTypeDetail": {
          "type": "string",
          "x-nullable": true
        },
        "originDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "originDutyStationID": {
          "description": "ID of the origin duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rank": {
          "description": "Rank of the service member, must match specific list of available ranks.",
          "type": "string",
          "example": "E_1"
        },
        "reportByDate": {
          "description": "Date that the service member must report to the new DutyStation by.",
          "type": "string",
          "format": "date",
          "example": "2020-01-01"
        }
      }
    },
    "MoveOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveOrder"
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "required": [
        "moveOrder"
      ],
      "properties": {
        "contractorID": {
          "description": "ID associated with the contractor, in this case Prime\n",
          "type": "string",
          "format": "uuid",
          "example": "5db13bb4-6d29-4bdb-bc81-262f4513ecf6"
        },
        "createdAt": {
          "description": "Date the MoveTaskOrder was created on.",
          "type": "string",
          "format": "date"
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveTaskOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveTaskOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string"
        },
        "id": {
          "description": "ID of the MoveTaskOrder object.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "isAvailableToPrime": {
          "description": "Indicates this MoveTaskOrder is available for Prime API handling.\n\nIn production, only MoveTaskOrders for which this is true will be available to the API.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "isCanceled": {
          "description": "Indicated this MoveTaskOrder has been canceled.",
          "type": "boolean",
          "x-nullable": true
        },
        "moveOrder": {
          "description": "MoveOrder associated with this MoveTaskOrder.",
          "$ref": "#/definitions/MoveOrder"
        },
        "moveOrderID": {
          "description": "ID of the MoveOrder object",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mtoServiceItems": {
          "description": "Array of MTOServiceItems associated with this MoveTaskOrder.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mtoShipments": {
          "description": "array of MTOShipments associated with the MoveTaskOrder.",
          "$ref": "#/definitions/MTOShipments"
        },
        "paymentRequests": {
          "description": "Array of PaymentRequests associated with this MoveTaskOrder.",
          "$ref": "#/definitions/PaymentRequests"
        },
        "ppmEstimatedWeight": {
          "description": "If the move is a PPM, this is the estimated weight in lbs.",
          "type": "integer"
        },
        "ppmType": {
          "description": "If the move is a PPM, indicates whether it is full or partial.",
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ]
        },
        "referenceId": {
          "description": "Unique ID associated with this MoveOrder.\n\nNo two MoveTaskOrders may have the same ID.\nAttempting to create a MoveTaskOrder may fail if this referenceId has been used already.\n",
          "type": "string",
          "example": "1001-3456"
        },
        "updatedAt": {
          "description": "Date on which this MoveTaskOrder was last updated.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrderStatus": {
      "type": "object",
      "properties": {
        "is_available_to_prime": {
          "type": "boolean"
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "PatchMTOShipmentStatus": {
      "properties": {
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "status": {
          "type": "string",
          "enum": [
            "REJECTED",
            "APPROVED",
            "SUBMITTED"
          ]
        }
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "documentPackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestNumber": {
          "type": "string",
          "readOnly": true,
          "example": "1234-5678-1"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "ProofOfServicePackage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "UpdateMTOServiceItemStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "approvedAt": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "reServiceCode": {
          "type": "string"
        },
        "reServiceID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "type": "string"
        },
        "rejectedAt": {
          "type": "string",
          "format": "date"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        },
        "submittedAt": {
          "type": "string",
          "format": "date"
        },
        "total": {
          "type": "integer",
          "format": "cents"
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "UpdatePaymentRequest": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string"
        },
        "proofOfServicePackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        }
      }
    },
    "UpdatePaymentRequestStatus": {
      "type": "object",
      "properties": {
        "eTag": {
          "description": "Attribute of the payment request object that automatically changes when the request is updated. Required when sending POST or PATCH requests to prevent updating stale data. This matches the value passed in the header for If-Match.",
          "type": "string"
        },
        "rejectionReason": {
          "description": "A written reason to provide context for the status.",
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "id",
        "url",
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "filename": {
          "type": "string",
          "format": "binary",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "Conflict": {
      "description": "Conflict error.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "InvalidRequest": {
      "description": "The parameters were invalid.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PreconditionFailed": {
      "description": "A precondition for the request failed.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The payload was unprocessable.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/support/v1",
  "paths": {
    "/move-task-orders": {
      "post": {
        "description": "Creates an instance of moveTaskOrder.\nCurrently this will also create a number of nested objects but not all.\nIt will currently create\n* MoveTaskOrder\n* MoveOrder\n* Customer\n* User\n* Entitlement\n\nIt will not create addresses or duty stations.\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Creates a move task order",
        "operationId": "createMoveTaskOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created MoveTaskOrder object.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The parameters were invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "The request was unauthorized.",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The client doesn't have permissions to perform the request.",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}": {
      "get": {
        "description": "Gets an individual move task order",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets a move task order by ID",
        "operationId": "getMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully retrieve an individual move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The parameters were invalid.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        },
        "x-swagger-roles": [
          "transportation_invoicing_officer",
          "transportation_ordering_officer",
          "contracting_officer",
          "ppm_office_users"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move task order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/status": {
      "patch": {
        "description": "Changes move task order status to make it available to prime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Change the status of a move task order to make it available to prime",
        "operationId": "updateMoveTaskOrderStatus",
        "parameters": [
          {
            "type": "string",
            "description": "ID of move order to use",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order status",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The parameters were invalid.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "description": "A precondition for the request failed.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        },
        "x-swagger-roles": [
          "transportation_invoicing_officer",
          "transportation_ordering_officer",
          "contracting_officer",
          "ppm_office_users"
        ]
      }
    },
    "/mto-shipments/{mtoShipmentID}/status": {
      "patch": {
        "description": "Updates a shipment's status to APPROVED or REJECTED for the purpose of testing the Prime API. If APPROVED, ` + "`" + `rejectionReason` + "`" + ` should be blank and any value passed through the body will be ignored. If REJECTED, a value in ` + "`" + `rejectionReason` + "`" + ` is required.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "Updates a shipment's status",
        "operationId": "patchMTOShipmentStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchMTOShipmentStatus"
            }
          },
          {
            "type": "string",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the shipment's status",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "409": {
            "description": "Conflict error due to trying to change the status of shipment that is not currently \"SUBMITTED\"",
            "schema": {
              "description": "Conflict error.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "412": {
            "description": "Precondition failed, likely due to a stale eTag (If-Match) value",
            "schema": {
              "description": "A precondition for the request failed.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the shipment being updated",
          "name": "mtoShipmentID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/status": {
      "patch": {
        "description": "Approves or rejects a payment request, located using the payment request id. It can also add or update an optional rejection reason to add more context to the status.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests"
        ],
        "summary": "Updates status of a payment request by id",
        "operationId": "updatePaymentRequestStatus",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of payment request",
            "name": "paymentRequestID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestStatus"
            }
          },
          {
            "type": "string",
            "description": "Unique value that automatically changes when the request is updated. Required when sending POST or PATCH requests to prevent updating stale data. The same value as the eTag attribute.",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated payment request status.",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid. Check the payment request body and try again.",
            "schema": {
              "description": "The parameters were invalid.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "412": {
            "description": "Precondition failed. It is likely the eTag you passed is stale. Fetch the payment request again to get the updated eTag value.",
            "schema": {
              "description": "A precondition for the request failed.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/service-items/{mtoServiceItemID}/status": {
      "patch": {
        "description": "Changes the status of a line item for a move order by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoServiceItem"
        ],
        "summary": "Change the status of a line item for a move order by ID",
        "operationId": "updateMTOServiceItemStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          },
          {
            "type": "string",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated status for a line item for a move task order by ID",
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The parameters were invalid.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "409": {
            "description": "Conflict error",
            "schema": {
              "description": "Conflict error.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "description": "A precondition for the request failed.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred.",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        },
        "x-swagger-roles": [
          "transportation_invoicing_officer",
          "transportation_ordering_officer",
          "contracting_officer",
          "ppm_office_users"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of mto service item to use",
          "name": "mtoServiceItemID",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "street_address_1",
        "city",
        "state",
        "postal_code"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postal_code": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "street_address_1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "street_address_2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "street_address_3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "agency": {
          "type": "string",
          "title": "Agency customer is affilated with"
        },
        "currentAddress": {
          "x-nullable": true,
          "$ref": "#/definitions/Address"
        },
        "destinationAddress": {
          "x-nullable": true,
          "$ref": "#/definitions/Address"
        },
        "dodID": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "example": "Vanya"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lastName": {
          "type": "string",
          "example": "Petrovna"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "DutyStation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "address_id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlement": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MTOAgent": {
      "type": "object",
      "properties": {
        "agentType": {
          "type": "string",
          "enum": [
            "RELEASING_AGENT",
            "RECEIVING_AGENT"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "eTag": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MTOAgents": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOAgent"
      }
    },
    "MTOServiceItem": {
      "type": "object",
      "required": [
        "id",
        "moveTaskOrderID",
        "reServiceID",
        "reServiceCode",
        "reServiceName",
        "mtoShipmentID"
      ],
      "properties": {
        "approvedAt": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "reServiceCode": {
          "type": "string"
        },
        "reServiceID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "type": "string"
        },
        "rejectedAt": {
          "type": "string",
          "format": "date"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        },
        "submittedAt": {
          "type": "string",
          "format": "date"
        },
        "total": {
          "type": "integer",
          "format": "cents"
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "MTOServiceItemStatus": {
      "description": "Describes all statuses for a MTOServiceItem",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "MTOServiceItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOServiceItem"
      }
    },
    "MTOShipment": {
      "properties": {
        "approvedDate": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "datetime"
        },
        "customerRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "scheduledPickupDate": {
          "type": "string",
          "format": "date"
        },
        "secondaryDeliveryAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "secondaryPickupAddress": {
          "x-nullabe": true,
          "$ref": "#/definitions/Address"
        },
        "shipmentType": {
          "enum": [
            "HHG",
            "INTERNATIONAL_HHG",
            "INTERNATIONAL_UB"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "MTOShipments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipment"
      }
    },
    "MoveOrder": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "customerID": {
          "description": "ID of the Customer this MoveOrder belongs to.\n\nIf creating a MoveTaskOrder. either an existing customerID should be provided or the nested customer object should be populated for creation.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "dateIssued": {
          "description": "The date the orders were issued.",
          "type": "string",
          "format": "date",
          "example": "2020-01-01"
        },
        "destinationDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "destinationDutyStationID": {
          "description": "ID of the destination duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string",
          "readOnly": true
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlement"
        },
        "id": {
          "description": "ID of the MoveOrder object.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "orderNumber": {
          "description": "ID of the military orders associated with this move.",
          "type": "string",
          "x-nullable": true,
          "example": "030-00362"
        },
        "orderType": {
          "type": "string",
          "enum": [
            "GHC",
            "NTS"
          ],
          "x-nullable": true,
          "example": "GHC"
        },
        "orderTypeDetail": {
          "type": "string",
          "x-nullable": true
        },
        "originDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "originDutyStationID": {
          "description": "ID of the origin duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rank": {
          "description": "Rank of the service member, must match specific list of available ranks.",
          "type": "string",
          "example": "E_1"
        },
        "reportByDate": {
          "description": "Date that the service member must report to the new DutyStation by.",
          "type": "string",
          "format": "date",
          "example": "2020-01-01"
        }
      }
    },
    "MoveOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveOrder"
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "required": [
        "moveOrder"
      ],
      "properties": {
        "contractorID": {
          "description": "ID associated with the contractor, in this case Prime\n",
          "type": "string",
          "format": "uuid",
          "example": "5db13bb4-6d29-4bdb-bc81-262f4513ecf6"
        },
        "createdAt": {
          "description": "Date the MoveTaskOrder was created on.",
          "type": "string",
          "format": "date"
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveTaskOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveTaskOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string"
        },
        "id": {
          "description": "ID of the MoveTaskOrder object.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "isAvailableToPrime": {
          "description": "Indicates this MoveTaskOrder is available for Prime API handling.\n\nIn production, only MoveTaskOrders for which this is true will be available to the API.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "isCanceled": {
          "description": "Indicated this MoveTaskOrder has been canceled.",
          "type": "boolean",
          "x-nullable": true
        },
        "moveOrder": {
          "description": "MoveOrder associated with this MoveTaskOrder.",
          "$ref": "#/definitions/MoveOrder"
        },
        "moveOrderID": {
          "description": "ID of the MoveOrder object",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mtoServiceItems": {
          "description": "Array of MTOServiceItems associated with this MoveTaskOrder.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mtoShipments": {
          "description": "array of MTOShipments associated with the MoveTaskOrder.",
          "$ref": "#/definitions/MTOShipments"
        },
        "paymentRequests": {
          "description": "Array of PaymentRequests associated with this MoveTaskOrder.",
          "$ref": "#/definitions/PaymentRequests"
        },
        "ppmEstimatedWeight": {
          "description": "If the move is a PPM, this is the estimated weight in lbs.",
          "type": "integer"
        },
        "ppmType": {
          "description": "If the move is a PPM, indicates whether it is full or partial.",
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ]
        },
        "referenceId": {
          "description": "Unique ID associated with this MoveOrder.\n\nNo two MoveTaskOrders may have the same ID.\nAttempting to create a MoveTaskOrder may fail if this referenceId has been used already.\n",
          "type": "string",
          "example": "1001-3456"
        },
        "updatedAt": {
          "description": "Date on which this MoveTaskOrder was last updated.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrderStatus": {
      "type": "object",
      "properties": {
        "is_available_to_prime": {
          "type": "boolean"
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "PatchMTOShipmentStatus": {
      "properties": {
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "status": {
          "type": "string",
          "enum": [
            "REJECTED",
            "APPROVED",
            "SUBMITTED"
          ]
        }
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "documentPackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestNumber": {
          "type": "string",
          "readOnly": true,
          "example": "1234-5678-1"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "ProofOfServicePackage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "UpdateMTOServiceItemStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "approvedAt": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "reServiceCode": {
          "type": "string"
        },
        "reServiceID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "type": "string"
        },
        "rejectedAt": {
          "type": "string",
          "format": "date"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        },
        "submittedAt": {
          "type": "string",
          "format": "date"
        },
        "total": {
          "type": "integer",
          "format": "cents"
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "UpdatePaymentRequest": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string"
        },
        "proofOfServicePackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "serviceItemIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
          }
        }
      }
    },
    "UpdatePaymentRequestStatus": {
      "type": "object",
      "properties": {
        "eTag": {
          "description": "Attribute of the payment request object that automatically changes when the request is updated. Required when sending POST or PATCH requests to prevent updating stale data. This matches the value passed in the header for If-Match.",
          "type": "string"
        },
        "rejectionReason": {
          "description": "A written reason to provide context for the status.",
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "id",
        "url",
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "filename": {
          "type": "string",
          "format": "binary",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "Conflict": {
      "description": "Conflict error.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "InvalidRequest": {
      "description": "The parameters were invalid.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PreconditionFailed": {
      "description": "A precondition for the request failed.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The payload was unprocessable.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  }
}`))
}
