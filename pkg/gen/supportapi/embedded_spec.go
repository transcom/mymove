// Code generated by go-swagger; DO NOT EDIT.

package supportapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Milmove Support API gives you programmatic access to support functionality useful for testing and debug.\n\nThis API is not available in production.\n\nAll endpoints are located at ` + "`" + `primelocal/support/v1/` + "`" + `.\n",
    "title": "Milmove Support API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/support/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "### Functionality\nThis endpoint lists all MoveTaskOrders regardless of whether or not they have been made available to Prime.\n\nIt will provide nested information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "listMTOs",
        "operationId": "listMTOs",
        "parameters": [
          {
            "type": "integer",
            "format": "timestamp",
            "description": "Only return move task orders updated since this time.",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "post": {
        "description": "Creates an instance of moveTaskOrder.\nCurrent this will also create a number of nested objects but not all.\nIt will currently create\n* MoveTaskOrder\n* MoveOrder\n* Customer\n* User\n* Entitlement\n\nIt will not create addresses or duty stations. It requires an existing contractor ID, destination duty station ID,\norigin duty station ID, and an uploaded orders ID to be passed into the request.\n\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "createMoveTaskOrder",
        "operationId": "createMoveTaskOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created MoveTaskOrder object.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}": {
      "get": {
        "description": "### Functionality\nThis endpoint gets an individual MoveTaskOrder by ID.\n\nIt will provide nested information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.\n\nThis is a support endpoint and is not available in production.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "getMoveTaskOrder",
        "operationId": "getMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully retrieve an individual move task order.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "UUID of move task order to use.",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/available-to-prime": {
      "patch": {
        "description": "Updates move task order ` + "`" + `availableToPrimeAt` + "`" + ` to make it available to prime. No request body required. \u003cbr /\u003e\n\u003cbr /\u003e\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "makeMoveTaskOrderAvailable",
        "operationId": "makeMoveTaskOrderAvailable",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully made MTO available to Prime.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "412": {
            "$ref": "#/responses/PreconditionFailed"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "UUID of move task order.",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/payment-requests": {
      "get": {
        "description": "### Functionality\n\nThis endpoint lists all PaymentRequests associated with a given MoveTaskOrder.\n\nThis is a support endpoint and is not available in production.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequest"
        ],
        "summary": "listMTOPaymentRequests",
        "operationId": "listMTOPaymentRequests",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Only return move task orders updated since this time.",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved payment requests associated with a given move task order",
            "schema": {
              "$ref": "#/definitions/PaymentRequests"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/mto-shipments/{mtoShipmentID}/status": {
      "patch": {
        "description": "Updates a shipment's status to APPROVED or REJECTED for the purpose of testing the Prime API. If APPROVED, ` + "`" + `rejectionReason` + "`" + ` should be blank and any value passed through the body will be ignored. If REJECTED, a value in ` + "`" + `rejectionReason` + "`" + ` is required. \u003cbr /\u003e \u003cbr /\u003e This is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "updateMTOShipmentStatus",
        "operationId": "updateMTOShipmentStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOShipmentStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the shipment's status.",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          },
          "412": {
            "$ref": "#/responses/PreconditionFailed"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of the shipment being updated.",
          "name": "mtoShipmentID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/edi": {
      "get": {
        "description": "Returns the EDI (Electronic Data Interchange) message for the payment request identified\nby the given payment request ID. Note that the EDI returned in the JSON payload will have \\n where there\nwould normally be line breaks (due to JSON not allowing line breaks in a string).\n\nThis is a support endpoint and will not be available in production.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequest"
        ],
        "summary": "getPaymentRequestEDI",
        "operationId": "getPaymentRequestEDI",
        "responses": {
          "200": {
            "description": "Successfully retrieved payment requests associated with a given move task order",
            "schema": {
              "$ref": "#/definitions/PaymentRequestEDI"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of the payment request for which EDI should be generated.",
          "name": "paymentRequestID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/status": {
      "patch": {
        "description": "Updates status of a payment request to REVIEWED, SENT_TO_GEX, RECEIVED_BY_GEX, or PAID.\n\nA status of REVIEWED can optionally have a ` + "`" + `rejectionReason` + "`" + `.\n\nThis is a support endpoint and is not available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequest"
        ],
        "summary": "updatePaymentRequestStatus",
        "operationId": "updatePaymentRequestStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated payment request status.",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "412": {
            "$ref": "#/responses/PreconditionFailed"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of payment request.",
          "name": "paymentRequestID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/service-items/{mtoServiceItemID}/status": {
      "patch": {
        "description": "Updates the status of a service item for a move order to APPROVED or REJECTED. \u003cbr /\u003e\n\u003cbr /\u003e\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoServiceItem"
        ],
        "summary": "updateMTOServiceItemStatus",
        "operationId": "updateMTOServiceItemStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated service item status for a move task order.",
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          },
          "412": {
            "$ref": "#/responses/PreconditionFailed"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "UUID of mto service item to use.",
          "name": "mtoServiceItemID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/webhook-notify": {
      "post": {
        "description": "This endpoint represents the receiving server, The Prime, in our webhook-client testing workflow. The ` + "`" + `webhook-client` + "`" + ` is responsible for retrieving messages from the webhook_notifications table and sending them to the Prime (this endpoint in our testing case) via an mTLS connection.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "webhook"
        ],
        "summary": "Test endpoint for sending messages via webhook",
        "operationId": "postWebhookNotify",
        "parameters": [
          {
            "description": "The notification sent by webhook-client.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventName": {
                  "description": "Name of event triggered",
                  "type": "string",
                  "example": "paymentRequest.updated"
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
                },
                "object": {
                  "type": "string",
                  "format": "object"
                },
                "objectType": {
                  "description": "The type of object that's being updated",
                  "type": "string",
                  "example": "paymentRequest"
                },
                "triggeredAt": {
                  "description": "Time representing when the event was triggered",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sent",
            "schema": {
              "type": "object",
              "properties": {
                "eventName": {
                  "description": "Name of event triggered",
                  "type": "string",
                  "example": "paymentRequest.updated"
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
                },
                "object": {
                  "type": "string",
                  "format": "object"
                },
                "objectType": {
                  "description": "The type of object that's being updated",
                  "type": "string",
                  "example": "paymentRequest"
                },
                "triggeredAt": {
                  "description": "Time representing when the event was triggered",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "agency": {
          "type": "string",
          "title": "Agency customer is affilated with"
        },
        "currentAddress": {
          "$ref": "#/definitions/Address"
        },
        "dodID": {
          "type": "string"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "example": "Vanya"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lastName": {
          "type": "string",
          "example": "Petrovna"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "Document": {
      "type": "object",
      "required": [
        "id",
        "serviceMemberID",
        "uploads"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "serviceMemberID": {
          "type": "string",
          "format": "uuid",
          "title": "The service member this document belongs to"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "DutyStation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "addressID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlement": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "title",
        "detail"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MTOAgent": {
      "type": "object",
      "properties": {
        "agentType": {
          "type": "string",
          "enum": [
            "RELEASING_AGENT",
            "RECEIVING_AGENT"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOAgents": {
      "type": "array",
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/MTOAgent"
      }
    },
    "MTOServiceItem": {
      "description": "MTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.",
      "type": "object",
      "required": [
        "modelType",
        "moveTaskOrderID"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "modelType": {
          "$ref": "#/definitions/MTOServiceItemModelType"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "reServiceName": {
          "type": "string"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        }
      },
      "discriminator": "modelType"
    },
    "MTOServiceItemModelType": {
      "description": "Describes all model sub-types for a MTOServiceItem model. Prime can only request the following service codes for which they will use the corresponding modelType\n  * DOFSIT - MTOServiceItemDOFSIT\n  * DOSHUT, DDSHUT - MTOServiceItemShuttle\n  * DCRT, DCRTSA, DUCRT - MTOServiceItemDomesticCrating\n",
      "type": "string",
      "enum": [
        "MTOServiceItemBasic",
        "MTOServiceItemDOFSIT",
        "MTOServiceItemShuttle",
        "MTOServiceItemDomesticCrating"
      ]
    },
    "MTOServiceItemStatus": {
      "description": "Describes all statuses for a MTOServiceItem.",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "MTOShipment": {
      "properties": {
        "approvedDate": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "customerRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "$ref": "#/definitions/Address"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "primeActualWeight": {
          "type": "integer",
          "example": 4500
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "scheduledPickupDate": {
          "type": "string",
          "format": "date"
        },
        "secondaryDeliveryAddress": {
          "$ref": "#/definitions/Address"
        },
        "secondaryPickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "shipmentType": {
          "enum": [
            "HHG",
            "INTERNATIONAL_HHG",
            "INTERNATIONAL_UB"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOShipments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipment"
      }
    },
    "MoveOrder": {
      "type": "object",
      "required": [
        "orderNumber",
        "ordersType",
        "rank",
        "reportByDate",
        "issueDate",
        "status"
      ],
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "customerID": {
          "description": "ID of the Customer this MoveOrder belongs to.\n\nIf creating a MoveTaskOrder. either an existing customerID should be provided or the nested customer object should be populated for creation.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "destinationDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "destinationDutyStationID": {
          "description": "ID of the destination duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string",
          "readOnly": true
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlement"
        },
        "id": {
          "description": "ID of the MoveOrder object.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "issueDate": {
          "description": "The date the orders were issued.",
          "type": "string",
          "format": "date"
        },
        "orderNumber": {
          "description": "ID of the military orders associated with this move.",
          "type": "string",
          "x-nullable": true,
          "example": "030-00362"
        },
        "ordersType": {
          "$ref": "#/definitions/OrdersType"
        },
        "originDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "originDutyStationID": {
          "description": "ID of the origin duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rank": {
          "description": "Rank of the service member, must match specific list of available ranks.",
          "type": "string",
          "example": "E_1"
        },
        "reportByDate": {
          "description": "Date that the service member must report to the new DutyStation by.",
          "type": "string",
          "format": "date"
        },
        "status": {
          "$ref": "#/definitions/OrdersStatus"
        },
        "uploadedOrders": {
          "$ref": "#/definitions/Document"
        },
        "uploadedOrdersID": {
          "description": "ID of the uploaded document.",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "MoveStatus": {
      "description": "Current status of this MoveTaskOrder",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ],
      "x-display-value": {
        "APPROVED": "Approved",
        "CANCELED": "Canceled",
        "DRAFT": "Draft",
        "SUBMITTED": "Submitted"
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "required": [
        "moveOrder"
      ],
      "properties": {
        "availableToPrimeAt": {
          "description": "Indicates this MoveTaskOrder is available for Prime API handling.\n\nIn production, only MoveTaskOrders for which this is set will be available to the API.\n",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "contractorID": {
          "description": "ID associated with the contractor, in this case Prime\n",
          "type": "string",
          "format": "uuid",
          "example": "5db13bb4-6d29-4bdb-bc81-262f4513ecf6"
        },
        "createdAt": {
          "description": "Date the MoveTaskOrder was created on.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveTaskOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveTaskOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "ID of the MoveTaskOrder object.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "isCanceled": {
          "description": "Indicated this MoveTaskOrder has been canceled.",
          "type": "boolean",
          "x-nullable": true
        },
        "locator": {
          "description": "Unique 6-character code the customer can use to refer to their move",
          "type": "string",
          "example": "ABC123"
        },
        "moveOrder": {
          "$ref": "#/definitions/MoveOrder"
        },
        "moveOrderID": {
          "description": "ID of the MoveOrder object",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mtoServiceItems": {
          "description": "Array of MTOServiceItems associated with this MoveTaskOrder.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mtoShipments": {
          "$ref": "#/definitions/MTOShipments"
        },
        "paymentRequests": {
          "$ref": "#/definitions/PaymentRequests"
        },
        "ppmEstimatedWeight": {
          "description": "If the move is a PPM, this is the estimated weight in lbs.",
          "type": "integer"
        },
        "ppmType": {
          "description": "If the move is a PPM, indicates whether it is full or partial.",
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ]
        },
        "referenceId": {
          "description": "Unique ID associated with this MoveOrder.\n\nNo two MoveTaskOrders may have the same ID.\nAttempting to create a MoveTaskOrder may fail if this referenceId has been used already.\n",
          "type": "string",
          "example": "1001-3456"
        },
        "status": {
          "$ref": "#/definitions/MoveStatus"
        },
        "updatedAt": {
          "description": "Date on which this MoveTaskOrder was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "OrdersStatus": {
      "type": "string",
      "title": "Move status",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ],
      "x-display-value": {
        "APPROVED": "Approved",
        "CANCELED": "Canceled",
        "DRAFT": "Draft",
        "SUBMITTED": "Submitted"
      }
    },
    "OrdersType": {
      "type": "string",
      "title": "Orders type",
      "enum": [
        "PERMANENT_CHANGE_OF_STATION",
        "RETIREMENT",
        "SEPARATION",
        "GHC",
        "NTS"
      ],
      "x-display-value": {
        "GHC": "GHC",
        "NTS": "NTS",
        "PERMANENT_CHANGE_OF_STATION": "Permanent Change Of Station (PCS)",
        "RETIREMENT": "Retirement",
        "SEPARATION": "Separation"
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "documentPackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestNumber": {
          "type": "string",
          "readOnly": true,
          "example": "1234-5678-1"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestEDI": {
      "type": "object",
      "properties": {
        "edi": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "ProofOfServicePackage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "UpdateMTOServiceItemStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "description": {
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ],
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer",
          "readOnly": true
        },
        "rate": {
          "type": "integer",
          "readOnly": true
        },
        "reServiceCode": {
          "type": "string",
          "readOnly": true
        },
        "reServiceName": {
          "type": "string",
          "readOnly": true
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        },
        "total": {
          "type": "integer",
          "format": "cents",
          "readOnly": true
        }
      }
    },
    "UpdateMTOShipmentStatus": {
      "properties": {
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "status": {
          "type": "string",
          "enum": [
            "REJECTED",
            "APPROVED",
            "SUBMITTED"
          ]
        }
      }
    },
    "UpdatePaymentRequestStatus": {
      "type": "object",
      "properties": {
        "eTag": {
          "description": "Attribute of the payment request object that automatically changes when the request is updated. This matches the value passed in the header for ` + "`" + `If-Match` + "`" + `. Required when sending PUT or PATCH requests to prevent updating stale data.",
          "type": "string",
          "readOnly": true
        },
        "rejectionReason": {
          "description": "A written reason to provide context for the status.",
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "id",
        "url",
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "filename": {
          "type": "string",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "status": {
          "type": "string",
          "enum": [
            "INFECTED",
            "CLEAN",
            "PROCESSING"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalidFields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalidFields": {
          "type": "object",
          "additionalProperties": {
            "description": "List of errors for the field",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "responses": {
    "Conflict": {
      "description": "There was a conflict with the request.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "InvalidRequest": {
      "description": "The request payload is invalid.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "A server error occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The payload was unprocessable.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  },
  "tags": [
    {
      "name": "moveTaskOrder"
    },
    {
      "name": "paymentRequest"
    },
    {
      "name": "mtoServiceItem"
    },
    {
      "name": "mtoShipment"
    },
    {
      "name": "webhook"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Milmove Support API gives you programmatic access to support functionality useful for testing and debug.\n\nThis API is not available in production.\n\nAll endpoints are located at ` + "`" + `primelocal/support/v1/` + "`" + `.\n",
    "title": "Milmove Support API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/support/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "### Functionality\nThis endpoint lists all MoveTaskOrders regardless of whether or not they have been made available to Prime.\n\nIt will provide nested information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "listMTOs",
        "operationId": "listMTOs",
        "parameters": [
          {
            "type": "integer",
            "format": "timestamp",
            "description": "Only return move task orders updated since this time.",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates an instance of moveTaskOrder.\nCurrent this will also create a number of nested objects but not all.\nIt will currently create\n* MoveTaskOrder\n* MoveOrder\n* Customer\n* User\n* Entitlement\n\nIt will not create addresses or duty stations. It requires an existing contractor ID, destination duty station ID,\norigin duty station ID, and an uploaded orders ID to be passed into the request.\n\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "createMoveTaskOrder",
        "operationId": "createMoveTaskOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created MoveTaskOrder object.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}": {
      "get": {
        "description": "### Functionality\nThis endpoint gets an individual MoveTaskOrder by ID.\n\nIt will provide nested information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.\n\nThis is a support endpoint and is not available in production.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "getMoveTaskOrder",
        "operationId": "getMoveTaskOrder",
        "responses": {
          "200": {
            "description": "Successfully retrieve an individual move task order.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "UUID of move task order to use.",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/available-to-prime": {
      "patch": {
        "description": "Updates move task order ` + "`" + `availableToPrimeAt` + "`" + ` to make it available to prime. No request body required. \u003cbr /\u003e\n\u003cbr /\u003e\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "makeMoveTaskOrderAvailable",
        "operationId": "makeMoveTaskOrderAvailable",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully made MTO available to Prime.",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "UUID of move task order.",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/payment-requests": {
      "get": {
        "description": "### Functionality\n\nThis endpoint lists all PaymentRequests associated with a given MoveTaskOrder.\n\nThis is a support endpoint and is not available in production.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequest"
        ],
        "summary": "listMTOPaymentRequests",
        "operationId": "listMTOPaymentRequests",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Only return move task orders updated since this time.",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved payment requests associated with a given move task order",
            "schema": {
              "$ref": "#/definitions/PaymentRequests"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/mto-shipments/{mtoShipmentID}/status": {
      "patch": {
        "description": "Updates a shipment's status to APPROVED or REJECTED for the purpose of testing the Prime API. If APPROVED, ` + "`" + `rejectionReason` + "`" + ` should be blank and any value passed through the body will be ignored. If REJECTED, a value in ` + "`" + `rejectionReason` + "`" + ` is required. \u003cbr /\u003e \u003cbr /\u003e This is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "updateMTOShipmentStatus",
        "operationId": "updateMTOShipmentStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOShipmentStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the shipment's status.",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "There was a conflict with the request.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of the shipment being updated.",
          "name": "mtoShipmentID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/edi": {
      "get": {
        "description": "Returns the EDI (Electronic Data Interchange) message for the payment request identified\nby the given payment request ID. Note that the EDI returned in the JSON payload will have \\n where there\nwould normally be line breaks (due to JSON not allowing line breaks in a string).\n\nThis is a support endpoint and will not be available in production.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequest"
        ],
        "summary": "getPaymentRequestEDI",
        "operationId": "getPaymentRequestEDI",
        "responses": {
          "200": {
            "description": "Successfully retrieved payment requests associated with a given move task order",
            "schema": {
              "$ref": "#/definitions/PaymentRequestEDI"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of the payment request for which EDI should be generated.",
          "name": "paymentRequestID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests/{paymentRequestID}/status": {
      "patch": {
        "description": "Updates status of a payment request to REVIEWED, SENT_TO_GEX, RECEIVED_BY_GEX, or PAID.\n\nA status of REVIEWED can optionally have a ` + "`" + `rejectionReason` + "`" + `.\n\nThis is a support endpoint and is not available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequest"
        ],
        "summary": "updatePaymentRequestStatus",
        "operationId": "updatePaymentRequestStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePaymentRequestStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated payment request status.",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "UUID of payment request.",
          "name": "paymentRequestID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/service-items/{mtoServiceItemID}/status": {
      "patch": {
        "description": "Updates the status of a service item for a move order to APPROVED or REJECTED. \u003cbr /\u003e\n\u003cbr /\u003e\nThis is a support endpoint and will not be available in production.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoServiceItem"
        ],
        "summary": "updateMTOServiceItemStatus",
        "operationId": "updateMTOServiceItemStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated service item status for a move task order.",
            "schema": {
              "$ref": "#/definitions/UpdateMTOServiceItemStatus"
            }
          },
          "400": {
            "description": "The request payload is invalid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested resource wasn't found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "There was a conflict with the request.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "UUID of mto service item to use.",
          "name": "mtoServiceItemID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/webhook-notify": {
      "post": {
        "description": "This endpoint represents the receiving server, The Prime, in our webhook-client testing workflow. The ` + "`" + `webhook-client` + "`" + ` is responsible for retrieving messages from the webhook_notifications table and sending them to the Prime (this endpoint in our testing case) via an mTLS connection.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "webhook"
        ],
        "summary": "Test endpoint for sending messages via webhook",
        "operationId": "postWebhookNotify",
        "parameters": [
          {
            "description": "The notification sent by webhook-client.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventName": {
                  "description": "Name of event triggered",
                  "type": "string",
                  "example": "paymentRequest.updated"
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
                },
                "object": {
                  "type": "string",
                  "format": "object"
                },
                "objectType": {
                  "description": "The type of object that's being updated",
                  "type": "string",
                  "example": "paymentRequest"
                },
                "triggeredAt": {
                  "description": "Time representing when the event was triggered",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sent",
            "schema": {
              "type": "object",
              "properties": {
                "eventName": {
                  "description": "Name of event triggered",
                  "type": "string",
                  "example": "paymentRequest.updated"
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
                },
                "object": {
                  "type": "string",
                  "format": "object"
                },
                "objectType": {
                  "description": "The type of object that's being updated",
                  "type": "string",
                  "example": "paymentRequest"
                },
                "triggeredAt": {
                  "description": "Time representing when the event was triggered",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "must be authenticated to use this endpoint"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "agency": {
          "type": "string",
          "title": "Agency customer is affilated with"
        },
        "currentAddress": {
          "$ref": "#/definitions/Address"
        },
        "dodID": {
          "type": "string"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "example": "Vanya"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lastName": {
          "type": "string",
          "example": "Petrovna"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "Document": {
      "type": "object",
      "required": [
        "id",
        "serviceMemberID",
        "uploads"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "serviceMemberID": {
          "type": "string",
          "format": "uuid",
          "title": "The service member this document belongs to"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "DutyStation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "addressID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlement": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "readOnly": true,
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "title",
        "detail"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MTOAgent": {
      "type": "object",
      "properties": {
        "agentType": {
          "type": "string",
          "enum": [
            "RELEASING_AGENT",
            "RECEIVING_AGENT"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOAgents": {
      "type": "array",
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/MTOAgent"
      }
    },
    "MTOServiceItem": {
      "description": "MTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.",
      "type": "object",
      "required": [
        "modelType",
        "moveTaskOrderID"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "modelType": {
          "$ref": "#/definitions/MTOServiceItemModelType"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "reServiceName": {
          "type": "string"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        }
      },
      "discriminator": "modelType"
    },
    "MTOServiceItemModelType": {
      "description": "Describes all model sub-types for a MTOServiceItem model. Prime can only request the following service codes for which they will use the corresponding modelType\n  * DOFSIT - MTOServiceItemDOFSIT\n  * DOSHUT, DDSHUT - MTOServiceItemShuttle\n  * DCRT, DCRTSA, DUCRT - MTOServiceItemDomesticCrating\n",
      "type": "string",
      "enum": [
        "MTOServiceItemBasic",
        "MTOServiceItemDOFSIT",
        "MTOServiceItemShuttle",
        "MTOServiceItemDomesticCrating"
      ]
    },
    "MTOServiceItemStatus": {
      "description": "Describes all statuses for a MTOServiceItem.",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "MTOShipment": {
      "properties": {
        "approvedDate": {
          "type": "string",
          "format": "date"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "customerRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "$ref": "#/definitions/Address"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "primeActualWeight": {
          "type": "integer",
          "example": 4500
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "scheduledPickupDate": {
          "type": "string",
          "format": "date"
        },
        "secondaryDeliveryAddress": {
          "$ref": "#/definitions/Address"
        },
        "secondaryPickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "shipmentType": {
          "enum": [
            "HHG",
            "INTERNATIONAL_HHG",
            "INTERNATIONAL_UB"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MTOShipments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipment"
      }
    },
    "MoveOrder": {
      "type": "object",
      "required": [
        "orderNumber",
        "ordersType",
        "rank",
        "reportByDate",
        "issueDate",
        "status"
      ],
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "customerID": {
          "description": "ID of the Customer this MoveOrder belongs to.\n\nIf creating a MoveTaskOrder. either an existing customerID should be provided or the nested customer object should be populated for creation.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "destinationDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "destinationDutyStationID": {
          "description": "ID of the destination duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string",
          "readOnly": true
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlement"
        },
        "id": {
          "description": "ID of the MoveOrder object.",
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "issueDate": {
          "description": "The date the orders were issued.",
          "type": "string",
          "format": "date"
        },
        "orderNumber": {
          "description": "ID of the military orders associated with this move.",
          "type": "string",
          "x-nullable": true,
          "example": "030-00362"
        },
        "ordersType": {
          "$ref": "#/definitions/OrdersType"
        },
        "originDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "originDutyStationID": {
          "description": "ID of the origin duty station.\n\nIf creating a MoveTaskOrder, this should match an existing duty station.\n",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "rank": {
          "description": "Rank of the service member, must match specific list of available ranks.",
          "type": "string",
          "example": "E_1"
        },
        "reportByDate": {
          "description": "Date that the service member must report to the new DutyStation by.",
          "type": "string",
          "format": "date"
        },
        "status": {
          "$ref": "#/definitions/OrdersStatus"
        },
        "uploadedOrders": {
          "$ref": "#/definitions/Document"
        },
        "uploadedOrdersID": {
          "description": "ID of the uploaded document.",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "MoveStatus": {
      "description": "Current status of this MoveTaskOrder",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ],
      "x-display-value": {
        "APPROVED": "Approved",
        "CANCELED": "Canceled",
        "DRAFT": "Draft",
        "SUBMITTED": "Submitted"
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "required": [
        "moveOrder"
      ],
      "properties": {
        "availableToPrimeAt": {
          "description": "Indicates this MoveTaskOrder is available for Prime API handling.\n\nIn production, only MoveTaskOrders for which this is set will be available to the API.\n",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "contractorID": {
          "description": "ID associated with the contractor, in this case Prime\n",
          "type": "string",
          "format": "uuid",
          "example": "5db13bb4-6d29-4bdb-bc81-262f4513ecf6"
        },
        "createdAt": {
          "description": "Date the MoveTaskOrder was created on.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "description": "Uniquely identifies the state of the MoveTaskOrder object (but not the nested objects)\n\nIt will change everytime the object is updated. Client should store the value.\nUpdates to this MoveTaskOrder will require that this eTag be passed in with the If-Match header.\n",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "ID of the MoveTaskOrder object.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "isCanceled": {
          "description": "Indicated this MoveTaskOrder has been canceled.",
          "type": "boolean",
          "x-nullable": true
        },
        "locator": {
          "description": "Unique 6-character code the customer can use to refer to their move",
          "type": "string",
          "example": "ABC123"
        },
        "moveOrder": {
          "$ref": "#/definitions/MoveOrder"
        },
        "moveOrderID": {
          "description": "ID of the MoveOrder object",
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mtoServiceItems": {
          "description": "Array of MTOServiceItems associated with this MoveTaskOrder.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mtoShipments": {
          "$ref": "#/definitions/MTOShipments"
        },
        "paymentRequests": {
          "$ref": "#/definitions/PaymentRequests"
        },
        "ppmEstimatedWeight": {
          "description": "If the move is a PPM, this is the estimated weight in lbs.",
          "type": "integer"
        },
        "ppmType": {
          "description": "If the move is a PPM, indicates whether it is full or partial.",
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ]
        },
        "referenceId": {
          "description": "Unique ID associated with this MoveOrder.\n\nNo two MoveTaskOrders may have the same ID.\nAttempting to create a MoveTaskOrder may fail if this referenceId has been used already.\n",
          "type": "string",
          "example": "1001-3456"
        },
        "status": {
          "$ref": "#/definitions/MoveStatus"
        },
        "updatedAt": {
          "description": "Date on which this MoveTaskOrder was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "OrdersStatus": {
      "type": "string",
      "title": "Move status",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ],
      "x-display-value": {
        "APPROVED": "Approved",
        "CANCELED": "Canceled",
        "DRAFT": "Draft",
        "SUBMITTED": "Submitted"
      }
    },
    "OrdersType": {
      "type": "string",
      "title": "Orders type",
      "enum": [
        "PERMANENT_CHANGE_OF_STATION",
        "RETIREMENT",
        "SEPARATION",
        "GHC",
        "NTS"
      ],
      "x-display-value": {
        "GHC": "GHC",
        "NTS": "NTS",
        "PERMANENT_CHANGE_OF_STATION": "Permanent Change Of Station (PCS)",
        "RETIREMENT": "Retirement",
        "SEPARATION": "Separation"
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "documentPackage": {
          "$ref": "#/definitions/ProofOfServicePackage"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "paymentRequestNumber": {
          "type": "string",
          "readOnly": true,
          "example": "1234-5678-1"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestEDI": {
      "type": "object",
      "properties": {
        "edi": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "ProofOfServicePackage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "UpdateMTOServiceItemStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "description": {
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ],
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "quantity": {
          "type": "integer",
          "readOnly": true
        },
        "rate": {
          "type": "integer",
          "readOnly": true
        },
        "reServiceCode": {
          "type": "string",
          "readOnly": true
        },
        "reServiceName": {
          "type": "string",
          "readOnly": true
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "item was too heavy"
        },
        "status": {
          "$ref": "#/definitions/MTOServiceItemStatus"
        },
        "total": {
          "type": "integer",
          "format": "cents",
          "readOnly": true
        }
      }
    },
    "UpdateMTOShipmentStatus": {
      "properties": {
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "status": {
          "type": "string",
          "enum": [
            "REJECTED",
            "APPROVED",
            "SUBMITTED"
          ]
        }
      }
    },
    "UpdatePaymentRequestStatus": {
      "type": "object",
      "properties": {
        "eTag": {
          "description": "Attribute of the payment request object that automatically changes when the request is updated. This matches the value passed in the header for ` + "`" + `If-Match` + "`" + `. Required when sending PUT or PATCH requests to prevent updating stale data.",
          "type": "string",
          "readOnly": true
        },
        "rejectionReason": {
          "description": "A written reason to provide context for the status.",
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "id",
        "url",
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "filename": {
          "type": "string",
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "status": {
          "type": "string",
          "enum": [
            "INFECTED",
            "CLEAN",
            "PROCESSING"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalidFields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalidFields": {
          "type": "object",
          "additionalProperties": {
            "description": "List of errors for the field",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "responses": {
    "Conflict": {
      "description": "There was a conflict with the request.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "InvalidRequest": {
      "description": "The request payload is invalid.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "A server error occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The payload was unprocessable.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  },
  "tags": [
    {
      "name": "moveTaskOrder"
    },
    {
      "name": "paymentRequest"
    },
    {
      "name": "mtoServiceItem"
    },
    {
      "name": "mtoShipment"
    },
    {
      "name": "webhook"
    }
  ]
}`))
}
