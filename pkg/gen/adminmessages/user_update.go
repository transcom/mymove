// Code generated by go-swagger; DO NOT EDIT.

package adminmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserUpdate user update
//
// swagger:model UserUpdate
type UserUpdate struct {

	// active
	Active *bool `json:"active,omitempty"`

	// okta email
	// Pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
	OktaEmail *string `json:"oktaEmail,omitempty"`

	// revoke admin session
	RevokeAdminSession *bool `json:"revokeAdminSession,omitempty"`

	// revoke mil session
	RevokeMilSession *bool `json:"revokeMilSession,omitempty"`

	// revoke office session
	RevokeOfficeSession *bool `json:"revokeOfficeSession,omitempty"`
}

// Validate validates this user update
func (m *UserUpdate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOktaEmail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserUpdate) validateOktaEmail(formats strfmt.Registry) error {
	if swag.IsZero(m.OktaEmail) { // not required
		return nil
	}

	if err := validate.Pattern("oktaEmail", "body", *m.OktaEmail, `^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user update based on context it is used
func (m *UserUpdate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserUpdate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserUpdate) UnmarshalBinary(b []byte) error {
	var res UserUpdate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
