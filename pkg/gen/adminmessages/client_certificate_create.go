// Code generated by go-swagger; DO NOT EDIT.

package adminmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClientCertificateCreate client certificate create
//
// swagger:model ClientCertificateCreate
type ClientCertificateCreate struct {

	// allow air force orders read
	AllowAirForceOrdersRead bool `json:"allowAirForceOrdersRead,omitempty"`

	// allow air force orders write
	AllowAirForceOrdersWrite bool `json:"allowAirForceOrdersWrite,omitempty"`

	// allow army orders read
	AllowArmyOrdersRead bool `json:"allowArmyOrdersRead,omitempty"`

	// allow army orders write
	AllowArmyOrdersWrite bool `json:"allowArmyOrdersWrite,omitempty"`

	// allow coast guard orders read
	AllowCoastGuardOrdersRead bool `json:"allowCoastGuardOrdersRead,omitempty"`

	// allow coast guard orders write
	AllowCoastGuardOrdersWrite bool `json:"allowCoastGuardOrdersWrite,omitempty"`

	// allow marine corps orders read
	AllowMarineCorpsOrdersRead bool `json:"allowMarineCorpsOrdersRead,omitempty"`

	// allow marine corps orders write
	AllowMarineCorpsOrdersWrite bool `json:"allowMarineCorpsOrdersWrite,omitempty"`

	// allow navy orders read
	AllowNavyOrdersRead bool `json:"allowNavyOrdersRead,omitempty"`

	// allow navy orders write
	AllowNavyOrdersWrite bool `json:"allowNavyOrdersWrite,omitempty"`

	// allow orders API
	AllowOrdersAPI bool `json:"allowOrdersAPI,omitempty"`

	// allow prime
	AllowPrime bool `json:"allowPrime,omitempty"`

	// email
	// Example: user@example.com
	// Required: true
	Email *string `json:"email"`

	// sha256 digest
	// Example: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
	// Required: true
	Sha256Digest *string `json:"sha256Digest"`

	// subject
	// Example: CN=example-user,OU=DoD+OU=PKI+OU=CONTRACTOR,O=U.S. Government,C=US
	// Required: true
	Subject *string `json:"subject"`
}

// Validate validates this client certificate create
func (m *ClientCertificateCreate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSha256Digest(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubject(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClientCertificateCreate) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	return nil
}

func (m *ClientCertificateCreate) validateSha256Digest(formats strfmt.Registry) error {

	if err := validate.Required("sha256Digest", "body", m.Sha256Digest); err != nil {
		return err
	}

	return nil
}

func (m *ClientCertificateCreate) validateSubject(formats strfmt.Registry) error {

	if err := validate.Required("subject", "body", m.Subject); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this client certificate create based on context it is used
func (m *ClientCertificateCreate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClientCertificateCreate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClientCertificateCreate) UnmarshalBinary(b []byte) error {
	var res ClientCertificateCreate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
