// Code generated by go-swagger; DO NOT EDIT.

package moves

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/pptasmessages"
)

// ListReportsReader is a Reader for the ListReports structure.
type ListReportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListReportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListReportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListReportsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListReportsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListReportsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /moves] listReports", response, response.Code())
	}
}

// NewListReportsOK creates a ListReportsOK with default headers values
func NewListReportsOK() *ListReportsOK {
	return &ListReportsOK{}
}

/*
ListReportsOK describes a response with status code 200, with default header values.

Successfully retrieved moves. A successful fetch might still return zero moves.
*/
type ListReportsOK struct {
	Payload pptasmessages.ListReports
}

// IsSuccess returns true when this list reports o k response has a 2xx status code
func (o *ListReportsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list reports o k response has a 3xx status code
func (o *ListReportsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list reports o k response has a 4xx status code
func (o *ListReportsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list reports o k response has a 5xx status code
func (o *ListReportsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list reports o k response a status code equal to that given
func (o *ListReportsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list reports o k response
func (o *ListReportsOK) Code() int {
	return 200
}

func (o *ListReportsOK) Error() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsOK  %+v", 200, o.Payload)
}

func (o *ListReportsOK) String() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsOK  %+v", 200, o.Payload)
}

func (o *ListReportsOK) GetPayload() pptasmessages.ListReports {
	return o.Payload
}

func (o *ListReportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportsUnauthorized creates a ListReportsUnauthorized with default headers values
func NewListReportsUnauthorized() *ListReportsUnauthorized {
	return &ListReportsUnauthorized{}
}

/*
ListReportsUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type ListReportsUnauthorized struct {
	Payload *pptasmessages.ClientError
}

// IsSuccess returns true when this list reports unauthorized response has a 2xx status code
func (o *ListReportsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list reports unauthorized response has a 3xx status code
func (o *ListReportsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list reports unauthorized response has a 4xx status code
func (o *ListReportsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list reports unauthorized response has a 5xx status code
func (o *ListReportsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list reports unauthorized response a status code equal to that given
func (o *ListReportsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list reports unauthorized response
func (o *ListReportsUnauthorized) Code() int {
	return 401
}

func (o *ListReportsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListReportsUnauthorized) String() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListReportsUnauthorized) GetPayload() *pptasmessages.ClientError {
	return o.Payload
}

func (o *ListReportsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pptasmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportsForbidden creates a ListReportsForbidden with default headers values
func NewListReportsForbidden() *ListReportsForbidden {
	return &ListReportsForbidden{}
}

/*
ListReportsForbidden describes a response with status code 403, with default header values.

The request was denied.
*/
type ListReportsForbidden struct {
	Payload *pptasmessages.ClientError
}

// IsSuccess returns true when this list reports forbidden response has a 2xx status code
func (o *ListReportsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list reports forbidden response has a 3xx status code
func (o *ListReportsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list reports forbidden response has a 4xx status code
func (o *ListReportsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list reports forbidden response has a 5xx status code
func (o *ListReportsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list reports forbidden response a status code equal to that given
func (o *ListReportsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list reports forbidden response
func (o *ListReportsForbidden) Code() int {
	return 403
}

func (o *ListReportsForbidden) Error() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsForbidden  %+v", 403, o.Payload)
}

func (o *ListReportsForbidden) String() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsForbidden  %+v", 403, o.Payload)
}

func (o *ListReportsForbidden) GetPayload() *pptasmessages.ClientError {
	return o.Payload
}

func (o *ListReportsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pptasmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportsInternalServerError creates a ListReportsInternalServerError with default headers values
func NewListReportsInternalServerError() *ListReportsInternalServerError {
	return &ListReportsInternalServerError{}
}

/*
ListReportsInternalServerError describes a response with status code 500, with default header values.

An unexpected error has occurred in the server.
*/
type ListReportsInternalServerError struct {
	Payload *pptasmessages.ClientError
}

// IsSuccess returns true when this list reports internal server error response has a 2xx status code
func (o *ListReportsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list reports internal server error response has a 3xx status code
func (o *ListReportsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list reports internal server error response has a 4xx status code
func (o *ListReportsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list reports internal server error response has a 5xx status code
func (o *ListReportsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list reports internal server error response a status code equal to that given
func (o *ListReportsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list reports internal server error response
func (o *ListReportsInternalServerError) Code() int {
	return 500
}

func (o *ListReportsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListReportsInternalServerError) String() string {
	return fmt.Sprintf("[GET /moves][%d] listReportsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListReportsInternalServerError) GetPayload() *pptasmessages.ClientError {
	return o.Payload
}

func (o *ListReportsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pptasmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
