// Code generated by go-swagger; DO NOT EDIT.

package addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOconusLocationParams creates a new GetOconusLocationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOconusLocationParams() *GetOconusLocationParams {
	return &GetOconusLocationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOconusLocationParamsWithTimeout creates a new GetOconusLocationParams object
// with the ability to set a timeout on a request.
func NewGetOconusLocationParamsWithTimeout(timeout time.Duration) *GetOconusLocationParams {
	return &GetOconusLocationParams{
		timeout: timeout,
	}
}

// NewGetOconusLocationParamsWithContext creates a new GetOconusLocationParams object
// with the ability to set a context for a request.
func NewGetOconusLocationParamsWithContext(ctx context.Context) *GetOconusLocationParams {
	return &GetOconusLocationParams{
		Context: ctx,
	}
}

// NewGetOconusLocationParamsWithHTTPClient creates a new GetOconusLocationParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOconusLocationParamsWithHTTPClient(client *http.Client) *GetOconusLocationParams {
	return &GetOconusLocationParams{
		HTTPClient: client,
	}
}

/*
GetOconusLocationParams contains all the parameters to send to the API endpoint

	for the get oconus location operation.

	Typically these are written to a http.Request.
*/
type GetOconusLocationParams struct {

	// Country.
	Country string

	// Search.
	Search string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get oconus location params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOconusLocationParams) WithDefaults() *GetOconusLocationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get oconus location params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOconusLocationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get oconus location params
func (o *GetOconusLocationParams) WithTimeout(timeout time.Duration) *GetOconusLocationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get oconus location params
func (o *GetOconusLocationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get oconus location params
func (o *GetOconusLocationParams) WithContext(ctx context.Context) *GetOconusLocationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get oconus location params
func (o *GetOconusLocationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get oconus location params
func (o *GetOconusLocationParams) WithHTTPClient(client *http.Client) *GetOconusLocationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get oconus location params
func (o *GetOconusLocationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCountry adds the country to the get oconus location params
func (o *GetOconusLocationParams) WithCountry(country string) *GetOconusLocationParams {
	o.SetCountry(country)
	return o
}

// SetCountry adds the country to the get oconus location params
func (o *GetOconusLocationParams) SetCountry(country string) {
	o.Country = country
}

// WithSearch adds the search to the get oconus location params
func (o *GetOconusLocationParams) WithSearch(search string) *GetOconusLocationParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the get oconus location params
func (o *GetOconusLocationParams) SetSearch(search string) {
	o.Search = search
}

// WriteToRequest writes these params to a swagger request
func (o *GetOconusLocationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param country
	if err := r.SetPathParam("country", o.Country); err != nil {
		return err
	}

	// path param search
	if err := r.SetPathParam("search", o.Search); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
