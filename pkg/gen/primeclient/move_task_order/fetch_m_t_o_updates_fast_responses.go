// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// FetchMTOUpdatesFastReader is a Reader for the FetchMTOUpdatesFast structure.
type FetchMTOUpdatesFastReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FetchMTOUpdatesFastReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFetchMTOUpdatesFastOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFetchMTOUpdatesFastBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFetchMTOUpdatesFastUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFetchMTOUpdatesFastForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFetchMTOUpdatesFastNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFetchMTOUpdatesFastInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFetchMTOUpdatesFastOK creates a FetchMTOUpdatesFastOK with default headers values
func NewFetchMTOUpdatesFastOK() *FetchMTOUpdatesFastOK {
	return &FetchMTOUpdatesFastOK{}
}

/* FetchMTOUpdatesFastOK describes a response with status code 200, with default header values.

Successfully retrieved move task orders where `availableToPrimeAt` has been set.
*/
type FetchMTOUpdatesFastOK struct {
	Payload primemessages.FetchMoveTaskOrders
}

func (o *FetchMTOUpdatesFastOK) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/fast][%d] fetchMTOUpdatesFastOK  %+v", 200, o.Payload)
}
func (o *FetchMTOUpdatesFastOK) GetPayload() primemessages.FetchMoveTaskOrders {
	return o.Payload
}

func (o *FetchMTOUpdatesFastOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchMTOUpdatesFastBadRequest creates a FetchMTOUpdatesFastBadRequest with default headers values
func NewFetchMTOUpdatesFastBadRequest() *FetchMTOUpdatesFastBadRequest {
	return &FetchMTOUpdatesFastBadRequest{}
}

/* FetchMTOUpdatesFastBadRequest describes a response with status code 400, with default header values.

The request payload is invalid.
*/
type FetchMTOUpdatesFastBadRequest struct {
	Payload *primemessages.ClientError
}

func (o *FetchMTOUpdatesFastBadRequest) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/fast][%d] fetchMTOUpdatesFastBadRequest  %+v", 400, o.Payload)
}
func (o *FetchMTOUpdatesFastBadRequest) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *FetchMTOUpdatesFastBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchMTOUpdatesFastUnauthorized creates a FetchMTOUpdatesFastUnauthorized with default headers values
func NewFetchMTOUpdatesFastUnauthorized() *FetchMTOUpdatesFastUnauthorized {
	return &FetchMTOUpdatesFastUnauthorized{}
}

/* FetchMTOUpdatesFastUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type FetchMTOUpdatesFastUnauthorized struct {
	Payload *primemessages.ClientError
}

func (o *FetchMTOUpdatesFastUnauthorized) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/fast][%d] fetchMTOUpdatesFastUnauthorized  %+v", 401, o.Payload)
}
func (o *FetchMTOUpdatesFastUnauthorized) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *FetchMTOUpdatesFastUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchMTOUpdatesFastForbidden creates a FetchMTOUpdatesFastForbidden with default headers values
func NewFetchMTOUpdatesFastForbidden() *FetchMTOUpdatesFastForbidden {
	return &FetchMTOUpdatesFastForbidden{}
}

/* FetchMTOUpdatesFastForbidden describes a response with status code 403, with default header values.

The request was denied.
*/
type FetchMTOUpdatesFastForbidden struct {
	Payload *primemessages.ClientError
}

func (o *FetchMTOUpdatesFastForbidden) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/fast][%d] fetchMTOUpdatesFastForbidden  %+v", 403, o.Payload)
}
func (o *FetchMTOUpdatesFastForbidden) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *FetchMTOUpdatesFastForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchMTOUpdatesFastNotFound creates a FetchMTOUpdatesFastNotFound with default headers values
func NewFetchMTOUpdatesFastNotFound() *FetchMTOUpdatesFastNotFound {
	return &FetchMTOUpdatesFastNotFound{}
}

/* FetchMTOUpdatesFastNotFound describes a response with status code 404, with default header values.

The requested resource wasn't found.
*/
type FetchMTOUpdatesFastNotFound struct {
	Payload *primemessages.ClientError
}

func (o *FetchMTOUpdatesFastNotFound) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/fast][%d] fetchMTOUpdatesFastNotFound  %+v", 404, o.Payload)
}
func (o *FetchMTOUpdatesFastNotFound) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *FetchMTOUpdatesFastNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchMTOUpdatesFastInternalServerError creates a FetchMTOUpdatesFastInternalServerError with default headers values
func NewFetchMTOUpdatesFastInternalServerError() *FetchMTOUpdatesFastInternalServerError {
	return &FetchMTOUpdatesFastInternalServerError{}
}

/* FetchMTOUpdatesFastInternalServerError describes a response with status code 500, with default header values.

A server error occurred.
*/
type FetchMTOUpdatesFastInternalServerError struct {
	Payload *primemessages.Error
}

func (o *FetchMTOUpdatesFastInternalServerError) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/fast][%d] fetchMTOUpdatesFastInternalServerError  %+v", 500, o.Payload)
}
func (o *FetchMTOUpdatesFastInternalServerError) GetPayload() *primemessages.Error {
	return o.Payload
}

func (o *FetchMTOUpdatesFastInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
