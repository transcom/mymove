// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// GetMoveReader is a Reader for the GetMove structure.
type GetMoveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMoveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMoveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMoveUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMoveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMoveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMoveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMoveOK creates a GetMoveOK with default headers values
func NewGetMoveOK() *GetMoveOK {
	return &GetMoveOK{}
}

/*GetMoveOK handles this case with default header values.

Successfully retrieve an individual move task order.
*/
type GetMoveOK struct {
	Payload *primemessages.MoveTaskOrder
}

func (o *GetMoveOK) Error() string {
	return fmt.Sprintf("[GET /move/{locator}][%d] getMoveOK  %+v", 200, o.Payload)
}

func (o *GetMoveOK) GetPayload() *primemessages.MoveTaskOrder {
	return o.Payload
}

func (o *GetMoveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.MoveTaskOrder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMoveUnauthorized creates a GetMoveUnauthorized with default headers values
func NewGetMoveUnauthorized() *GetMoveUnauthorized {
	return &GetMoveUnauthorized{}
}

/*GetMoveUnauthorized handles this case with default header values.

The request was denied.
*/
type GetMoveUnauthorized struct {
	Payload *primemessages.ClientError
}

func (o *GetMoveUnauthorized) Error() string {
	return fmt.Sprintf("[GET /move/{locator}][%d] getMoveUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMoveUnauthorized) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *GetMoveUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMoveForbidden creates a GetMoveForbidden with default headers values
func NewGetMoveForbidden() *GetMoveForbidden {
	return &GetMoveForbidden{}
}

/*GetMoveForbidden handles this case with default header values.

The request was denied.
*/
type GetMoveForbidden struct {
	Payload *primemessages.ClientError
}

func (o *GetMoveForbidden) Error() string {
	return fmt.Sprintf("[GET /move/{locator}][%d] getMoveForbidden  %+v", 403, o.Payload)
}

func (o *GetMoveForbidden) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *GetMoveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMoveNotFound creates a GetMoveNotFound with default headers values
func NewGetMoveNotFound() *GetMoveNotFound {
	return &GetMoveNotFound{}
}

/*GetMoveNotFound handles this case with default header values.

The requested resource wasn't found.
*/
type GetMoveNotFound struct {
	Payload *primemessages.ClientError
}

func (o *GetMoveNotFound) Error() string {
	return fmt.Sprintf("[GET /move/{locator}][%d] getMoveNotFound  %+v", 404, o.Payload)
}

func (o *GetMoveNotFound) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *GetMoveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMoveInternalServerError creates a GetMoveInternalServerError with default headers values
func NewGetMoveInternalServerError() *GetMoveInternalServerError {
	return &GetMoveInternalServerError{}
}

/*GetMoveInternalServerError handles this case with default header values.

A server error occurred.
*/
type GetMoveInternalServerError struct {
	Payload *primemessages.Error
}

func (o *GetMoveInternalServerError) Error() string {
	return fmt.Sprintf("[GET /move/{locator}][%d] getMoveInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMoveInternalServerError) GetPayload() *primemessages.Error {
	return o.Payload
}

func (o *GetMoveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
