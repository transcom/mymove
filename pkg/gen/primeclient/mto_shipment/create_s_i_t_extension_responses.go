// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// CreateSITExtensionReader is a Reader for the CreateSITExtension structure.
type CreateSITExtensionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSITExtensionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateSITExtensionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSITExtensionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateSITExtensionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSITExtensionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSITExtensionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateSITExtensionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateSITExtensionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSITExtensionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /mto-shipments/{mtoShipmentID}/sit-extensions] createSITExtension", response, response.Code())
	}
}

// NewCreateSITExtensionCreated creates a CreateSITExtensionCreated with default headers values
func NewCreateSITExtensionCreated() *CreateSITExtensionCreated {
	return &CreateSITExtensionCreated{}
}

/*
CreateSITExtensionCreated describes a response with status code 201, with default header values.

Successfully created the sit extension request.
*/
type CreateSITExtensionCreated struct {
	Payload *primemessages.SITExtension
}

// IsSuccess returns true when this create s i t extension created response has a 2xx status code
func (o *CreateSITExtensionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create s i t extension created response has a 3xx status code
func (o *CreateSITExtensionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension created response has a 4xx status code
func (o *CreateSITExtensionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create s i t extension created response has a 5xx status code
func (o *CreateSITExtensionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create s i t extension created response a status code equal to that given
func (o *CreateSITExtensionCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create s i t extension created response
func (o *CreateSITExtensionCreated) Code() int {
	return 201
}

func (o *CreateSITExtensionCreated) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionCreated  %+v", 201, o.Payload)
}

func (o *CreateSITExtensionCreated) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionCreated  %+v", 201, o.Payload)
}

func (o *CreateSITExtensionCreated) GetPayload() *primemessages.SITExtension {
	return o.Payload
}

func (o *CreateSITExtensionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.SITExtension)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSITExtensionBadRequest creates a CreateSITExtensionBadRequest with default headers values
func NewCreateSITExtensionBadRequest() *CreateSITExtensionBadRequest {
	return &CreateSITExtensionBadRequest{}
}

/*
CreateSITExtensionBadRequest describes a response with status code 400, with default header values.

The request payload is invalid.
*/
type CreateSITExtensionBadRequest struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this create s i t extension bad request response has a 2xx status code
func (o *CreateSITExtensionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s i t extension bad request response has a 3xx status code
func (o *CreateSITExtensionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension bad request response has a 4xx status code
func (o *CreateSITExtensionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s i t extension bad request response has a 5xx status code
func (o *CreateSITExtensionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create s i t extension bad request response a status code equal to that given
func (o *CreateSITExtensionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create s i t extension bad request response
func (o *CreateSITExtensionBadRequest) Code() int {
	return 400
}

func (o *CreateSITExtensionBadRequest) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSITExtensionBadRequest) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSITExtensionBadRequest) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *CreateSITExtensionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSITExtensionUnauthorized creates a CreateSITExtensionUnauthorized with default headers values
func NewCreateSITExtensionUnauthorized() *CreateSITExtensionUnauthorized {
	return &CreateSITExtensionUnauthorized{}
}

/*
CreateSITExtensionUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type CreateSITExtensionUnauthorized struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this create s i t extension unauthorized response has a 2xx status code
func (o *CreateSITExtensionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s i t extension unauthorized response has a 3xx status code
func (o *CreateSITExtensionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension unauthorized response has a 4xx status code
func (o *CreateSITExtensionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s i t extension unauthorized response has a 5xx status code
func (o *CreateSITExtensionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create s i t extension unauthorized response a status code equal to that given
func (o *CreateSITExtensionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create s i t extension unauthorized response
func (o *CreateSITExtensionUnauthorized) Code() int {
	return 401
}

func (o *CreateSITExtensionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateSITExtensionUnauthorized) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateSITExtensionUnauthorized) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *CreateSITExtensionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSITExtensionForbidden creates a CreateSITExtensionForbidden with default headers values
func NewCreateSITExtensionForbidden() *CreateSITExtensionForbidden {
	return &CreateSITExtensionForbidden{}
}

/*
CreateSITExtensionForbidden describes a response with status code 403, with default header values.

The request was denied.
*/
type CreateSITExtensionForbidden struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this create s i t extension forbidden response has a 2xx status code
func (o *CreateSITExtensionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s i t extension forbidden response has a 3xx status code
func (o *CreateSITExtensionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension forbidden response has a 4xx status code
func (o *CreateSITExtensionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s i t extension forbidden response has a 5xx status code
func (o *CreateSITExtensionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create s i t extension forbidden response a status code equal to that given
func (o *CreateSITExtensionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create s i t extension forbidden response
func (o *CreateSITExtensionForbidden) Code() int {
	return 403
}

func (o *CreateSITExtensionForbidden) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionForbidden  %+v", 403, o.Payload)
}

func (o *CreateSITExtensionForbidden) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionForbidden  %+v", 403, o.Payload)
}

func (o *CreateSITExtensionForbidden) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *CreateSITExtensionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSITExtensionNotFound creates a CreateSITExtensionNotFound with default headers values
func NewCreateSITExtensionNotFound() *CreateSITExtensionNotFound {
	return &CreateSITExtensionNotFound{}
}

/*
CreateSITExtensionNotFound describes a response with status code 404, with default header values.

The requested resource wasn't found.
*/
type CreateSITExtensionNotFound struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this create s i t extension not found response has a 2xx status code
func (o *CreateSITExtensionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s i t extension not found response has a 3xx status code
func (o *CreateSITExtensionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension not found response has a 4xx status code
func (o *CreateSITExtensionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s i t extension not found response has a 5xx status code
func (o *CreateSITExtensionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create s i t extension not found response a status code equal to that given
func (o *CreateSITExtensionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create s i t extension not found response
func (o *CreateSITExtensionNotFound) Code() int {
	return 404
}

func (o *CreateSITExtensionNotFound) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionNotFound  %+v", 404, o.Payload)
}

func (o *CreateSITExtensionNotFound) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionNotFound  %+v", 404, o.Payload)
}

func (o *CreateSITExtensionNotFound) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *CreateSITExtensionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSITExtensionConflict creates a CreateSITExtensionConflict with default headers values
func NewCreateSITExtensionConflict() *CreateSITExtensionConflict {
	return &CreateSITExtensionConflict{}
}

/*
CreateSITExtensionConflict describes a response with status code 409, with default header values.

The request could not be processed because of conflict in the current state of the resource.
*/
type CreateSITExtensionConflict struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this create s i t extension conflict response has a 2xx status code
func (o *CreateSITExtensionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s i t extension conflict response has a 3xx status code
func (o *CreateSITExtensionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension conflict response has a 4xx status code
func (o *CreateSITExtensionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s i t extension conflict response has a 5xx status code
func (o *CreateSITExtensionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create s i t extension conflict response a status code equal to that given
func (o *CreateSITExtensionConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create s i t extension conflict response
func (o *CreateSITExtensionConflict) Code() int {
	return 409
}

func (o *CreateSITExtensionConflict) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionConflict  %+v", 409, o.Payload)
}

func (o *CreateSITExtensionConflict) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionConflict  %+v", 409, o.Payload)
}

func (o *CreateSITExtensionConflict) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *CreateSITExtensionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSITExtensionUnprocessableEntity creates a CreateSITExtensionUnprocessableEntity with default headers values
func NewCreateSITExtensionUnprocessableEntity() *CreateSITExtensionUnprocessableEntity {
	return &CreateSITExtensionUnprocessableEntity{}
}

/*
CreateSITExtensionUnprocessableEntity describes a response with status code 422, with default header values.

The request was unprocessable, likely due to bad input from the requester.
*/
type CreateSITExtensionUnprocessableEntity struct {
	Payload *primemessages.ValidationError
}

// IsSuccess returns true when this create s i t extension unprocessable entity response has a 2xx status code
func (o *CreateSITExtensionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s i t extension unprocessable entity response has a 3xx status code
func (o *CreateSITExtensionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension unprocessable entity response has a 4xx status code
func (o *CreateSITExtensionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s i t extension unprocessable entity response has a 5xx status code
func (o *CreateSITExtensionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create s i t extension unprocessable entity response a status code equal to that given
func (o *CreateSITExtensionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create s i t extension unprocessable entity response
func (o *CreateSITExtensionUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateSITExtensionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateSITExtensionUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateSITExtensionUnprocessableEntity) GetPayload() *primemessages.ValidationError {
	return o.Payload
}

func (o *CreateSITExtensionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSITExtensionInternalServerError creates a CreateSITExtensionInternalServerError with default headers values
func NewCreateSITExtensionInternalServerError() *CreateSITExtensionInternalServerError {
	return &CreateSITExtensionInternalServerError{}
}

/*
CreateSITExtensionInternalServerError describes a response with status code 500, with default header values.

A server error occurred.
*/
type CreateSITExtensionInternalServerError struct {
	Payload *primemessages.Error
}

// IsSuccess returns true when this create s i t extension internal server error response has a 2xx status code
func (o *CreateSITExtensionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s i t extension internal server error response has a 3xx status code
func (o *CreateSITExtensionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s i t extension internal server error response has a 4xx status code
func (o *CreateSITExtensionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create s i t extension internal server error response has a 5xx status code
func (o *CreateSITExtensionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create s i t extension internal server error response a status code equal to that given
func (o *CreateSITExtensionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create s i t extension internal server error response
func (o *CreateSITExtensionInternalServerError) Code() int {
	return 500
}

func (o *CreateSITExtensionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSITExtensionInternalServerError) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/sit-extensions][%d] createSITExtensionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSITExtensionInternalServerError) GetPayload() *primemessages.Error {
	return o.Payload
}

func (o *CreateSITExtensionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
