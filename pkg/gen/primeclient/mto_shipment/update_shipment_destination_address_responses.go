// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// UpdateShipmentDestinationAddressReader is a Reader for the UpdateShipmentDestinationAddress structure.
type UpdateShipmentDestinationAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateShipmentDestinationAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateShipmentDestinationAddressCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateShipmentDestinationAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateShipmentDestinationAddressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateShipmentDestinationAddressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateShipmentDestinationAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateShipmentDestinationAddressConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewUpdateShipmentDestinationAddressPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateShipmentDestinationAddressUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateShipmentDestinationAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates] updateShipmentDestinationAddress", response, response.Code())
	}
}

// NewUpdateShipmentDestinationAddressCreated creates a UpdateShipmentDestinationAddressCreated with default headers values
func NewUpdateShipmentDestinationAddressCreated() *UpdateShipmentDestinationAddressCreated {
	return &UpdateShipmentDestinationAddressCreated{}
}

/*
UpdateShipmentDestinationAddressCreated describes a response with status code 201, with default header values.

Successfully created the address update request.
*/
type UpdateShipmentDestinationAddressCreated struct {
	Payload *primemessages.ShipmentAddressUpdate
}

// IsSuccess returns true when this update shipment destination address created response has a 2xx status code
func (o *UpdateShipmentDestinationAddressCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update shipment destination address created response has a 3xx status code
func (o *UpdateShipmentDestinationAddressCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address created response has a 4xx status code
func (o *UpdateShipmentDestinationAddressCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update shipment destination address created response has a 5xx status code
func (o *UpdateShipmentDestinationAddressCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address created response a status code equal to that given
func (o *UpdateShipmentDestinationAddressCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update shipment destination address created response
func (o *UpdateShipmentDestinationAddressCreated) Code() int {
	return 201
}

func (o *UpdateShipmentDestinationAddressCreated) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressCreated  %+v", 201, o.Payload)
}

func (o *UpdateShipmentDestinationAddressCreated) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressCreated  %+v", 201, o.Payload)
}

func (o *UpdateShipmentDestinationAddressCreated) GetPayload() *primemessages.ShipmentAddressUpdate {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ShipmentAddressUpdate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressBadRequest creates a UpdateShipmentDestinationAddressBadRequest with default headers values
func NewUpdateShipmentDestinationAddressBadRequest() *UpdateShipmentDestinationAddressBadRequest {
	return &UpdateShipmentDestinationAddressBadRequest{}
}

/*
UpdateShipmentDestinationAddressBadRequest describes a response with status code 400, with default header values.

The request payload is invalid.
*/
type UpdateShipmentDestinationAddressBadRequest struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this update shipment destination address bad request response has a 2xx status code
func (o *UpdateShipmentDestinationAddressBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address bad request response has a 3xx status code
func (o *UpdateShipmentDestinationAddressBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address bad request response has a 4xx status code
func (o *UpdateShipmentDestinationAddressBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update shipment destination address bad request response has a 5xx status code
func (o *UpdateShipmentDestinationAddressBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address bad request response a status code equal to that given
func (o *UpdateShipmentDestinationAddressBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update shipment destination address bad request response
func (o *UpdateShipmentDestinationAddressBadRequest) Code() int {
	return 400
}

func (o *UpdateShipmentDestinationAddressBadRequest) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateShipmentDestinationAddressBadRequest) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateShipmentDestinationAddressBadRequest) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressUnauthorized creates a UpdateShipmentDestinationAddressUnauthorized with default headers values
func NewUpdateShipmentDestinationAddressUnauthorized() *UpdateShipmentDestinationAddressUnauthorized {
	return &UpdateShipmentDestinationAddressUnauthorized{}
}

/*
UpdateShipmentDestinationAddressUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type UpdateShipmentDestinationAddressUnauthorized struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this update shipment destination address unauthorized response has a 2xx status code
func (o *UpdateShipmentDestinationAddressUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address unauthorized response has a 3xx status code
func (o *UpdateShipmentDestinationAddressUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address unauthorized response has a 4xx status code
func (o *UpdateShipmentDestinationAddressUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update shipment destination address unauthorized response has a 5xx status code
func (o *UpdateShipmentDestinationAddressUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address unauthorized response a status code equal to that given
func (o *UpdateShipmentDestinationAddressUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update shipment destination address unauthorized response
func (o *UpdateShipmentDestinationAddressUnauthorized) Code() int {
	return 401
}

func (o *UpdateShipmentDestinationAddressUnauthorized) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateShipmentDestinationAddressUnauthorized) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateShipmentDestinationAddressUnauthorized) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressForbidden creates a UpdateShipmentDestinationAddressForbidden with default headers values
func NewUpdateShipmentDestinationAddressForbidden() *UpdateShipmentDestinationAddressForbidden {
	return &UpdateShipmentDestinationAddressForbidden{}
}

/*
UpdateShipmentDestinationAddressForbidden describes a response with status code 403, with default header values.

The request was denied.
*/
type UpdateShipmentDestinationAddressForbidden struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this update shipment destination address forbidden response has a 2xx status code
func (o *UpdateShipmentDestinationAddressForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address forbidden response has a 3xx status code
func (o *UpdateShipmentDestinationAddressForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address forbidden response has a 4xx status code
func (o *UpdateShipmentDestinationAddressForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update shipment destination address forbidden response has a 5xx status code
func (o *UpdateShipmentDestinationAddressForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address forbidden response a status code equal to that given
func (o *UpdateShipmentDestinationAddressForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update shipment destination address forbidden response
func (o *UpdateShipmentDestinationAddressForbidden) Code() int {
	return 403
}

func (o *UpdateShipmentDestinationAddressForbidden) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressForbidden  %+v", 403, o.Payload)
}

func (o *UpdateShipmentDestinationAddressForbidden) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressForbidden  %+v", 403, o.Payload)
}

func (o *UpdateShipmentDestinationAddressForbidden) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressNotFound creates a UpdateShipmentDestinationAddressNotFound with default headers values
func NewUpdateShipmentDestinationAddressNotFound() *UpdateShipmentDestinationAddressNotFound {
	return &UpdateShipmentDestinationAddressNotFound{}
}

/*
UpdateShipmentDestinationAddressNotFound describes a response with status code 404, with default header values.

The requested resource wasn't found.
*/
type UpdateShipmentDestinationAddressNotFound struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this update shipment destination address not found response has a 2xx status code
func (o *UpdateShipmentDestinationAddressNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address not found response has a 3xx status code
func (o *UpdateShipmentDestinationAddressNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address not found response has a 4xx status code
func (o *UpdateShipmentDestinationAddressNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update shipment destination address not found response has a 5xx status code
func (o *UpdateShipmentDestinationAddressNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address not found response a status code equal to that given
func (o *UpdateShipmentDestinationAddressNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update shipment destination address not found response
func (o *UpdateShipmentDestinationAddressNotFound) Code() int {
	return 404
}

func (o *UpdateShipmentDestinationAddressNotFound) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressNotFound  %+v", 404, o.Payload)
}

func (o *UpdateShipmentDestinationAddressNotFound) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressNotFound  %+v", 404, o.Payload)
}

func (o *UpdateShipmentDestinationAddressNotFound) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressConflict creates a UpdateShipmentDestinationAddressConflict with default headers values
func NewUpdateShipmentDestinationAddressConflict() *UpdateShipmentDestinationAddressConflict {
	return &UpdateShipmentDestinationAddressConflict{}
}

/*
UpdateShipmentDestinationAddressConflict describes a response with status code 409, with default header values.

The request could not be processed because of conflict in the current state of the resource.
*/
type UpdateShipmentDestinationAddressConflict struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this update shipment destination address conflict response has a 2xx status code
func (o *UpdateShipmentDestinationAddressConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address conflict response has a 3xx status code
func (o *UpdateShipmentDestinationAddressConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address conflict response has a 4xx status code
func (o *UpdateShipmentDestinationAddressConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update shipment destination address conflict response has a 5xx status code
func (o *UpdateShipmentDestinationAddressConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address conflict response a status code equal to that given
func (o *UpdateShipmentDestinationAddressConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update shipment destination address conflict response
func (o *UpdateShipmentDestinationAddressConflict) Code() int {
	return 409
}

func (o *UpdateShipmentDestinationAddressConflict) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressConflict  %+v", 409, o.Payload)
}

func (o *UpdateShipmentDestinationAddressConflict) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressConflict  %+v", 409, o.Payload)
}

func (o *UpdateShipmentDestinationAddressConflict) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressPreconditionFailed creates a UpdateShipmentDestinationAddressPreconditionFailed with default headers values
func NewUpdateShipmentDestinationAddressPreconditionFailed() *UpdateShipmentDestinationAddressPreconditionFailed {
	return &UpdateShipmentDestinationAddressPreconditionFailed{}
}

/*
UpdateShipmentDestinationAddressPreconditionFailed describes a response with status code 412, with default header values.

Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.
*/
type UpdateShipmentDestinationAddressPreconditionFailed struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this update shipment destination address precondition failed response has a 2xx status code
func (o *UpdateShipmentDestinationAddressPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address precondition failed response has a 3xx status code
func (o *UpdateShipmentDestinationAddressPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address precondition failed response has a 4xx status code
func (o *UpdateShipmentDestinationAddressPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update shipment destination address precondition failed response has a 5xx status code
func (o *UpdateShipmentDestinationAddressPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address precondition failed response a status code equal to that given
func (o *UpdateShipmentDestinationAddressPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the update shipment destination address precondition failed response
func (o *UpdateShipmentDestinationAddressPreconditionFailed) Code() int {
	return 412
}

func (o *UpdateShipmentDestinationAddressPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressPreconditionFailed  %+v", 412, o.Payload)
}

func (o *UpdateShipmentDestinationAddressPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressPreconditionFailed  %+v", 412, o.Payload)
}

func (o *UpdateShipmentDestinationAddressPreconditionFailed) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressUnprocessableEntity creates a UpdateShipmentDestinationAddressUnprocessableEntity with default headers values
func NewUpdateShipmentDestinationAddressUnprocessableEntity() *UpdateShipmentDestinationAddressUnprocessableEntity {
	return &UpdateShipmentDestinationAddressUnprocessableEntity{}
}

/*
UpdateShipmentDestinationAddressUnprocessableEntity describes a response with status code 422, with default header values.

The request was unprocessable, likely due to bad input from the requester.
*/
type UpdateShipmentDestinationAddressUnprocessableEntity struct {
	Payload *primemessages.ValidationError
}

// IsSuccess returns true when this update shipment destination address unprocessable entity response has a 2xx status code
func (o *UpdateShipmentDestinationAddressUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address unprocessable entity response has a 3xx status code
func (o *UpdateShipmentDestinationAddressUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address unprocessable entity response has a 4xx status code
func (o *UpdateShipmentDestinationAddressUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update shipment destination address unprocessable entity response has a 5xx status code
func (o *UpdateShipmentDestinationAddressUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update shipment destination address unprocessable entity response a status code equal to that given
func (o *UpdateShipmentDestinationAddressUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update shipment destination address unprocessable entity response
func (o *UpdateShipmentDestinationAddressUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateShipmentDestinationAddressUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateShipmentDestinationAddressUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateShipmentDestinationAddressUnprocessableEntity) GetPayload() *primemessages.ValidationError {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateShipmentDestinationAddressInternalServerError creates a UpdateShipmentDestinationAddressInternalServerError with default headers values
func NewUpdateShipmentDestinationAddressInternalServerError() *UpdateShipmentDestinationAddressInternalServerError {
	return &UpdateShipmentDestinationAddressInternalServerError{}
}

/*
UpdateShipmentDestinationAddressInternalServerError describes a response with status code 500, with default header values.

A server error occurred.
*/
type UpdateShipmentDestinationAddressInternalServerError struct {
	Payload *primemessages.Error
}

// IsSuccess returns true when this update shipment destination address internal server error response has a 2xx status code
func (o *UpdateShipmentDestinationAddressInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update shipment destination address internal server error response has a 3xx status code
func (o *UpdateShipmentDestinationAddressInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update shipment destination address internal server error response has a 4xx status code
func (o *UpdateShipmentDestinationAddressInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update shipment destination address internal server error response has a 5xx status code
func (o *UpdateShipmentDestinationAddressInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update shipment destination address internal server error response a status code equal to that given
func (o *UpdateShipmentDestinationAddressInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update shipment destination address internal server error response
func (o *UpdateShipmentDestinationAddressInternalServerError) Code() int {
	return 500
}

func (o *UpdateShipmentDestinationAddressInternalServerError) Error() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateShipmentDestinationAddressInternalServerError) String() string {
	return fmt.Sprintf("[POST /mto-shipments/{mtoShipmentID}/shipment-address-updates][%d] updateShipmentDestinationAddressInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateShipmentDestinationAddressInternalServerError) GetPayload() *primemessages.Error {
	return o.Payload
}

func (o *UpdateShipmentDestinationAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
