// Code generated by go-swagger; DO NOT EDIT.

package sit_address_update

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new sit address update API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for sit address update API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateSITAddressUpdateRequest(params *CreateSITAddressUpdateRequestParams, opts ...ClientOption) (*CreateSITAddressUpdateRequestCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
	CreateSITAddressUpdateRequest creates s i t address update request

	**Functionality:**

Creates an update request for a SIT service item's final delivery address.
A newly created update request is assigned the status 'REQUESTED'  if the change in address
is > 50 miles and automatically approved otherwise.

**Limitations:**
The update can be requested for APPROVED SIT service items only.
Only ONE request is allowed per approved SIT service item.

**DEPRECATION ON AUGUST 5TH, 2024**
Following deprecation, when updating a service item's final delivery address, you will need to update the shipment's destination address. This will update the destination SIT service items' final delivery address upon approval.
For `APPROVED` shipments, you can use [updateShipmentDestinationAddress](#mtoShipment/updateShipmentDestinationAddress)
For shipments in any other status, you can use [updateMTOShipmentAddress](#mtoShipment/updateMTOShipmentAddress)
*/
func (a *Client) CreateSITAddressUpdateRequest(params *CreateSITAddressUpdateRequestParams, opts ...ClientOption) (*CreateSITAddressUpdateRequestCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateSITAddressUpdateRequestParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createSITAddressUpdateRequest",
		Method:             "POST",
		PathPattern:        "/sit-address-updates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateSITAddressUpdateRequestReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateSITAddressUpdateRequestCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createSITAddressUpdateRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
