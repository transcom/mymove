// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// DeleteShipmentNoContentCode is the HTTP code returned for type DeleteShipmentNoContent
const DeleteShipmentNoContentCode int = 204

/*
DeleteShipmentNoContent Successfully soft deleted the shipment

swagger:response deleteShipmentNoContent
*/
type DeleteShipmentNoContent struct {
}

// NewDeleteShipmentNoContent creates DeleteShipmentNoContent with default headers values
func NewDeleteShipmentNoContent() *DeleteShipmentNoContent {

	return &DeleteShipmentNoContent{}
}

// WriteResponse to the client
func (o *DeleteShipmentNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteShipmentBadRequestCode is the HTTP code returned for type DeleteShipmentBadRequest
const DeleteShipmentBadRequestCode int = 400

/*
DeleteShipmentBadRequest The request payload is invalid.

swagger:response deleteShipmentBadRequest
*/
type DeleteShipmentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteShipmentBadRequest creates DeleteShipmentBadRequest with default headers values
func NewDeleteShipmentBadRequest() *DeleteShipmentBadRequest {

	return &DeleteShipmentBadRequest{}
}

// WithPayload adds the payload to the delete shipment bad request response
func (o *DeleteShipmentBadRequest) WithPayload(payload *internalmessages.ClientError) *DeleteShipmentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete shipment bad request response
func (o *DeleteShipmentBadRequest) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteShipmentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteShipmentForbiddenCode is the HTTP code returned for type DeleteShipmentForbidden
const DeleteShipmentForbiddenCode int = 403

/*
DeleteShipmentForbidden The request was denied.

swagger:response deleteShipmentForbidden
*/
type DeleteShipmentForbidden struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteShipmentForbidden creates DeleteShipmentForbidden with default headers values
func NewDeleteShipmentForbidden() *DeleteShipmentForbidden {

	return &DeleteShipmentForbidden{}
}

// WithPayload adds the payload to the delete shipment forbidden response
func (o *DeleteShipmentForbidden) WithPayload(payload *internalmessages.ClientError) *DeleteShipmentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete shipment forbidden response
func (o *DeleteShipmentForbidden) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteShipmentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteShipmentNotFoundCode is the HTTP code returned for type DeleteShipmentNotFound
const DeleteShipmentNotFoundCode int = 404

/*
DeleteShipmentNotFound The requested resource wasn't found.

swagger:response deleteShipmentNotFound
*/
type DeleteShipmentNotFound struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteShipmentNotFound creates DeleteShipmentNotFound with default headers values
func NewDeleteShipmentNotFound() *DeleteShipmentNotFound {

	return &DeleteShipmentNotFound{}
}

// WithPayload adds the payload to the delete shipment not found response
func (o *DeleteShipmentNotFound) WithPayload(payload *internalmessages.ClientError) *DeleteShipmentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete shipment not found response
func (o *DeleteShipmentNotFound) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteShipmentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteShipmentConflictCode is the HTTP code returned for type DeleteShipmentConflict
const DeleteShipmentConflictCode int = 409

/*
DeleteShipmentConflict The request could not be processed because of conflict in the current state of the resource.

swagger:response deleteShipmentConflict
*/
type DeleteShipmentConflict struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteShipmentConflict creates DeleteShipmentConflict with default headers values
func NewDeleteShipmentConflict() *DeleteShipmentConflict {

	return &DeleteShipmentConflict{}
}

// WithPayload adds the payload to the delete shipment conflict response
func (o *DeleteShipmentConflict) WithPayload(payload *internalmessages.ClientError) *DeleteShipmentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete shipment conflict response
func (o *DeleteShipmentConflict) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteShipmentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteShipmentUnprocessableEntityCode is the HTTP code returned for type DeleteShipmentUnprocessableEntity
const DeleteShipmentUnprocessableEntityCode int = 422

/*
DeleteShipmentUnprocessableEntity The payload was unprocessable.

swagger:response deleteShipmentUnprocessableEntity
*/
type DeleteShipmentUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ValidationError `json:"body,omitempty"`
}

// NewDeleteShipmentUnprocessableEntity creates DeleteShipmentUnprocessableEntity with default headers values
func NewDeleteShipmentUnprocessableEntity() *DeleteShipmentUnprocessableEntity {

	return &DeleteShipmentUnprocessableEntity{}
}

// WithPayload adds the payload to the delete shipment unprocessable entity response
func (o *DeleteShipmentUnprocessableEntity) WithPayload(payload *internalmessages.ValidationError) *DeleteShipmentUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete shipment unprocessable entity response
func (o *DeleteShipmentUnprocessableEntity) SetPayload(payload *internalmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteShipmentUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteShipmentInternalServerErrorCode is the HTTP code returned for type DeleteShipmentInternalServerError
const DeleteShipmentInternalServerErrorCode int = 500

/*
DeleteShipmentInternalServerError A server error occurred.

swagger:response deleteShipmentInternalServerError
*/
type DeleteShipmentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.Error `json:"body,omitempty"`
}

// NewDeleteShipmentInternalServerError creates DeleteShipmentInternalServerError with default headers values
func NewDeleteShipmentInternalServerError() *DeleteShipmentInternalServerError {

	return &DeleteShipmentInternalServerError{}
}

// WithPayload adds the payload to the delete shipment internal server error response
func (o *DeleteShipmentInternalServerError) WithPayload(payload *internalmessages.Error) *DeleteShipmentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete shipment internal server error response
func (o *DeleteShipmentInternalServerError) SetPayload(payload *internalmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteShipmentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
