// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// DeleteUploadsNoContentCode is the HTTP code returned for type DeleteUploadsNoContent
const DeleteUploadsNoContentCode int = 204

/*
DeleteUploadsNoContent deleted

swagger:response deleteUploadsNoContent
*/
type DeleteUploadsNoContent struct {
}

// NewDeleteUploadsNoContent creates DeleteUploadsNoContent with default headers values
func NewDeleteUploadsNoContent() *DeleteUploadsNoContent {

	return &DeleteUploadsNoContent{}
}

// WriteResponse to the client
func (o *DeleteUploadsNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteUploadsBadRequestCode is the HTTP code returned for type DeleteUploadsBadRequest
const DeleteUploadsBadRequestCode int = 400

/*
DeleteUploadsBadRequest invalid request

swagger:response deleteUploadsBadRequest
*/
type DeleteUploadsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.InvalidRequestResponsePayload `json:"body,omitempty"`
}

// NewDeleteUploadsBadRequest creates DeleteUploadsBadRequest with default headers values
func NewDeleteUploadsBadRequest() *DeleteUploadsBadRequest {

	return &DeleteUploadsBadRequest{}
}

// WithPayload adds the payload to the delete uploads bad request response
func (o *DeleteUploadsBadRequest) WithPayload(payload *internalmessages.InvalidRequestResponsePayload) *DeleteUploadsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete uploads bad request response
func (o *DeleteUploadsBadRequest) SetPayload(payload *internalmessages.InvalidRequestResponsePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteUploadsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteUploadsForbiddenCode is the HTTP code returned for type DeleteUploadsForbidden
const DeleteUploadsForbiddenCode int = 403

/*
DeleteUploadsForbidden not authorized

swagger:response deleteUploadsForbidden
*/
type DeleteUploadsForbidden struct {
}

// NewDeleteUploadsForbidden creates DeleteUploadsForbidden with default headers values
func NewDeleteUploadsForbidden() *DeleteUploadsForbidden {

	return &DeleteUploadsForbidden{}
}

// WriteResponse to the client
func (o *DeleteUploadsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// DeleteUploadsNotFoundCode is the HTTP code returned for type DeleteUploadsNotFound
const DeleteUploadsNotFoundCode int = 404

/*
DeleteUploadsNotFound not found

swagger:response deleteUploadsNotFound
*/
type DeleteUploadsNotFound struct {
}

// NewDeleteUploadsNotFound creates DeleteUploadsNotFound with default headers values
func NewDeleteUploadsNotFound() *DeleteUploadsNotFound {

	return &DeleteUploadsNotFound{}
}

// WriteResponse to the client
func (o *DeleteUploadsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// DeleteUploadsInternalServerErrorCode is the HTTP code returned for type DeleteUploadsInternalServerError
const DeleteUploadsInternalServerErrorCode int = 500

/*
DeleteUploadsInternalServerError server error

swagger:response deleteUploadsInternalServerError
*/
type DeleteUploadsInternalServerError struct {
}

// NewDeleteUploadsInternalServerError creates DeleteUploadsInternalServerError with default headers values
func NewDeleteUploadsInternalServerError() *DeleteUploadsInternalServerError {

	return &DeleteUploadsInternalServerError{}
}

// WriteResponse to the client
func (o *DeleteUploadsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
