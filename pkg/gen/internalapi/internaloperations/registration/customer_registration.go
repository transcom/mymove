// Code generated by go-swagger; DO NOT EDIT.

package registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CustomerRegistrationHandlerFunc turns a function with the right signature into a customer registration handler
type CustomerRegistrationHandlerFunc func(CustomerRegistrationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CustomerRegistrationHandlerFunc) Handle(params CustomerRegistrationParams) middleware.Responder {
	return fn(params)
}

// CustomerRegistrationHandler interface for that can handle valid customer registration params
type CustomerRegistrationHandler interface {
	Handle(CustomerRegistrationParams) middleware.Responder
}

// NewCustomerRegistration creates a new http.Handler for the customer registration operation
func NewCustomerRegistration(ctx *middleware.Context, handler CustomerRegistrationHandler) *CustomerRegistration {
	return &CustomerRegistration{Context: ctx, Handler: handler}
}

/*
	CustomerRegistration swagger:route POST /open/register registration customerRegistration

Self registration of a customer. This creates a MilMove and Okta profile using the information provided.

Creates an Okta profile and MilMove profile using the information provided.
*/
type CustomerRegistration struct {
	Context *middleware.Context
	Handler CustomerRegistrationHandler
}

func (o *CustomerRegistration) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCustomerRegistrationParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
