// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetRanksHandlerFunc turns a function with the right signature into a get ranks handler
type GetRanksHandlerFunc func(GetRanksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRanksHandlerFunc) Handle(params GetRanksParams) middleware.Responder {
	return fn(params)
}

// GetRanksHandler interface for that can handle valid get ranks params
type GetRanksHandler interface {
	Handle(GetRanksParams) middleware.Responder
}

// NewGetRanks creates a new http.Handler for the get ranks operation
func NewGetRanks(ctx *middleware.Context, handler GetRanksHandler) *GetRanks {
	return &GetRanks{Context: ctx, Handler: handler}
}

/*
	GetRanks swagger:route GET /ranks/{affiliation} orders getRanks

# Get ranks for specified affiliation

Get ranks for specified affiliation
*/
type GetRanks struct {
	Context *middleware.Context
	Handler GetRanksHandler
}

func (o *GetRanks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetRanksParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
