// Code generated by go-swagger; DO NOT EDIT.

package service_members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowServiceMemberHandlerFunc turns a function with the right signature into a show service member handler
type ShowServiceMemberHandlerFunc func(ShowServiceMemberParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowServiceMemberHandlerFunc) Handle(params ShowServiceMemberParams) middleware.Responder {
	return fn(params)
}

// ShowServiceMemberHandler interface for that can handle valid show service member params
type ShowServiceMemberHandler interface {
	Handle(ShowServiceMemberParams) middleware.Responder
}

// NewShowServiceMember creates a new http.Handler for the show service member operation
func NewShowServiceMember(ctx *middleware.Context, handler ShowServiceMemberHandler) *ShowServiceMember {
	return &ShowServiceMember{Context: ctx, Handler: handler}
}

/*
	ShowServiceMember swagger:route GET /service_members/{serviceMemberId} service_members showServiceMember

# Returns the given service member

Returns the given service member
*/
type ShowServiceMember struct {
	Context *middleware.Context
	Handler ShowServiceMemberHandler
}

func (o *ShowServiceMember) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowServiceMemberParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
