// Code generated by go-swagger; DO NOT EDIT.

package service_members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowServiceMemberOrdersHandlerFunc turns a function with the right signature into a show service member orders handler
type ShowServiceMemberOrdersHandlerFunc func(ShowServiceMemberOrdersParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowServiceMemberOrdersHandlerFunc) Handle(params ShowServiceMemberOrdersParams) middleware.Responder {
	return fn(params)
}

// ShowServiceMemberOrdersHandler interface for that can handle valid show service member orders params
type ShowServiceMemberOrdersHandler interface {
	Handle(ShowServiceMemberOrdersParams) middleware.Responder
}

// NewShowServiceMemberOrders creates a new http.Handler for the show service member orders operation
func NewShowServiceMemberOrders(ctx *middleware.Context, handler ShowServiceMemberOrdersHandler) *ShowServiceMemberOrders {
	return &ShowServiceMemberOrders{Context: ctx, Handler: handler}
}

/*
	ShowServiceMemberOrders swagger:route GET /service_members/{serviceMemberId}/current_orders service_members showServiceMemberOrders

# Returns the latest orders for a given service member

Returns orders
*/
type ShowServiceMemberOrders struct {
	Context *middleware.Context
	Handler ShowServiceMemberOrdersHandler
}

func (o *ShowServiceMemberOrders) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowServiceMemberOrdersParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
