// Code generated by go-swagger; DO NOT EDIT.

package move_docs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateGenericMoveDocumentHandlerFunc turns a function with the right signature into a create generic move document handler
type CreateGenericMoveDocumentHandlerFunc func(CreateGenericMoveDocumentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateGenericMoveDocumentHandlerFunc) Handle(params CreateGenericMoveDocumentParams) middleware.Responder {
	return fn(params)
}

// CreateGenericMoveDocumentHandler interface for that can handle valid create generic move document params
type CreateGenericMoveDocumentHandler interface {
	Handle(CreateGenericMoveDocumentParams) middleware.Responder
}

// NewCreateGenericMoveDocument creates a new http.Handler for the create generic move document operation
func NewCreateGenericMoveDocument(ctx *middleware.Context, handler CreateGenericMoveDocumentHandler) *CreateGenericMoveDocument {
	return &CreateGenericMoveDocument{Context: ctx, Handler: handler}
}

/*
	CreateGenericMoveDocument swagger:route POST /moves/{moveId}/move_documents move_docs createGenericMoveDocument

# Creates a move document

Created a move document with the given information
*/
type CreateGenericMoveDocument struct {
	Context *middleware.Context
	Handler CreateGenericMoveDocumentHandler
}

func (o *CreateGenericMoveDocument) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateGenericMoveDocumentParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
