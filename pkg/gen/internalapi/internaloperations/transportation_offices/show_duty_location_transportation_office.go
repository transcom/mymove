// Code generated by go-swagger; DO NOT EDIT.

package transportation_offices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowDutyLocationTransportationOfficeHandlerFunc turns a function with the right signature into a show duty location transportation office handler
type ShowDutyLocationTransportationOfficeHandlerFunc func(ShowDutyLocationTransportationOfficeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowDutyLocationTransportationOfficeHandlerFunc) Handle(params ShowDutyLocationTransportationOfficeParams) middleware.Responder {
	return fn(params)
}

// ShowDutyLocationTransportationOfficeHandler interface for that can handle valid show duty location transportation office params
type ShowDutyLocationTransportationOfficeHandler interface {
	Handle(ShowDutyLocationTransportationOfficeParams) middleware.Responder
}

// NewShowDutyLocationTransportationOffice creates a new http.Handler for the show duty location transportation office operation
func NewShowDutyLocationTransportationOffice(ctx *middleware.Context, handler ShowDutyLocationTransportationOfficeHandler) *ShowDutyLocationTransportationOffice {
	return &ShowDutyLocationTransportationOffice{Context: ctx, Handler: handler}
}

/*
	ShowDutyLocationTransportationOffice swagger:route GET /duty_locations/{dutyLocationId}/transportation_office transportation_offices showDutyLocationTransportationOffice

# Returns the transportation office for a given duty location

Returns the given duty location's transportation office
*/
type ShowDutyLocationTransportationOffice struct {
	Context *middleware.Context
	Handler ShowDutyLocationTransportationOfficeHandler
}

func (o *ShowDutyLocationTransportationOffice) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowDutyLocationTransportationOfficeParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
