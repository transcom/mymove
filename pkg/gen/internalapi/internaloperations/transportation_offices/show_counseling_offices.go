// Code generated by go-swagger; DO NOT EDIT.

package transportation_offices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowCounselingOfficesHandlerFunc turns a function with the right signature into a show counseling offices handler
type ShowCounselingOfficesHandlerFunc func(ShowCounselingOfficesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowCounselingOfficesHandlerFunc) Handle(params ShowCounselingOfficesParams) middleware.Responder {
	return fn(params)
}

// ShowCounselingOfficesHandler interface for that can handle valid show counseling offices params
type ShowCounselingOfficesHandler interface {
	Handle(ShowCounselingOfficesParams) middleware.Responder
}

// NewShowCounselingOffices creates a new http.Handler for the show counseling offices operation
func NewShowCounselingOffices(ctx *middleware.Context, handler ShowCounselingOfficesHandler) *ShowCounselingOffices {
	return &ShowCounselingOffices{Context: ctx, Handler: handler}
}

/*
	ShowCounselingOffices swagger:route GET /transportation_offices/{dutyLocationId}/counseling_offices transportation_offices showCounselingOffices

# Returns the counseling locations in the GBLOC matching the duty location

Returns the counseling locations matching the GBLOC from the selected duty location
*/
type ShowCounselingOffices struct {
	Context *middleware.Context
	Handler ShowCounselingOfficesHandler
}

func (o *ShowCounselingOffices) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowCounselingOfficesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
