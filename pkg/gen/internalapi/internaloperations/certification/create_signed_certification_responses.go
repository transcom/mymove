// Code generated by go-swagger; DO NOT EDIT.

package certification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// CreateSignedCertificationCreatedCode is the HTTP code returned for type CreateSignedCertificationCreated
const CreateSignedCertificationCreatedCode int = 201

/*
CreateSignedCertificationCreated created instance of signed_certification

swagger:response createSignedCertificationCreated
*/
type CreateSignedCertificationCreated struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.SignedCertificationPayload `json:"body,omitempty"`
}

// NewCreateSignedCertificationCreated creates CreateSignedCertificationCreated with default headers values
func NewCreateSignedCertificationCreated() *CreateSignedCertificationCreated {

	return &CreateSignedCertificationCreated{}
}

// WithPayload adds the payload to the create signed certification created response
func (o *CreateSignedCertificationCreated) WithPayload(payload *internalmessages.SignedCertificationPayload) *CreateSignedCertificationCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create signed certification created response
func (o *CreateSignedCertificationCreated) SetPayload(payload *internalmessages.SignedCertificationPayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSignedCertificationCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSignedCertificationBadRequestCode is the HTTP code returned for type CreateSignedCertificationBadRequest
const CreateSignedCertificationBadRequestCode int = 400

/*
CreateSignedCertificationBadRequest invalid request

swagger:response createSignedCertificationBadRequest
*/
type CreateSignedCertificationBadRequest struct {
}

// NewCreateSignedCertificationBadRequest creates CreateSignedCertificationBadRequest with default headers values
func NewCreateSignedCertificationBadRequest() *CreateSignedCertificationBadRequest {

	return &CreateSignedCertificationBadRequest{}
}

// WriteResponse to the client
func (o *CreateSignedCertificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// CreateSignedCertificationUnauthorizedCode is the HTTP code returned for type CreateSignedCertificationUnauthorized
const CreateSignedCertificationUnauthorizedCode int = 401

/*
CreateSignedCertificationUnauthorized request requires user authentication

swagger:response createSignedCertificationUnauthorized
*/
type CreateSignedCertificationUnauthorized struct {
}

// NewCreateSignedCertificationUnauthorized creates CreateSignedCertificationUnauthorized with default headers values
func NewCreateSignedCertificationUnauthorized() *CreateSignedCertificationUnauthorized {

	return &CreateSignedCertificationUnauthorized{}
}

// WriteResponse to the client
func (o *CreateSignedCertificationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// CreateSignedCertificationForbiddenCode is the HTTP code returned for type CreateSignedCertificationForbidden
const CreateSignedCertificationForbiddenCode int = 403

/*
CreateSignedCertificationForbidden user is not authorized to sign for this move

swagger:response createSignedCertificationForbidden
*/
type CreateSignedCertificationForbidden struct {
}

// NewCreateSignedCertificationForbidden creates CreateSignedCertificationForbidden with default headers values
func NewCreateSignedCertificationForbidden() *CreateSignedCertificationForbidden {

	return &CreateSignedCertificationForbidden{}
}

// WriteResponse to the client
func (o *CreateSignedCertificationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// CreateSignedCertificationNotFoundCode is the HTTP code returned for type CreateSignedCertificationNotFound
const CreateSignedCertificationNotFoundCode int = 404

/*
CreateSignedCertificationNotFound move not found

swagger:response createSignedCertificationNotFound
*/
type CreateSignedCertificationNotFound struct {
}

// NewCreateSignedCertificationNotFound creates CreateSignedCertificationNotFound with default headers values
func NewCreateSignedCertificationNotFound() *CreateSignedCertificationNotFound {

	return &CreateSignedCertificationNotFound{}
}

// WriteResponse to the client
func (o *CreateSignedCertificationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// CreateSignedCertificationInternalServerErrorCode is the HTTP code returned for type CreateSignedCertificationInternalServerError
const CreateSignedCertificationInternalServerErrorCode int = 500

/*
CreateSignedCertificationInternalServerError internal server error

swagger:response createSignedCertificationInternalServerError
*/
type CreateSignedCertificationInternalServerError struct {
}

// NewCreateSignedCertificationInternalServerError creates CreateSignedCertificationInternalServerError with default headers values
func NewCreateSignedCertificationInternalServerError() *CreateSignedCertificationInternalServerError {

	return &CreateSignedCertificationInternalServerError{}
}

// WriteResponse to the client
func (o *CreateSignedCertificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
