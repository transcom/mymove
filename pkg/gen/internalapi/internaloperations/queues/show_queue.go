// Code generated by go-swagger; DO NOT EDIT.

package queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowQueueHandlerFunc turns a function with the right signature into a show queue handler
type ShowQueueHandlerFunc func(ShowQueueParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowQueueHandlerFunc) Handle(params ShowQueueParams) middleware.Responder {
	return fn(params)
}

// ShowQueueHandler interface for that can handle valid show queue params
type ShowQueueHandler interface {
	Handle(ShowQueueParams) middleware.Responder
}

// NewShowQueue creates a new http.Handler for the show queue operation
func NewShowQueue(ctx *middleware.Context, handler ShowQueueHandler) *ShowQueue {
	return &ShowQueue{Context: ctx, Handler: handler}
}

/*
	ShowQueue swagger:route GET /queues/{queueType} queues showQueue

# Show all moves in a queue

Show all moves in a queue
*/
type ShowQueue struct {
	Context *middleware.Context
	Handler ShowQueueHandler
}

func (o *ShowQueue) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowQueueParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
