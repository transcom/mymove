// Code generated by go-swagger; DO NOT EDIT.

package office

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// ApproveMoveOKCode is the HTTP code returned for type ApproveMoveOK
const ApproveMoveOKCode int = 200

/*
ApproveMoveOK returns updated (approved) move object

swagger:response approveMoveOK
*/
type ApproveMoveOK struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.MovePayload `json:"body,omitempty"`
}

// NewApproveMoveOK creates ApproveMoveOK with default headers values
func NewApproveMoveOK() *ApproveMoveOK {

	return &ApproveMoveOK{}
}

// WithPayload adds the payload to the approve move o k response
func (o *ApproveMoveOK) WithPayload(payload *internalmessages.MovePayload) *ApproveMoveOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve move o k response
func (o *ApproveMoveOK) SetPayload(payload *internalmessages.MovePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveMoveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveMoveBadRequestCode is the HTTP code returned for type ApproveMoveBadRequest
const ApproveMoveBadRequestCode int = 400

/*
ApproveMoveBadRequest invalid request

swagger:response approveMoveBadRequest
*/
type ApproveMoveBadRequest struct {
}

// NewApproveMoveBadRequest creates ApproveMoveBadRequest with default headers values
func NewApproveMoveBadRequest() *ApproveMoveBadRequest {

	return &ApproveMoveBadRequest{}
}

// WriteResponse to the client
func (o *ApproveMoveBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// ApproveMoveUnauthorizedCode is the HTTP code returned for type ApproveMoveUnauthorized
const ApproveMoveUnauthorizedCode int = 401

/*
ApproveMoveUnauthorized must be authenticated to use this endpoint

swagger:response approveMoveUnauthorized
*/
type ApproveMoveUnauthorized struct {
}

// NewApproveMoveUnauthorized creates ApproveMoveUnauthorized with default headers values
func NewApproveMoveUnauthorized() *ApproveMoveUnauthorized {

	return &ApproveMoveUnauthorized{}
}

// WriteResponse to the client
func (o *ApproveMoveUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ApproveMoveForbiddenCode is the HTTP code returned for type ApproveMoveForbidden
const ApproveMoveForbiddenCode int = 403

/*
ApproveMoveForbidden not authorized to approve this move

swagger:response approveMoveForbidden
*/
type ApproveMoveForbidden struct {
}

// NewApproveMoveForbidden creates ApproveMoveForbidden with default headers values
func NewApproveMoveForbidden() *ApproveMoveForbidden {

	return &ApproveMoveForbidden{}
}

// WriteResponse to the client
func (o *ApproveMoveForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// ApproveMoveConflictCode is the HTTP code returned for type ApproveMoveConflict
const ApproveMoveConflictCode int = 409

/*
ApproveMoveConflict the move is not in a state to be approved

swagger:response approveMoveConflict
*/
type ApproveMoveConflict struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.MovePayload `json:"body,omitempty"`
}

// NewApproveMoveConflict creates ApproveMoveConflict with default headers values
func NewApproveMoveConflict() *ApproveMoveConflict {

	return &ApproveMoveConflict{}
}

// WithPayload adds the payload to the approve move conflict response
func (o *ApproveMoveConflict) WithPayload(payload *internalmessages.MovePayload) *ApproveMoveConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve move conflict response
func (o *ApproveMoveConflict) SetPayload(payload *internalmessages.MovePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveMoveConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveMoveInternalServerErrorCode is the HTTP code returned for type ApproveMoveInternalServerError
const ApproveMoveInternalServerErrorCode int = 500

/*
ApproveMoveInternalServerError server error

swagger:response approveMoveInternalServerError
*/
type ApproveMoveInternalServerError struct {
}

// NewApproveMoveInternalServerError creates ApproveMoveInternalServerError with default headers values
func NewApproveMoveInternalServerError() *ApproveMoveInternalServerError {

	return &ApproveMoveInternalServerError{}
}

// WriteResponse to the client
func (o *ApproveMoveInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
