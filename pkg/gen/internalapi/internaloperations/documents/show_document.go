// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowDocumentHandlerFunc turns a function with the right signature into a show document handler
type ShowDocumentHandlerFunc func(ShowDocumentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowDocumentHandlerFunc) Handle(params ShowDocumentParams) middleware.Responder {
	return fn(params)
}

// ShowDocumentHandler interface for that can handle valid show document params
type ShowDocumentHandler interface {
	Handle(ShowDocumentParams) middleware.Responder
}

// NewShowDocument creates a new http.Handler for the show document operation
func NewShowDocument(ctx *middleware.Context, handler ShowDocumentHandler) *ShowDocument {
	return &ShowDocument{Context: ctx, Handler: handler}
}

/*
	ShowDocument swagger:route GET /documents/{documentId} documents showDocument

# Returns a document

Returns a document and its uploads
*/
type ShowDocument struct {
	Context *middleware.Context
	Handler ShowDocumentHandler
}

func (o *ShowDocument) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowDocumentParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
