// Code generated by go-swagger; DO NOT EDIT.

package addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// GetOconusLocationOKCode is the HTTP code returned for type GetOconusLocationOK
const GetOconusLocationOKCode int = 200

/*
GetOconusLocationOK the requested list of Oconus city and principal division match

swagger:response getOconusLocationOK
*/
type GetOconusLocationOK struct {

	/*
	  In: Body
	*/
	Payload internalmessages.VIntlLocations `json:"body,omitempty"`
}

// NewGetOconusLocationOK creates GetOconusLocationOK with default headers values
func NewGetOconusLocationOK() *GetOconusLocationOK {

	return &GetOconusLocationOK{}
}

// WithPayload adds the payload to the get oconus location o k response
func (o *GetOconusLocationOK) WithPayload(payload internalmessages.VIntlLocations) *GetOconusLocationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oconus location o k response
func (o *GetOconusLocationOK) SetPayload(payload internalmessages.VIntlLocations) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOconusLocationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = internalmessages.VIntlLocations{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetOconusLocationBadRequestCode is the HTTP code returned for type GetOconusLocationBadRequest
const GetOconusLocationBadRequestCode int = 400

/*
GetOconusLocationBadRequest The request payload is invalid.

swagger:response getOconusLocationBadRequest
*/
type GetOconusLocationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewGetOconusLocationBadRequest creates GetOconusLocationBadRequest with default headers values
func NewGetOconusLocationBadRequest() *GetOconusLocationBadRequest {

	return &GetOconusLocationBadRequest{}
}

// WithPayload adds the payload to the get oconus location bad request response
func (o *GetOconusLocationBadRequest) WithPayload(payload *internalmessages.ClientError) *GetOconusLocationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oconus location bad request response
func (o *GetOconusLocationBadRequest) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOconusLocationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOconusLocationForbiddenCode is the HTTP code returned for type GetOconusLocationForbidden
const GetOconusLocationForbiddenCode int = 403

/*
GetOconusLocationForbidden The request was denied.

swagger:response getOconusLocationForbidden
*/
type GetOconusLocationForbidden struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewGetOconusLocationForbidden creates GetOconusLocationForbidden with default headers values
func NewGetOconusLocationForbidden() *GetOconusLocationForbidden {

	return &GetOconusLocationForbidden{}
}

// WithPayload adds the payload to the get oconus location forbidden response
func (o *GetOconusLocationForbidden) WithPayload(payload *internalmessages.ClientError) *GetOconusLocationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oconus location forbidden response
func (o *GetOconusLocationForbidden) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOconusLocationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOconusLocationNotFoundCode is the HTTP code returned for type GetOconusLocationNotFound
const GetOconusLocationNotFoundCode int = 404

/*
GetOconusLocationNotFound The requested resource wasn't found.

swagger:response getOconusLocationNotFound
*/
type GetOconusLocationNotFound struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewGetOconusLocationNotFound creates GetOconusLocationNotFound with default headers values
func NewGetOconusLocationNotFound() *GetOconusLocationNotFound {

	return &GetOconusLocationNotFound{}
}

// WithPayload adds the payload to the get oconus location not found response
func (o *GetOconusLocationNotFound) WithPayload(payload *internalmessages.ClientError) *GetOconusLocationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oconus location not found response
func (o *GetOconusLocationNotFound) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOconusLocationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOconusLocationInternalServerErrorCode is the HTTP code returned for type GetOconusLocationInternalServerError
const GetOconusLocationInternalServerErrorCode int = 500

/*
GetOconusLocationInternalServerError A server error occurred.

swagger:response getOconusLocationInternalServerError
*/
type GetOconusLocationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.Error `json:"body,omitempty"`
}

// NewGetOconusLocationInternalServerError creates GetOconusLocationInternalServerError with default headers values
func NewGetOconusLocationInternalServerError() *GetOconusLocationInternalServerError {

	return &GetOconusLocationInternalServerError{}
}

// WithPayload adds the payload to the get oconus location internal server error response
func (o *GetOconusLocationInternalServerError) WithPayload(payload *internalmessages.Error) *GetOconusLocationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oconus location internal server error response
func (o *GetOconusLocationInternalServerError) SetPayload(payload *internalmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOconusLocationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
