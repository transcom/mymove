// Code generated by go-swagger; DO NOT EDIT.

package addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowAddressHandlerFunc turns a function with the right signature into a show address handler
type ShowAddressHandlerFunc func(ShowAddressParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowAddressHandlerFunc) Handle(params ShowAddressParams) middleware.Responder {
	return fn(params)
}

// ShowAddressHandler interface for that can handle valid show address params
type ShowAddressHandler interface {
	Handle(ShowAddressParams) middleware.Responder
}

// NewShowAddress creates a new http.Handler for the show address operation
func NewShowAddress(ctx *middleware.Context, handler ShowAddressHandler) *ShowAddress {
	return &ShowAddress{Context: ctx, Handler: handler}
}

/*
	ShowAddress swagger:route GET /addresses/{addressId} addresses showAddress

# Returns an address

Returns an address
*/
type ShowAddress struct {
	Context *middleware.Context
	Handler ShowAddressHandler
}

func (o *ShowAddress) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowAddressParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
