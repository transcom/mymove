// Code generated by go-swagger; DO NOT EDIT.

package okta_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowOktaInfoHandlerFunc turns a function with the right signature into a show okta info handler
type ShowOktaInfoHandlerFunc func(ShowOktaInfoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowOktaInfoHandlerFunc) Handle(params ShowOktaInfoParams) middleware.Responder {
	return fn(params)
}

// ShowOktaInfoHandler interface for that can handle valid show okta info params
type ShowOktaInfoHandler interface {
	Handle(ShowOktaInfoParams) middleware.Responder
}

// NewShowOktaInfo creates a new http.Handler for the show okta info operation
func NewShowOktaInfo(ctx *middleware.Context, handler ShowOktaInfoHandler) *ShowOktaInfo {
	return &ShowOktaInfo{Context: ctx, Handler: handler}
}

/*
	ShowOktaInfo swagger:route GET /okta-profile okta_profile showOktaInfo

# Returns Okta profile values from Okta's Users API

Calls a GET request to Okta's Users API and returns profile values that includes Okta data that the user provided upon registration or most recent profile update.
*/
type ShowOktaInfo struct {
	Context *middleware.Context
	Handler ShowOktaInfoHandler
}

func (o *ShowOktaInfo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowOktaInfoParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
