// Code generated by go-swagger; DO NOT EDIT.

package okta_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateOktaInfoHandlerFunc turns a function with the right signature into a update okta info handler
type UpdateOktaInfoHandlerFunc func(UpdateOktaInfoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateOktaInfoHandlerFunc) Handle(params UpdateOktaInfoParams) middleware.Responder {
	return fn(params)
}

// UpdateOktaInfoHandler interface for that can handle valid update okta info params
type UpdateOktaInfoHandler interface {
	Handle(UpdateOktaInfoParams) middleware.Responder
}

// NewUpdateOktaInfo creates a new http.Handler for the update okta info operation
func NewUpdateOktaInfo(ctx *middleware.Context, handler UpdateOktaInfoHandler) *UpdateOktaInfo {
	return &UpdateOktaInfo{Context: ctx, Handler: handler}
}

/*
	UpdateOktaInfo swagger:route POST /okta-profile okta_profile updateOktaInfo

Update the user's okta profile with primary data, returns Okta profile values from the Okta's Users API reflecting updated values.

Update the user's okta profile with primary data, returns Okta profile values from the Okta's Users API reflecting updated values.
*/
type UpdateOktaInfo struct {
	Context *middleware.Context
	Handler UpdateOktaInfoHandler
}

func (o *UpdateOktaInfo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateOktaInfoParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
