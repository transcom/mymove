// Code generated by go-swagger; DO NOT EDIT.

package moves

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowMoveDatesSummaryHandlerFunc turns a function with the right signature into a show move dates summary handler
type ShowMoveDatesSummaryHandlerFunc func(ShowMoveDatesSummaryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowMoveDatesSummaryHandlerFunc) Handle(params ShowMoveDatesSummaryParams) middleware.Responder {
	return fn(params)
}

// ShowMoveDatesSummaryHandler interface for that can handle valid show move dates summary params
type ShowMoveDatesSummaryHandler interface {
	Handle(ShowMoveDatesSummaryParams) middleware.Responder
}

// NewShowMoveDatesSummary creates a new http.Handler for the show move dates summary operation
func NewShowMoveDatesSummary(ctx *middleware.Context, handler ShowMoveDatesSummaryHandler) *ShowMoveDatesSummary {
	return &ShowMoveDatesSummary{Context: ctx, Handler: handler}
}

/* ShowMoveDatesSummary swagger:route GET /moves/{moveId}/move_dates_summary moves showMoveDatesSummary

Returns projected move-related dates for a given move date

Returns projected move-related dates for a given move date

*/
type ShowMoveDatesSummary struct {
	Context *middleware.Context
	Handler ShowMoveDatesSummaryHandler
}

func (o *ShowMoveDatesSummary) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowMoveDatesSummaryParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
