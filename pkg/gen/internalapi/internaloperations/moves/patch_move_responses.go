// Code generated by go-swagger; DO NOT EDIT.

package moves

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// PatchMoveOKCode is the HTTP code returned for type PatchMoveOK
const PatchMoveOKCode int = 200

/*
PatchMoveOK updated instance of move

swagger:response patchMoveOK
*/
type PatchMoveOK struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.MovePayload `json:"body,omitempty"`
}

// NewPatchMoveOK creates PatchMoveOK with default headers values
func NewPatchMoveOK() *PatchMoveOK {

	return &PatchMoveOK{}
}

// WithPayload adds the payload to the patch move o k response
func (o *PatchMoveOK) WithPayload(payload *internalmessages.MovePayload) *PatchMoveOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch move o k response
func (o *PatchMoveOK) SetPayload(payload *internalmessages.MovePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchMoveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchMoveBadRequestCode is the HTTP code returned for type PatchMoveBadRequest
const PatchMoveBadRequestCode int = 400

/*
PatchMoveBadRequest invalid request

swagger:response patchMoveBadRequest
*/
type PatchMoveBadRequest struct {
}

// NewPatchMoveBadRequest creates PatchMoveBadRequest with default headers values
func NewPatchMoveBadRequest() *PatchMoveBadRequest {

	return &PatchMoveBadRequest{}
}

// WriteResponse to the client
func (o *PatchMoveBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// PatchMoveUnauthorizedCode is the HTTP code returned for type PatchMoveUnauthorized
const PatchMoveUnauthorizedCode int = 401

/*
PatchMoveUnauthorized request requires user authentication

swagger:response patchMoveUnauthorized
*/
type PatchMoveUnauthorized struct {
}

// NewPatchMoveUnauthorized creates PatchMoveUnauthorized with default headers values
func NewPatchMoveUnauthorized() *PatchMoveUnauthorized {

	return &PatchMoveUnauthorized{}
}

// WriteResponse to the client
func (o *PatchMoveUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// PatchMoveForbiddenCode is the HTTP code returned for type PatchMoveForbidden
const PatchMoveForbiddenCode int = 403

/*
PatchMoveForbidden user is not authorized

swagger:response patchMoveForbidden
*/
type PatchMoveForbidden struct {
}

// NewPatchMoveForbidden creates PatchMoveForbidden with default headers values
func NewPatchMoveForbidden() *PatchMoveForbidden {

	return &PatchMoveForbidden{}
}

// WriteResponse to the client
func (o *PatchMoveForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// PatchMoveNotFoundCode is the HTTP code returned for type PatchMoveNotFound
const PatchMoveNotFoundCode int = 404

/*
PatchMoveNotFound move or closeout office is not found

swagger:response patchMoveNotFound
*/
type PatchMoveNotFound struct {
}

// NewPatchMoveNotFound creates PatchMoveNotFound with default headers values
func NewPatchMoveNotFound() *PatchMoveNotFound {

	return &PatchMoveNotFound{}
}

// WriteResponse to the client
func (o *PatchMoveNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// PatchMovePreconditionFailedCode is the HTTP code returned for type PatchMovePreconditionFailed
const PatchMovePreconditionFailedCode int = 412

/*
PatchMovePreconditionFailed precondition failed

swagger:response patchMovePreconditionFailed
*/
type PatchMovePreconditionFailed struct {
}

// NewPatchMovePreconditionFailed creates PatchMovePreconditionFailed with default headers values
func NewPatchMovePreconditionFailed() *PatchMovePreconditionFailed {

	return &PatchMovePreconditionFailed{}
}

// WriteResponse to the client
func (o *PatchMovePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(412)
}

// PatchMoveUnprocessableEntityCode is the HTTP code returned for type PatchMoveUnprocessableEntity
const PatchMoveUnprocessableEntityCode int = 422

/*
PatchMoveUnprocessableEntity unprocessable entity

swagger:response patchMoveUnprocessableEntity
*/
type PatchMoveUnprocessableEntity struct {
}

// NewPatchMoveUnprocessableEntity creates PatchMoveUnprocessableEntity with default headers values
func NewPatchMoveUnprocessableEntity() *PatchMoveUnprocessableEntity {

	return &PatchMoveUnprocessableEntity{}
}

// WriteResponse to the client
func (o *PatchMoveUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(422)
}

// PatchMoveInternalServerErrorCode is the HTTP code returned for type PatchMoveInternalServerError
const PatchMoveInternalServerErrorCode int = 500

/*
PatchMoveInternalServerError internal server error

swagger:response patchMoveInternalServerError
*/
type PatchMoveInternalServerError struct {
}

// NewPatchMoveInternalServerError creates PatchMoveInternalServerError with default headers values
func NewPatchMoveInternalServerError() *PatchMoveInternalServerError {

	return &PatchMoveInternalServerError{}
}

// WriteResponse to the client
func (o *PatchMoveInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
