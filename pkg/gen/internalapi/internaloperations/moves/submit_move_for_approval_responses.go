// Code generated by go-swagger; DO NOT EDIT.

package moves

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// SubmitMoveForApprovalOKCode is the HTTP code returned for type SubmitMoveForApprovalOK
const SubmitMoveForApprovalOKCode int = 200

/*
SubmitMoveForApprovalOK returns updated (submitted) move object

swagger:response submitMoveForApprovalOK
*/
type SubmitMoveForApprovalOK struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.MovePayload `json:"body,omitempty"`
}

// NewSubmitMoveForApprovalOK creates SubmitMoveForApprovalOK with default headers values
func NewSubmitMoveForApprovalOK() *SubmitMoveForApprovalOK {

	return &SubmitMoveForApprovalOK{}
}

// WithPayload adds the payload to the submit move for approval o k response
func (o *SubmitMoveForApprovalOK) WithPayload(payload *internalmessages.MovePayload) *SubmitMoveForApprovalOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the submit move for approval o k response
func (o *SubmitMoveForApprovalOK) SetPayload(payload *internalmessages.MovePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SubmitMoveForApprovalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SubmitMoveForApprovalBadRequestCode is the HTTP code returned for type SubmitMoveForApprovalBadRequest
const SubmitMoveForApprovalBadRequestCode int = 400

/*
SubmitMoveForApprovalBadRequest invalid request

swagger:response submitMoveForApprovalBadRequest
*/
type SubmitMoveForApprovalBadRequest struct {
}

// NewSubmitMoveForApprovalBadRequest creates SubmitMoveForApprovalBadRequest with default headers values
func NewSubmitMoveForApprovalBadRequest() *SubmitMoveForApprovalBadRequest {

	return &SubmitMoveForApprovalBadRequest{}
}

// WriteResponse to the client
func (o *SubmitMoveForApprovalBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// SubmitMoveForApprovalUnauthorizedCode is the HTTP code returned for type SubmitMoveForApprovalUnauthorized
const SubmitMoveForApprovalUnauthorizedCode int = 401

/*
SubmitMoveForApprovalUnauthorized must be authenticated to use this endpoint

swagger:response submitMoveForApprovalUnauthorized
*/
type SubmitMoveForApprovalUnauthorized struct {
}

// NewSubmitMoveForApprovalUnauthorized creates SubmitMoveForApprovalUnauthorized with default headers values
func NewSubmitMoveForApprovalUnauthorized() *SubmitMoveForApprovalUnauthorized {

	return &SubmitMoveForApprovalUnauthorized{}
}

// WriteResponse to the client
func (o *SubmitMoveForApprovalUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// SubmitMoveForApprovalForbiddenCode is the HTTP code returned for type SubmitMoveForApprovalForbidden
const SubmitMoveForApprovalForbiddenCode int = 403

/*
SubmitMoveForApprovalForbidden not authorized to approve this move

swagger:response submitMoveForApprovalForbidden
*/
type SubmitMoveForApprovalForbidden struct {
}

// NewSubmitMoveForApprovalForbidden creates SubmitMoveForApprovalForbidden with default headers values
func NewSubmitMoveForApprovalForbidden() *SubmitMoveForApprovalForbidden {

	return &SubmitMoveForApprovalForbidden{}
}

// WriteResponse to the client
func (o *SubmitMoveForApprovalForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// SubmitMoveForApprovalConflictCode is the HTTP code returned for type SubmitMoveForApprovalConflict
const SubmitMoveForApprovalConflictCode int = 409

/*
SubmitMoveForApprovalConflict the move is not in a state to be approved

swagger:response submitMoveForApprovalConflict
*/
type SubmitMoveForApprovalConflict struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.MovePayload `json:"body,omitempty"`
}

// NewSubmitMoveForApprovalConflict creates SubmitMoveForApprovalConflict with default headers values
func NewSubmitMoveForApprovalConflict() *SubmitMoveForApprovalConflict {

	return &SubmitMoveForApprovalConflict{}
}

// WithPayload adds the payload to the submit move for approval conflict response
func (o *SubmitMoveForApprovalConflict) WithPayload(payload *internalmessages.MovePayload) *SubmitMoveForApprovalConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the submit move for approval conflict response
func (o *SubmitMoveForApprovalConflict) SetPayload(payload *internalmessages.MovePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SubmitMoveForApprovalConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SubmitMoveForApprovalInternalServerErrorCode is the HTTP code returned for type SubmitMoveForApprovalInternalServerError
const SubmitMoveForApprovalInternalServerErrorCode int = 500

/*
SubmitMoveForApprovalInternalServerError server error

swagger:response submitMoveForApprovalInternalServerError
*/
type SubmitMoveForApprovalInternalServerError struct {
}

// NewSubmitMoveForApprovalInternalServerError creates SubmitMoveForApprovalInternalServerError with default headers values
func NewSubmitMoveForApprovalInternalServerError() *SubmitMoveForApprovalInternalServerError {

	return &SubmitMoveForApprovalInternalServerError{}
}

// WriteResponse to the client
func (o *SubmitMoveForApprovalInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
