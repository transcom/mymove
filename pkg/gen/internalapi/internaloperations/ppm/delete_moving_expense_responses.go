// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// DeleteMovingExpenseNoContentCode is the HTTP code returned for type DeleteMovingExpenseNoContent
const DeleteMovingExpenseNoContentCode int = 204

/*
DeleteMovingExpenseNoContent Successfully soft deleted the moving expense

swagger:response deleteMovingExpenseNoContent
*/
type DeleteMovingExpenseNoContent struct {
}

// NewDeleteMovingExpenseNoContent creates DeleteMovingExpenseNoContent with default headers values
func NewDeleteMovingExpenseNoContent() *DeleteMovingExpenseNoContent {

	return &DeleteMovingExpenseNoContent{}
}

// WriteResponse to the client
func (o *DeleteMovingExpenseNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteMovingExpenseBadRequestCode is the HTTP code returned for type DeleteMovingExpenseBadRequest
const DeleteMovingExpenseBadRequestCode int = 400

/*
DeleteMovingExpenseBadRequest The request payload is invalid.

swagger:response deleteMovingExpenseBadRequest
*/
type DeleteMovingExpenseBadRequest struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteMovingExpenseBadRequest creates DeleteMovingExpenseBadRequest with default headers values
func NewDeleteMovingExpenseBadRequest() *DeleteMovingExpenseBadRequest {

	return &DeleteMovingExpenseBadRequest{}
}

// WithPayload adds the payload to the delete moving expense bad request response
func (o *DeleteMovingExpenseBadRequest) WithPayload(payload *internalmessages.ClientError) *DeleteMovingExpenseBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete moving expense bad request response
func (o *DeleteMovingExpenseBadRequest) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMovingExpenseBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMovingExpenseUnauthorizedCode is the HTTP code returned for type DeleteMovingExpenseUnauthorized
const DeleteMovingExpenseUnauthorizedCode int = 401

/*
DeleteMovingExpenseUnauthorized The request was denied.

swagger:response deleteMovingExpenseUnauthorized
*/
type DeleteMovingExpenseUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteMovingExpenseUnauthorized creates DeleteMovingExpenseUnauthorized with default headers values
func NewDeleteMovingExpenseUnauthorized() *DeleteMovingExpenseUnauthorized {

	return &DeleteMovingExpenseUnauthorized{}
}

// WithPayload adds the payload to the delete moving expense unauthorized response
func (o *DeleteMovingExpenseUnauthorized) WithPayload(payload *internalmessages.ClientError) *DeleteMovingExpenseUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete moving expense unauthorized response
func (o *DeleteMovingExpenseUnauthorized) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMovingExpenseUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMovingExpenseForbiddenCode is the HTTP code returned for type DeleteMovingExpenseForbidden
const DeleteMovingExpenseForbiddenCode int = 403

/*
DeleteMovingExpenseForbidden The request was denied.

swagger:response deleteMovingExpenseForbidden
*/
type DeleteMovingExpenseForbidden struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteMovingExpenseForbidden creates DeleteMovingExpenseForbidden with default headers values
func NewDeleteMovingExpenseForbidden() *DeleteMovingExpenseForbidden {

	return &DeleteMovingExpenseForbidden{}
}

// WithPayload adds the payload to the delete moving expense forbidden response
func (o *DeleteMovingExpenseForbidden) WithPayload(payload *internalmessages.ClientError) *DeleteMovingExpenseForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete moving expense forbidden response
func (o *DeleteMovingExpenseForbidden) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMovingExpenseForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMovingExpenseNotFoundCode is the HTTP code returned for type DeleteMovingExpenseNotFound
const DeleteMovingExpenseNotFoundCode int = 404

/*
DeleteMovingExpenseNotFound The requested resource wasn't found.

swagger:response deleteMovingExpenseNotFound
*/
type DeleteMovingExpenseNotFound struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteMovingExpenseNotFound creates DeleteMovingExpenseNotFound with default headers values
func NewDeleteMovingExpenseNotFound() *DeleteMovingExpenseNotFound {

	return &DeleteMovingExpenseNotFound{}
}

// WithPayload adds the payload to the delete moving expense not found response
func (o *DeleteMovingExpenseNotFound) WithPayload(payload *internalmessages.ClientError) *DeleteMovingExpenseNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete moving expense not found response
func (o *DeleteMovingExpenseNotFound) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMovingExpenseNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMovingExpenseConflictCode is the HTTP code returned for type DeleteMovingExpenseConflict
const DeleteMovingExpenseConflictCode int = 409

/*
DeleteMovingExpenseConflict The request could not be processed because of conflict in the current state of the resource.

swagger:response deleteMovingExpenseConflict
*/
type DeleteMovingExpenseConflict struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewDeleteMovingExpenseConflict creates DeleteMovingExpenseConflict with default headers values
func NewDeleteMovingExpenseConflict() *DeleteMovingExpenseConflict {

	return &DeleteMovingExpenseConflict{}
}

// WithPayload adds the payload to the delete moving expense conflict response
func (o *DeleteMovingExpenseConflict) WithPayload(payload *internalmessages.ClientError) *DeleteMovingExpenseConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete moving expense conflict response
func (o *DeleteMovingExpenseConflict) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMovingExpenseConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMovingExpenseUnprocessableEntityCode is the HTTP code returned for type DeleteMovingExpenseUnprocessableEntity
const DeleteMovingExpenseUnprocessableEntityCode int = 422

/*
DeleteMovingExpenseUnprocessableEntity The payload was unprocessable.

swagger:response deleteMovingExpenseUnprocessableEntity
*/
type DeleteMovingExpenseUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ValidationError `json:"body,omitempty"`
}

// NewDeleteMovingExpenseUnprocessableEntity creates DeleteMovingExpenseUnprocessableEntity with default headers values
func NewDeleteMovingExpenseUnprocessableEntity() *DeleteMovingExpenseUnprocessableEntity {

	return &DeleteMovingExpenseUnprocessableEntity{}
}

// WithPayload adds the payload to the delete moving expense unprocessable entity response
func (o *DeleteMovingExpenseUnprocessableEntity) WithPayload(payload *internalmessages.ValidationError) *DeleteMovingExpenseUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete moving expense unprocessable entity response
func (o *DeleteMovingExpenseUnprocessableEntity) SetPayload(payload *internalmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMovingExpenseUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMovingExpenseInternalServerErrorCode is the HTTP code returned for type DeleteMovingExpenseInternalServerError
const DeleteMovingExpenseInternalServerErrorCode int = 500

/*
DeleteMovingExpenseInternalServerError A server error occurred.

swagger:response deleteMovingExpenseInternalServerError
*/
type DeleteMovingExpenseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.Error `json:"body,omitempty"`
}

// NewDeleteMovingExpenseInternalServerError creates DeleteMovingExpenseInternalServerError with default headers values
func NewDeleteMovingExpenseInternalServerError() *DeleteMovingExpenseInternalServerError {

	return &DeleteMovingExpenseInternalServerError{}
}

// WithPayload adds the payload to the delete moving expense internal server error response
func (o *DeleteMovingExpenseInternalServerError) WithPayload(payload *internalmessages.Error) *DeleteMovingExpenseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete moving expense internal server error response
func (o *DeleteMovingExpenseInternalServerError) SetPayload(payload *internalmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMovingExpenseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
