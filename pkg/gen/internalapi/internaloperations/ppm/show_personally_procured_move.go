// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowPersonallyProcuredMoveHandlerFunc turns a function with the right signature into a show personally procured move handler
type ShowPersonallyProcuredMoveHandlerFunc func(ShowPersonallyProcuredMoveParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowPersonallyProcuredMoveHandlerFunc) Handle(params ShowPersonallyProcuredMoveParams) middleware.Responder {
	return fn(params)
}

// ShowPersonallyProcuredMoveHandler interface for that can handle valid show personally procured move params
type ShowPersonallyProcuredMoveHandler interface {
	Handle(ShowPersonallyProcuredMoveParams) middleware.Responder
}

// NewShowPersonallyProcuredMove creates a new http.Handler for the show personally procured move operation
func NewShowPersonallyProcuredMove(ctx *middleware.Context, handler ShowPersonallyProcuredMoveHandler) *ShowPersonallyProcuredMove {
	return &ShowPersonallyProcuredMove{Context: ctx, Handler: handler}
}

/*ShowPersonallyProcuredMove swagger:route GET /moves/{moveId}/personally_procured_move/{personallyProcuredMoveId} ppm showPersonallyProcuredMove

Returns the given PPM

Returns the given PPM

*/
type ShowPersonallyProcuredMove struct {
	Context *middleware.Context
	Handler ShowPersonallyProcuredMoveHandler
}

func (o *ShowPersonallyProcuredMove) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewShowPersonallyProcuredMoveParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
