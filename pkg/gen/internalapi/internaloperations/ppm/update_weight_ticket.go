// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateWeightTicketHandlerFunc turns a function with the right signature into a update weight ticket handler
type UpdateWeightTicketHandlerFunc func(UpdateWeightTicketParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateWeightTicketHandlerFunc) Handle(params UpdateWeightTicketParams) middleware.Responder {
	return fn(params)
}

// UpdateWeightTicketHandler interface for that can handle valid update weight ticket params
type UpdateWeightTicketHandler interface {
	Handle(UpdateWeightTicketParams) middleware.Responder
}

// NewUpdateWeightTicket creates a new http.Handler for the update weight ticket operation
func NewUpdateWeightTicket(ctx *middleware.Context, handler UpdateWeightTicketHandler) *UpdateWeightTicket {
	return &UpdateWeightTicket{Context: ctx, Handler: handler}
}

/*
	UpdateWeightTicket swagger:route PATCH /ppm-shipments/{ppmShipmentId}/weight-ticket/{weightTicketId} ppm updateWeightTicket

# Updates a weight ticket document

Updates a weight ticket document with the new information
*/
type UpdateWeightTicket struct {
	Context *middleware.Context
	Handler UpdateWeightTicketHandler
}

func (o *UpdateWeightTicket) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateWeightTicketParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
