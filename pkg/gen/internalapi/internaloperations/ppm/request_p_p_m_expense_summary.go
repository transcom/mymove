// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// RequestPPMExpenseSummaryHandlerFunc turns a function with the right signature into a request p p m expense summary handler
type RequestPPMExpenseSummaryHandlerFunc func(RequestPPMExpenseSummaryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RequestPPMExpenseSummaryHandlerFunc) Handle(params RequestPPMExpenseSummaryParams) middleware.Responder {
	return fn(params)
}

// RequestPPMExpenseSummaryHandler interface for that can handle valid request p p m expense summary params
type RequestPPMExpenseSummaryHandler interface {
	Handle(RequestPPMExpenseSummaryParams) middleware.Responder
}

// NewRequestPPMExpenseSummary creates a new http.Handler for the request p p m expense summary operation
func NewRequestPPMExpenseSummary(ctx *middleware.Context, handler RequestPPMExpenseSummaryHandler) *RequestPPMExpenseSummary {
	return &RequestPPMExpenseSummary{Context: ctx, Handler: handler}
}

/*RequestPPMExpenseSummary swagger:route GET /personally_procured_move/{personallyProcuredMoveId}/expense_summary ppm requestPPMExpenseSummary

Returns an expense summary organized by expense type

Calculates and returns an expense summary organized by expense type

*/
type RequestPPMExpenseSummary struct {
	Context *middleware.Context
	Handler RequestPPMExpenseSummaryHandler
}

func (o *RequestPPMExpenseSummary) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRequestPPMExpenseSummaryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
