// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateGunSafeWeightTicketHandlerFunc turns a function with the right signature into a update gun safe weight ticket handler
type UpdateGunSafeWeightTicketHandlerFunc func(UpdateGunSafeWeightTicketParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateGunSafeWeightTicketHandlerFunc) Handle(params UpdateGunSafeWeightTicketParams) middleware.Responder {
	return fn(params)
}

// UpdateGunSafeWeightTicketHandler interface for that can handle valid update gun safe weight ticket params
type UpdateGunSafeWeightTicketHandler interface {
	Handle(UpdateGunSafeWeightTicketParams) middleware.Responder
}

// NewUpdateGunSafeWeightTicket creates a new http.Handler for the update gun safe weight ticket operation
func NewUpdateGunSafeWeightTicket(ctx *middleware.Context, handler UpdateGunSafeWeightTicketHandler) *UpdateGunSafeWeightTicket {
	return &UpdateGunSafeWeightTicket{Context: ctx, Handler: handler}
}

/*
	UpdateGunSafeWeightTicket swagger:route PATCH /ppm-shipments/{ppmShipmentId}/gun-safe-weight-tickets/{gunSafeWeightTicketId} ppm updateGunSafeWeightTicket

# Updates a gun safe weight ticket

Updates a PPM shipment's gun safe weight ticket with new information. Only some of the fields are editable
because some have to be set by the customer, e.g. the description.
*/
type UpdateGunSafeWeightTicket struct {
	Context *middleware.Context
	Handler UpdateGunSafeWeightTicketHandler
}

func (o *UpdateGunSafeWeightTicket) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateGunSafeWeightTicketParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
