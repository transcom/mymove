// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// ShowAOAPacketOKCode is the HTTP code returned for type ShowAOAPacketOK
const ShowAOAPacketOKCode int = 200

/*
ShowAOAPacketOK AOA PDF

swagger:response showAOAPacketOK
*/
type ShowAOAPacketOK struct {
	/*File name to download

	 */
	ContentDisposition string `json:"Content-Disposition"`

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewShowAOAPacketOK creates ShowAOAPacketOK with default headers values
func NewShowAOAPacketOK() *ShowAOAPacketOK {

	return &ShowAOAPacketOK{}
}

// WithContentDisposition adds the contentDisposition to the show a o a packet o k response
func (o *ShowAOAPacketOK) WithContentDisposition(contentDisposition string) *ShowAOAPacketOK {
	o.ContentDisposition = contentDisposition
	return o
}

// SetContentDisposition sets the contentDisposition to the show a o a packet o k response
func (o *ShowAOAPacketOK) SetContentDisposition(contentDisposition string) {
	o.ContentDisposition = contentDisposition
}

// WithPayload adds the payload to the show a o a packet o k response
func (o *ShowAOAPacketOK) WithPayload(payload io.ReadCloser) *ShowAOAPacketOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show a o a packet o k response
func (o *ShowAOAPacketOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowAOAPacketOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Content-Disposition

	contentDisposition := o.ContentDisposition
	if contentDisposition != "" {
		rw.Header().Set("Content-Disposition", contentDisposition)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ShowAOAPacketBadRequestCode is the HTTP code returned for type ShowAOAPacketBadRequest
const ShowAOAPacketBadRequestCode int = 400

/*
ShowAOAPacketBadRequest The request payload is invalid.

swagger:response showAOAPacketBadRequest
*/
type ShowAOAPacketBadRequest struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewShowAOAPacketBadRequest creates ShowAOAPacketBadRequest with default headers values
func NewShowAOAPacketBadRequest() *ShowAOAPacketBadRequest {

	return &ShowAOAPacketBadRequest{}
}

// WithPayload adds the payload to the show a o a packet bad request response
func (o *ShowAOAPacketBadRequest) WithPayload(payload *internalmessages.ClientError) *ShowAOAPacketBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show a o a packet bad request response
func (o *ShowAOAPacketBadRequest) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowAOAPacketBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowAOAPacketForbiddenCode is the HTTP code returned for type ShowAOAPacketForbidden
const ShowAOAPacketForbiddenCode int = 403

/*
ShowAOAPacketForbidden The request was denied.

swagger:response showAOAPacketForbidden
*/
type ShowAOAPacketForbidden struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewShowAOAPacketForbidden creates ShowAOAPacketForbidden with default headers values
func NewShowAOAPacketForbidden() *ShowAOAPacketForbidden {

	return &ShowAOAPacketForbidden{}
}

// WithPayload adds the payload to the show a o a packet forbidden response
func (o *ShowAOAPacketForbidden) WithPayload(payload *internalmessages.ClientError) *ShowAOAPacketForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show a o a packet forbidden response
func (o *ShowAOAPacketForbidden) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowAOAPacketForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowAOAPacketNotFoundCode is the HTTP code returned for type ShowAOAPacketNotFound
const ShowAOAPacketNotFoundCode int = 404

/*
ShowAOAPacketNotFound The requested resource wasn't found.

swagger:response showAOAPacketNotFound
*/
type ShowAOAPacketNotFound struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewShowAOAPacketNotFound creates ShowAOAPacketNotFound with default headers values
func NewShowAOAPacketNotFound() *ShowAOAPacketNotFound {

	return &ShowAOAPacketNotFound{}
}

// WithPayload adds the payload to the show a o a packet not found response
func (o *ShowAOAPacketNotFound) WithPayload(payload *internalmessages.ClientError) *ShowAOAPacketNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show a o a packet not found response
func (o *ShowAOAPacketNotFound) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowAOAPacketNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowAOAPacketUnprocessableEntityCode is the HTTP code returned for type ShowAOAPacketUnprocessableEntity
const ShowAOAPacketUnprocessableEntityCode int = 422

/*
ShowAOAPacketUnprocessableEntity The payload was unprocessable.

swagger:response showAOAPacketUnprocessableEntity
*/
type ShowAOAPacketUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ValidationError `json:"body,omitempty"`
}

// NewShowAOAPacketUnprocessableEntity creates ShowAOAPacketUnprocessableEntity with default headers values
func NewShowAOAPacketUnprocessableEntity() *ShowAOAPacketUnprocessableEntity {

	return &ShowAOAPacketUnprocessableEntity{}
}

// WithPayload adds the payload to the show a o a packet unprocessable entity response
func (o *ShowAOAPacketUnprocessableEntity) WithPayload(payload *internalmessages.ValidationError) *ShowAOAPacketUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show a o a packet unprocessable entity response
func (o *ShowAOAPacketUnprocessableEntity) SetPayload(payload *internalmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowAOAPacketUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowAOAPacketInternalServerErrorCode is the HTTP code returned for type ShowAOAPacketInternalServerError
const ShowAOAPacketInternalServerErrorCode int = 500

/*
ShowAOAPacketInternalServerError A server error occurred.

swagger:response showAOAPacketInternalServerError
*/
type ShowAOAPacketInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.Error `json:"body,omitempty"`
}

// NewShowAOAPacketInternalServerError creates ShowAOAPacketInternalServerError with default headers values
func NewShowAOAPacketInternalServerError() *ShowAOAPacketInternalServerError {

	return &ShowAOAPacketInternalServerError{}
}

// WithPayload adds the payload to the show a o a packet internal server error response
func (o *ShowAOAPacketInternalServerError) WithPayload(payload *internalmessages.Error) *ShowAOAPacketInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show a o a packet internal server error response
func (o *ShowAOAPacketInternalServerError) SetPayload(payload *internalmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowAOAPacketInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
