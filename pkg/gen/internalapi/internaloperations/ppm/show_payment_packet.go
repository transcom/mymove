// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowPaymentPacketHandlerFunc turns a function with the right signature into a show payment packet handler
type ShowPaymentPacketHandlerFunc func(ShowPaymentPacketParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowPaymentPacketHandlerFunc) Handle(params ShowPaymentPacketParams) middleware.Responder {
	return fn(params)
}

// ShowPaymentPacketHandler interface for that can handle valid show payment packet params
type ShowPaymentPacketHandler interface {
	Handle(ShowPaymentPacketParams) middleware.Responder
}

// NewShowPaymentPacket creates a new http.Handler for the show payment packet operation
func NewShowPaymentPacket(ctx *middleware.Context, handler ShowPaymentPacketHandler) *ShowPaymentPacket {
	return &ShowPaymentPacket{Context: ctx, Handler: handler}
}

/*
	ShowPaymentPacket swagger:route GET /ppm-shipments/{ppmShipmentId}/payment-packet ppm showPaymentPacket

# Returns PPM payment packet

Generates a PDF containing all user uploaded documentations for PPM. Contains SSW form, orders, weight and expense documentations.
*/
type ShowPaymentPacket struct {
	Context *middleware.Context
	Handler ShowPaymentPacketHandler
}

func (o *ShowPaymentPacket) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowPaymentPacketParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
