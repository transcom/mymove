// Code generated by go-swagger; DO NOT EDIT.

package ppm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/internalmessages"
)

// UpdateProGearWeightTicketOKCode is the HTTP code returned for type UpdateProGearWeightTicketOK
const UpdateProGearWeightTicketOKCode int = 200

/*
UpdateProGearWeightTicketOK returns an updated pro-gear weight ticket object

swagger:response updateProGearWeightTicketOK
*/
type UpdateProGearWeightTicketOK struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ProGearWeightTicket `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketOK creates UpdateProGearWeightTicketOK with default headers values
func NewUpdateProGearWeightTicketOK() *UpdateProGearWeightTicketOK {

	return &UpdateProGearWeightTicketOK{}
}

// WithPayload adds the payload to the update pro gear weight ticket o k response
func (o *UpdateProGearWeightTicketOK) WithPayload(payload *internalmessages.ProGearWeightTicket) *UpdateProGearWeightTicketOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket o k response
func (o *UpdateProGearWeightTicketOK) SetPayload(payload *internalmessages.ProGearWeightTicket) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProGearWeightTicketBadRequestCode is the HTTP code returned for type UpdateProGearWeightTicketBadRequest
const UpdateProGearWeightTicketBadRequestCode int = 400

/*
UpdateProGearWeightTicketBadRequest The request payload is invalid.

swagger:response updateProGearWeightTicketBadRequest
*/
type UpdateProGearWeightTicketBadRequest struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketBadRequest creates UpdateProGearWeightTicketBadRequest with default headers values
func NewUpdateProGearWeightTicketBadRequest() *UpdateProGearWeightTicketBadRequest {

	return &UpdateProGearWeightTicketBadRequest{}
}

// WithPayload adds the payload to the update pro gear weight ticket bad request response
func (o *UpdateProGearWeightTicketBadRequest) WithPayload(payload *internalmessages.ClientError) *UpdateProGearWeightTicketBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket bad request response
func (o *UpdateProGearWeightTicketBadRequest) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProGearWeightTicketUnauthorizedCode is the HTTP code returned for type UpdateProGearWeightTicketUnauthorized
const UpdateProGearWeightTicketUnauthorizedCode int = 401

/*
UpdateProGearWeightTicketUnauthorized The request was denied.

swagger:response updateProGearWeightTicketUnauthorized
*/
type UpdateProGearWeightTicketUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketUnauthorized creates UpdateProGearWeightTicketUnauthorized with default headers values
func NewUpdateProGearWeightTicketUnauthorized() *UpdateProGearWeightTicketUnauthorized {

	return &UpdateProGearWeightTicketUnauthorized{}
}

// WithPayload adds the payload to the update pro gear weight ticket unauthorized response
func (o *UpdateProGearWeightTicketUnauthorized) WithPayload(payload *internalmessages.ClientError) *UpdateProGearWeightTicketUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket unauthorized response
func (o *UpdateProGearWeightTicketUnauthorized) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProGearWeightTicketForbiddenCode is the HTTP code returned for type UpdateProGearWeightTicketForbidden
const UpdateProGearWeightTicketForbiddenCode int = 403

/*
UpdateProGearWeightTicketForbidden The request was denied.

swagger:response updateProGearWeightTicketForbidden
*/
type UpdateProGearWeightTicketForbidden struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketForbidden creates UpdateProGearWeightTicketForbidden with default headers values
func NewUpdateProGearWeightTicketForbidden() *UpdateProGearWeightTicketForbidden {

	return &UpdateProGearWeightTicketForbidden{}
}

// WithPayload adds the payload to the update pro gear weight ticket forbidden response
func (o *UpdateProGearWeightTicketForbidden) WithPayload(payload *internalmessages.ClientError) *UpdateProGearWeightTicketForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket forbidden response
func (o *UpdateProGearWeightTicketForbidden) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProGearWeightTicketNotFoundCode is the HTTP code returned for type UpdateProGearWeightTicketNotFound
const UpdateProGearWeightTicketNotFoundCode int = 404

/*
UpdateProGearWeightTicketNotFound The requested resource wasn't found.

swagger:response updateProGearWeightTicketNotFound
*/
type UpdateProGearWeightTicketNotFound struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketNotFound creates UpdateProGearWeightTicketNotFound with default headers values
func NewUpdateProGearWeightTicketNotFound() *UpdateProGearWeightTicketNotFound {

	return &UpdateProGearWeightTicketNotFound{}
}

// WithPayload adds the payload to the update pro gear weight ticket not found response
func (o *UpdateProGearWeightTicketNotFound) WithPayload(payload *internalmessages.ClientError) *UpdateProGearWeightTicketNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket not found response
func (o *UpdateProGearWeightTicketNotFound) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProGearWeightTicketPreconditionFailedCode is the HTTP code returned for type UpdateProGearWeightTicketPreconditionFailed
const UpdateProGearWeightTicketPreconditionFailedCode int = 412

/*
UpdateProGearWeightTicketPreconditionFailed Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.

swagger:response updateProGearWeightTicketPreconditionFailed
*/
type UpdateProGearWeightTicketPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketPreconditionFailed creates UpdateProGearWeightTicketPreconditionFailed with default headers values
func NewUpdateProGearWeightTicketPreconditionFailed() *UpdateProGearWeightTicketPreconditionFailed {

	return &UpdateProGearWeightTicketPreconditionFailed{}
}

// WithPayload adds the payload to the update pro gear weight ticket precondition failed response
func (o *UpdateProGearWeightTicketPreconditionFailed) WithPayload(payload *internalmessages.ClientError) *UpdateProGearWeightTicketPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket precondition failed response
func (o *UpdateProGearWeightTicketPreconditionFailed) SetPayload(payload *internalmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProGearWeightTicketUnprocessableEntityCode is the HTTP code returned for type UpdateProGearWeightTicketUnprocessableEntity
const UpdateProGearWeightTicketUnprocessableEntityCode int = 422

/*
UpdateProGearWeightTicketUnprocessableEntity The payload was unprocessable.

swagger:response updateProGearWeightTicketUnprocessableEntity
*/
type UpdateProGearWeightTicketUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketUnprocessableEntity creates UpdateProGearWeightTicketUnprocessableEntity with default headers values
func NewUpdateProGearWeightTicketUnprocessableEntity() *UpdateProGearWeightTicketUnprocessableEntity {

	return &UpdateProGearWeightTicketUnprocessableEntity{}
}

// WithPayload adds the payload to the update pro gear weight ticket unprocessable entity response
func (o *UpdateProGearWeightTicketUnprocessableEntity) WithPayload(payload *internalmessages.ValidationError) *UpdateProGearWeightTicketUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket unprocessable entity response
func (o *UpdateProGearWeightTicketUnprocessableEntity) SetPayload(payload *internalmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProGearWeightTicketInternalServerErrorCode is the HTTP code returned for type UpdateProGearWeightTicketInternalServerError
const UpdateProGearWeightTicketInternalServerErrorCode int = 500

/*
UpdateProGearWeightTicketInternalServerError A server error occurred.

swagger:response updateProGearWeightTicketInternalServerError
*/
type UpdateProGearWeightTicketInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.Error `json:"body,omitempty"`
}

// NewUpdateProGearWeightTicketInternalServerError creates UpdateProGearWeightTicketInternalServerError with default headers values
func NewUpdateProGearWeightTicketInternalServerError() *UpdateProGearWeightTicketInternalServerError {

	return &UpdateProGearWeightTicketInternalServerError{}
}

// WithPayload adds the payload to the update pro gear weight ticket internal server error response
func (o *UpdateProGearWeightTicketInternalServerError) WithPayload(payload *internalmessages.Error) *UpdateProGearWeightTicketInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update pro gear weight ticket internal server error response
func (o *UpdateProGearWeightTicketInternalServerError) SetPayload(payload *internalmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProGearWeightTicketInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
