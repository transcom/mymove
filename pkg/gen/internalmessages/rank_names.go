// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RankNames Rank Abbreviation
//
// # Rank of Servicemember
//
// swagger:model RankNames
type RankNames string

func NewRankNames(value RankNames) *RankNames {
	return &value
}

// Pointer returns a pointer to a freshly-allocated RankNames.
func (m RankNames) Pointer() *RankNames {
	return &m
}

const (

	// RankNamesNr1stSergeant captures enum value "1st Sergeant"
	RankNamesNr1stSergeant RankNames = "1st Sergeant"

	// RankNamesAdmiral captures enum value "Admiral"
	RankNamesAdmiral RankNames = "Admiral"

	// RankNamesAirForceAcademyCadet captures enum value "Air Force Academy Cadet"
	RankNamesAirForceAcademyCadet RankNames = "Air Force Academy Cadet"

	// RankNamesAirman captures enum value "Airman"
	RankNamesAirman RankNames = "Airman"

	// RankNamesAirmanBasic captures enum value "Airman Basic"
	RankNamesAirmanBasic RankNames = "Airman Basic"

	// RankNamesAirmanFirstClass captures enum value "Airman First Class"
	RankNamesAirmanFirstClass RankNames = "Airman First Class"

	// RankNamesAviationCadet captures enum value "Aviation Cadet"
	RankNamesAviationCadet RankNames = "Aviation Cadet"

	// RankNamesBrigadierGeneral captures enum value "Brigadier General"
	RankNamesBrigadierGeneral RankNames = "Brigadier General"

	// RankNamesCadet captures enum value "Cadet"
	RankNamesCadet RankNames = "Cadet"

	// RankNamesCaptain captures enum value "Captain"
	RankNamesCaptain RankNames = "Captain"

	// RankNamesChiefMasterSergeant captures enum value "Chief Master Sergeant"
	RankNamesChiefMasterSergeant RankNames = "Chief Master Sergeant"

	// RankNamesChiefMasterSergeantOfTheAirForce captures enum value "Chief Master Sergeant of the Air Force"
	RankNamesChiefMasterSergeantOfTheAirForce RankNames = "Chief Master Sergeant of the Air Force"

	// RankNamesChiefMasterSergeantOfTheSpaceForce captures enum value "Chief Master Sergeant of the Space Force"
	RankNamesChiefMasterSergeantOfTheSpaceForce RankNames = "Chief Master Sergeant of the Space Force"

	// RankNamesChiefPettyOfficer captures enum value "Chief Petty Officer"
	RankNamesChiefPettyOfficer RankNames = "Chief Petty Officer"

	// RankNamesChiefWarrantOfficer2 captures enum value "Chief Warrant Officer 2"
	RankNamesChiefWarrantOfficer2 RankNames = "Chief Warrant Officer 2"

	// RankNamesChiefWarrantOfficer3 captures enum value "Chief Warrant Officer 3"
	RankNamesChiefWarrantOfficer3 RankNames = "Chief Warrant Officer 3"

	// RankNamesChiefWarrantOfficer4 captures enum value "Chief Warrant Officer 4"
	RankNamesChiefWarrantOfficer4 RankNames = "Chief Warrant Officer 4"

	// RankNamesChiefWarrantOfficer5 captures enum value "Chief Warrant Officer 5"
	RankNamesChiefWarrantOfficer5 RankNames = "Chief Warrant Officer 5"

	// RankNamesCiviian captures enum value "Civiian"
	RankNamesCiviian RankNames = "Civiian"

	// RankNamesCivilian captures enum value "Civilian"
	RankNamesCivilian RankNames = "Civilian"

	// RankNamesColonel captures enum value "Colonel"
	RankNamesColonel RankNames = "Colonel"

	// RankNamesCommandSergeantMajor captures enum value "Command Sergeant Major"
	RankNamesCommandSergeantMajor RankNames = "Command Sergeant Major"

	// RankNamesCommander captures enum value "Commander"
	RankNamesCommander RankNames = "Commander"

	// RankNamesCorporal captures enum value "Corporal"
	RankNamesCorporal RankNames = "Corporal"

	// RankNamesEnsign captures enum value "Ensign"
	RankNamesEnsign RankNames = "Ensign"

	// RankNamesFirstLieutenant captures enum value "First Lieutenant"
	RankNamesFirstLieutenant RankNames = "First Lieutenant"

	// RankNamesGeneral captures enum value "General"
	RankNamesGeneral RankNames = "General"

	// RankNamesGunnerySergeant captures enum value "Gunnery Sergeant"
	RankNamesGunnerySergeant RankNames = "Gunnery Sergeant"

	// RankNamesLanceCorporal captures enum value "Lance Corporal"
	RankNamesLanceCorporal RankNames = "Lance Corporal"

	// RankNamesLieutenant captures enum value "Lieutenant"
	RankNamesLieutenant RankNames = "Lieutenant"

	// RankNamesLieutenantColonel captures enum value "Lieutenant Colonel"
	RankNamesLieutenantColonel RankNames = "Lieutenant Colonel"

	// RankNamesLieutenantCommander captures enum value "Lieutenant Commander"
	RankNamesLieutenantCommander RankNames = "Lieutenant Commander"

	// RankNamesLieutenantGeneral captures enum value "Lieutenant General"
	RankNamesLieutenantGeneral RankNames = "Lieutenant General"

	// RankNamesLieutenantJG captures enum value "Lieutenant JG"
	RankNamesLieutenantJG RankNames = "Lieutenant JG"

	// RankNamesMajor captures enum value "Major"
	RankNamesMajor RankNames = "Major"

	// RankNamesMajorGeneral captures enum value "Major General"
	RankNamesMajorGeneral RankNames = "Major General"

	// RankNamesMasterChiefPettyOfficer captures enum value "Master Chief Petty Officer"
	RankNamesMasterChiefPettyOfficer RankNames = "Master Chief Petty Officer"

	// RankNamesMasterChiefPettyOfficerOfTheCoastGuard captures enum value "Master Chief Petty Officer of the Coast Guard"
	RankNamesMasterChiefPettyOfficerOfTheCoastGuard RankNames = "Master Chief Petty Officer of the Coast Guard"

	// RankNamesMasterChiefPettyOfficerOfTheNavy captures enum value "Master Chief Petty Officer of the Navy"
	RankNamesMasterChiefPettyOfficerOfTheNavy RankNames = "Master Chief Petty Officer of the Navy"

	// RankNamesMasterGunnerySergeant captures enum value "Master Gunnery Sergeant"
	RankNamesMasterGunnerySergeant RankNames = "Master Gunnery Sergeant"

	// RankNamesMasterSergeant captures enum value "Master Sergeant"
	RankNamesMasterSergeant RankNames = "Master Sergeant"

	// RankNamesMidshipman captures enum value "Midshipman"
	RankNamesMidshipman RankNames = "Midshipman"

	// RankNamesOfficerCandidate captures enum value "Officer Candidate"
	RankNamesOfficerCandidate RankNames = "Officer Candidate"

	// RankNamesPettyOfficerFirstClass captures enum value "Petty Officer First Class"
	RankNamesPettyOfficerFirstClass RankNames = "Petty Officer First Class"

	// RankNamesPettyOfficerSecondClass captures enum value "Petty Officer Second Class"
	RankNamesPettyOfficerSecondClass RankNames = "Petty Officer Second Class"

	// RankNamesPettyOfficerThirdClass captures enum value "Petty Officer Third Class"
	RankNamesPettyOfficerThirdClass RankNames = "Petty Officer Third Class"

	// RankNamesPlatoonSergeant captures enum value "Platoon Sergeant"
	RankNamesPlatoonSergeant RankNames = "Platoon Sergeant"

	// RankNamesPrivate captures enum value "Private"
	RankNamesPrivate RankNames = "Private"

	// RankNamesPrivateFirstClass captures enum value "Private First Class"
	RankNamesPrivateFirstClass RankNames = "Private First Class"

	// RankNamesRearAdmiralLowerHalf captures enum value "Rear Admiral (Lower Half)"
	RankNamesRearAdmiralLowerHalf RankNames = "Rear Admiral (Lower Half)"

	// RankNamesRearAdmiralUpperHalf captures enum value "Rear Admiral (Upper Half)"
	RankNamesRearAdmiralUpperHalf RankNames = "Rear Admiral (Upper Half)"

	// RankNamesSeaman captures enum value "Seaman"
	RankNamesSeaman RankNames = "Seaman"

	// RankNamesSeamanApprentice captures enum value "Seaman Apprentice"
	RankNamesSeamanApprentice RankNames = "Seaman Apprentice"

	// RankNamesSeamanRecruit captures enum value "Seaman Recruit"
	RankNamesSeamanRecruit RankNames = "Seaman Recruit"

	// RankNamesSecondLieutenant captures enum value "Second Lieutenant"
	RankNamesSecondLieutenant RankNames = "Second Lieutenant"

	// RankNamesSeniorAirman captures enum value "Senior Airman"
	RankNamesSeniorAirman RankNames = "Senior Airman"

	// RankNamesSeniorChiefPettyOfficer captures enum value "Senior Chief Petty Officer"
	RankNamesSeniorChiefPettyOfficer RankNames = "Senior Chief Petty Officer"

	// RankNamesSeniorMasterSergeant captures enum value "Senior Master Sergeant"
	RankNamesSeniorMasterSergeant RankNames = "Senior Master Sergeant"

	// RankNamesSergeant captures enum value "Sergeant"
	RankNamesSergeant RankNames = "Sergeant"

	// RankNamesSergeantFirstClass captures enum value "Sergeant First Class"
	RankNamesSergeantFirstClass RankNames = "Sergeant First Class"

	// RankNamesSergeantMajor captures enum value "Sergeant Major"
	RankNamesSergeantMajor RankNames = "Sergeant Major"

	// RankNamesSergeantMajorOfTheArmy captures enum value "Sergeant Major of the Army"
	RankNamesSergeantMajorOfTheArmy RankNames = "Sergeant Major of the Army"

	// RankNamesSergeantMajorOfTheMarineCorps captures enum value "Sergeant Major of the Marine Corps"
	RankNamesSergeantMajorOfTheMarineCorps RankNames = "Sergeant Major of the Marine Corps"

	// RankNamesSpecialist captures enum value "Specialist"
	RankNamesSpecialist RankNames = "Specialist"

	// RankNamesSpecialist1 captures enum value "Specialist 1"
	RankNamesSpecialist1 RankNames = "Specialist 1"

	// RankNamesSpecialist2 captures enum value "Specialist 2"
	RankNamesSpecialist2 RankNames = "Specialist 2"

	// RankNamesSpecialist3 captures enum value "Specialist 3"
	RankNamesSpecialist3 RankNames = "Specialist 3"

	// RankNamesSpecialist4 captures enum value "Specialist 4"
	RankNamesSpecialist4 RankNames = "Specialist 4"

	// RankNamesStaffSergeant captures enum value "Staff Sergeant"
	RankNamesStaffSergeant RankNames = "Staff Sergeant"

	// RankNamesTechnicalSergeant captures enum value "Technical Sergeant"
	RankNamesTechnicalSergeant RankNames = "Technical Sergeant"

	// RankNamesViceAdmiral captures enum value "Vice Admiral"
	RankNamesViceAdmiral RankNames = "Vice Admiral"

	// RankNamesWarrantOfficer1 captures enum value "Warrant Officer 1"
	RankNamesWarrantOfficer1 RankNames = "Warrant Officer 1"
)

// for schema
var rankNamesEnum []interface{}

func init() {
	var res []RankNames
	if err := json.Unmarshal([]byte(`["1st Sergeant","Admiral","Air Force Academy Cadet","Airman","Airman Basic","Airman First Class","Aviation Cadet","Brigadier General","Cadet","Captain","Chief Master Sergeant","Chief Master Sergeant of the Air Force","Chief Master Sergeant of the Space Force","Chief Petty Officer","Chief Warrant Officer 2","Chief Warrant Officer 3","Chief Warrant Officer 4","Chief Warrant Officer 5","Civiian","Civilian","Colonel","Command Sergeant Major","Commander","Corporal","Ensign","First Lieutenant","General","Gunnery Sergeant","Lance Corporal","Lieutenant","Lieutenant Colonel","Lieutenant Commander","Lieutenant General","Lieutenant JG","Major","Major General","Master Chief Petty Officer","Master Chief Petty Officer of the Coast Guard","Master Chief Petty Officer of the Navy","Master Gunnery Sergeant","Master Sergeant","Midshipman","Officer Candidate","Petty Officer First Class","Petty Officer Second Class","Petty Officer Third Class","Platoon Sergeant","Private","Private First Class","Rear Admiral (Lower Half)","Rear Admiral (Upper Half)","Seaman","Seaman Apprentice","Seaman Recruit","Second Lieutenant","Senior Airman","Senior Chief Petty Officer","Senior Master Sergeant","Sergeant","Sergeant First Class","Sergeant Major","Sergeant Major of the Army","Sergeant Major of the Marine Corps","Specialist","Specialist 1","Specialist 2","Specialist 3","Specialist 4","Staff Sergeant","Technical Sergeant","Vice Admiral","Warrant Officer 1"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rankNamesEnum = append(rankNamesEnum, v)
	}
}

func (m RankNames) validateRankNamesEnum(path, location string, value RankNames) error {
	if err := validate.EnumCase(path, location, value, rankNamesEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this rank names
func (m RankNames) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRankNamesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this rank names based on context it is used
func (m RankNames) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
