// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WeightAllotment weight allotment
//
// swagger:model WeightAllotment
type WeightAllotment struct {

	// pro gear weight
	// Example: 2000
	// Required: true
	ProGearWeight *int64 `json:"pro_gear_weight"`

	// pro gear weight spouse
	// Example: 500
	// Required: true
	ProGearWeightSpouse *int64 `json:"pro_gear_weight_spouse"`

	// total weight self
	// Example: 18000
	// Required: true
	TotalWeightSelf *int64 `json:"total_weight_self"`

	// total weight self plus dependents
	// Example: 18000
	// Required: true
	TotalWeightSelfPlusDependents *int64 `json:"total_weight_self_plus_dependents"`
}

// Validate validates this weight allotment
func (m *WeightAllotment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProGearWeight(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProGearWeightSpouse(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalWeightSelf(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalWeightSelfPlusDependents(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WeightAllotment) validateProGearWeight(formats strfmt.Registry) error {

	if err := validate.Required("pro_gear_weight", "body", m.ProGearWeight); err != nil {
		return err
	}

	return nil
}

func (m *WeightAllotment) validateProGearWeightSpouse(formats strfmt.Registry) error {

	if err := validate.Required("pro_gear_weight_spouse", "body", m.ProGearWeightSpouse); err != nil {
		return err
	}

	return nil
}

func (m *WeightAllotment) validateTotalWeightSelf(formats strfmt.Registry) error {

	if err := validate.Required("total_weight_self", "body", m.TotalWeightSelf); err != nil {
		return err
	}

	return nil
}

func (m *WeightAllotment) validateTotalWeightSelfPlusDependents(formats strfmt.Registry) error {

	if err := validate.Required("total_weight_self_plus_dependents", "body", m.TotalWeightSelfPlusDependents); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this weight allotment based on context it is used
func (m *WeightAllotment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WeightAllotment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WeightAllotment) UnmarshalBinary(b []byte) error {
	var res WeightAllotment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
