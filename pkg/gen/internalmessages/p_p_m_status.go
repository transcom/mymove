// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PPMStatus PPM status
//
// swagger:model PPMStatus
type PPMStatus string

const (

	// PPMStatusDRAFT captures enum value "DRAFT"
	PPMStatusDRAFT PPMStatus = "DRAFT"

	// PPMStatusSUBMITTED captures enum value "SUBMITTED"
	PPMStatusSUBMITTED PPMStatus = "SUBMITTED"

	// PPMStatusAPPROVED captures enum value "APPROVED"
	PPMStatusAPPROVED PPMStatus = "APPROVED"

	// PPMStatusCOMPLETED captures enum value "COMPLETED"
	PPMStatusCOMPLETED PPMStatus = "COMPLETED"

	// PPMStatusCANCELED captures enum value "CANCELED"
	PPMStatusCANCELED PPMStatus = "CANCELED"

	// PPMStatusPAYMENTREQUESTED captures enum value "PAYMENT_REQUESTED"
	PPMStatusPAYMENTREQUESTED PPMStatus = "PAYMENT_REQUESTED"
)

// for schema
var pPMStatusEnum []interface{}

func init() {
	var res []PPMStatus
	if err := json.Unmarshal([]byte(`["DRAFT","SUBMITTED","APPROVED","COMPLETED","CANCELED","PAYMENT_REQUESTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pPMStatusEnum = append(pPMStatusEnum, v)
	}
}

func (m PPMStatus) validatePPMStatusEnum(path, location string, value PPMStatus) error {
	if err := validate.EnumCase(path, location, value, pPMStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this p p m status
func (m PPMStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePPMStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
