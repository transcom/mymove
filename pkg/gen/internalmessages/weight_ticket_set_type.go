// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WeightTicketSetType Select weight ticket type
//
// swagger:model WeightTicketSetType
type WeightTicketSetType string

func NewWeightTicketSetType(value WeightTicketSetType) *WeightTicketSetType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated WeightTicketSetType.
func (m WeightTicketSetType) Pointer() *WeightTicketSetType {
	return &m
}

const (

	// WeightTicketSetTypeCAR captures enum value "CAR"
	WeightTicketSetTypeCAR WeightTicketSetType = "CAR"

	// WeightTicketSetTypeCARTRAILER captures enum value "CAR_TRAILER"
	WeightTicketSetTypeCARTRAILER WeightTicketSetType = "CAR_TRAILER"

	// WeightTicketSetTypeBOXTRUCK captures enum value "BOX_TRUCK"
	WeightTicketSetTypeBOXTRUCK WeightTicketSetType = "BOX_TRUCK"

	// WeightTicketSetTypePROGEAR captures enum value "PRO_GEAR"
	WeightTicketSetTypePROGEAR WeightTicketSetType = "PRO_GEAR"
)

// for schema
var weightTicketSetTypeEnum []interface{}

func init() {
	var res []WeightTicketSetType
	if err := json.Unmarshal([]byte(`["CAR","CAR_TRAILER","BOX_TRUCK","PRO_GEAR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		weightTicketSetTypeEnum = append(weightTicketSetTypeEnum, v)
	}
}

func (m WeightTicketSetType) validateWeightTicketSetTypeEnum(path, location string, value WeightTicketSetType) error {
	if err := validate.EnumCase(path, location, value, weightTicketSetTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this weight ticket set type
func (m WeightTicketSetType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWeightTicketSetTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this weight ticket set type based on context it is used
func (m WeightTicketSetType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
