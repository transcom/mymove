// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MoveDocumentStatus Document status
//
// swagger:model MoveDocumentStatus
type MoveDocumentStatus string

const (

	// MoveDocumentStatusAWAITINGREVIEW captures enum value "AWAITING_REVIEW"
	MoveDocumentStatusAWAITINGREVIEW MoveDocumentStatus = "AWAITING_REVIEW"

	// MoveDocumentStatusOK captures enum value "OK"
	MoveDocumentStatusOK MoveDocumentStatus = "OK"

	// MoveDocumentStatusHASISSUE captures enum value "HAS_ISSUE"
	MoveDocumentStatusHASISSUE MoveDocumentStatus = "HAS_ISSUE"

	// MoveDocumentStatusEXCLUDEFROMCALCULATION captures enum value "EXCLUDE_FROM_CALCULATION"
	MoveDocumentStatusEXCLUDEFROMCALCULATION MoveDocumentStatus = "EXCLUDE_FROM_CALCULATION"
)

// for schema
var moveDocumentStatusEnum []interface{}

func init() {
	var res []MoveDocumentStatus
	if err := json.Unmarshal([]byte(`["AWAITING_REVIEW","OK","HAS_ISSUE","EXCLUDE_FROM_CALCULATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		moveDocumentStatusEnum = append(moveDocumentStatusEnum, v)
	}
}

func (m MoveDocumentStatus) validateMoveDocumentStatusEnum(path, location string, value MoveDocumentStatus) error {
	if err := validate.EnumCase(path, location, value, moveDocumentStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this move document status
func (m MoveDocumentStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMoveDocumentStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
