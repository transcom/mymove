// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateGunSafeWeightTicket update gun safe weight ticket
//
// swagger:model UpdateGunSafeWeightTicket
type UpdateGunSafeWeightTicket struct {

	// Describes the gun safe that was moved.
	Description string `json:"description,omitempty"`

	// Indicates if the user has a weight ticket for their gun safe, otherwise they have a constructed weight.
	HasWeightTickets bool `json:"hasWeightTickets,omitempty"`

	// Weight of the vehicle not including the gun safe.
	// Minimum: 0
	Weight *int64 `json:"weight,omitempty"`
}

// Validate validates this update gun safe weight ticket
func (m *UpdateGunSafeWeightTicket) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWeight(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateGunSafeWeightTicket) validateWeight(formats strfmt.Registry) error {
	if swag.IsZero(m.Weight) { // not required
		return nil
	}

	if err := validate.MinimumInt("weight", "body", *m.Weight, 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update gun safe weight ticket based on context it is used
func (m *UpdateGunSafeWeightTicket) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateGunSafeWeightTicket) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateGunSafeWeightTicket) UnmarshalBinary(b []byte) error {
	var res UpdateGunSafeWeightTicket
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
