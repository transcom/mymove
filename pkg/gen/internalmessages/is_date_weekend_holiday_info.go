// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IsDateWeekendHolidayInfo is date weekend holiday info
//
// swagger:model IsDateWeekendHolidayInfo
type IsDateWeekendHolidayInfo struct {

	// country code
	// Required: true
	CountryCode *string `json:"country_code"`

	// country name
	// Required: true
	CountryName *string `json:"country_name"`

	// date
	// Example: 2018-09-25
	// Required: true
	// Format: date
	Date *strfmt.Date `json:"date"`

	// details
	Details string `json:"details,omitempty"`

	// is holiday
	// Required: true
	IsHoliday *bool `json:"is_holiday"`

	// is weekend
	// Required: true
	IsWeekend *bool `json:"is_weekend"`
}

// Validate validates this is date weekend holiday info
func (m *IsDateWeekendHolidayInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCountryCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountryName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsHoliday(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsWeekend(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IsDateWeekendHolidayInfo) validateCountryCode(formats strfmt.Registry) error {

	if err := validate.Required("country_code", "body", m.CountryCode); err != nil {
		return err
	}

	return nil
}

func (m *IsDateWeekendHolidayInfo) validateCountryName(formats strfmt.Registry) error {

	if err := validate.Required("country_name", "body", m.CountryName); err != nil {
		return err
	}

	return nil
}

func (m *IsDateWeekendHolidayInfo) validateDate(formats strfmt.Registry) error {

	if err := validate.Required("date", "body", m.Date); err != nil {
		return err
	}

	if err := validate.FormatOf("date", "body", "date", m.Date.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *IsDateWeekendHolidayInfo) validateIsHoliday(formats strfmt.Registry) error {

	if err := validate.Required("is_holiday", "body", m.IsHoliday); err != nil {
		return err
	}

	return nil
}

func (m *IsDateWeekendHolidayInfo) validateIsWeekend(formats strfmt.Registry) error {

	if err := validate.Required("is_weekend", "body", m.IsWeekend); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this is date weekend holiday info based on context it is used
func (m *IsDateWeekendHolidayInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IsDateWeekendHolidayInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IsDateWeekendHolidayInfo) UnmarshalBinary(b []byte) error {
	var res IsDateWeekendHolidayInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
