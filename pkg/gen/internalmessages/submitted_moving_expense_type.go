// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SubmittedMovingExpenseType Customer Submitted Moving Expense Type
//
// swagger:model SubmittedMovingExpenseType
type SubmittedMovingExpenseType string

func NewSubmittedMovingExpenseType(value SubmittedMovingExpenseType) *SubmittedMovingExpenseType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SubmittedMovingExpenseType.
func (m SubmittedMovingExpenseType) Pointer() *SubmittedMovingExpenseType {
	return &m
}

const (

	// SubmittedMovingExpenseTypeCONTRACTEDEXPENSE captures enum value "CONTRACTED_EXPENSE"
	SubmittedMovingExpenseTypeCONTRACTEDEXPENSE SubmittedMovingExpenseType = "CONTRACTED_EXPENSE"

	// SubmittedMovingExpenseTypeGAS captures enum value "GAS"
	SubmittedMovingExpenseTypeGAS SubmittedMovingExpenseType = "GAS"

	// SubmittedMovingExpenseTypeOIL captures enum value "OIL"
	SubmittedMovingExpenseTypeOIL SubmittedMovingExpenseType = "OIL"

	// SubmittedMovingExpenseTypeOTHER captures enum value "OTHER"
	SubmittedMovingExpenseTypeOTHER SubmittedMovingExpenseType = "OTHER"

	// SubmittedMovingExpenseTypePACKINGMATERIALS captures enum value "PACKING_MATERIALS"
	SubmittedMovingExpenseTypePACKINGMATERIALS SubmittedMovingExpenseType = "PACKING_MATERIALS"

	// SubmittedMovingExpenseTypeRENTALEQUIPMENT captures enum value "RENTAL_EQUIPMENT"
	SubmittedMovingExpenseTypeRENTALEQUIPMENT SubmittedMovingExpenseType = "RENTAL_EQUIPMENT"

	// SubmittedMovingExpenseTypeSTORAGE captures enum value "STORAGE"
	SubmittedMovingExpenseTypeSTORAGE SubmittedMovingExpenseType = "STORAGE"

	// SubmittedMovingExpenseTypeTOLLS captures enum value "TOLLS"
	SubmittedMovingExpenseTypeTOLLS SubmittedMovingExpenseType = "TOLLS"

	// SubmittedMovingExpenseTypeWEIGHINGFEE captures enum value "WEIGHING_FEE"
	SubmittedMovingExpenseTypeWEIGHINGFEE SubmittedMovingExpenseType = "WEIGHING_FEE"
)

// for schema
var submittedMovingExpenseTypeEnum []interface{}

func init() {
	var res []SubmittedMovingExpenseType
	if err := json.Unmarshal([]byte(`["CONTRACTED_EXPENSE","GAS","OIL","OTHER","PACKING_MATERIALS","RENTAL_EQUIPMENT","STORAGE","TOLLS","WEIGHING_FEE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		submittedMovingExpenseTypeEnum = append(submittedMovingExpenseTypeEnum, v)
	}
}

func (m SubmittedMovingExpenseType) validateSubmittedMovingExpenseTypeEnum(path, location string, value SubmittedMovingExpenseType) error {
	if err := validate.EnumCase(path, location, value, submittedMovingExpenseTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this submitted moving expense type
func (m SubmittedMovingExpenseType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSubmittedMovingExpenseTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this submitted moving expense type based on context it is used
func (m SubmittedMovingExpenseType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
