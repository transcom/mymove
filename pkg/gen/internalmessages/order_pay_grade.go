// Code generated by go-swagger; DO NOT EDIT.

package internalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OrderPayGrade Grade
//
// swagger:model OrderPayGrade
type OrderPayGrade string

func NewOrderPayGrade(value OrderPayGrade) *OrderPayGrade {
	return &value
}

// Pointer returns a pointer to a freshly-allocated OrderPayGrade.
func (m OrderPayGrade) Pointer() *OrderPayGrade {
	return &m
}

const (

	// OrderPayGradeE1 captures enum value "E_1"
	OrderPayGradeE1 OrderPayGrade = "E_1"

	// OrderPayGradeE2 captures enum value "E_2"
	OrderPayGradeE2 OrderPayGrade = "E_2"

	// OrderPayGradeE3 captures enum value "E_3"
	OrderPayGradeE3 OrderPayGrade = "E_3"

	// OrderPayGradeE4 captures enum value "E_4"
	OrderPayGradeE4 OrderPayGrade = "E_4"

	// OrderPayGradeE5 captures enum value "E_5"
	OrderPayGradeE5 OrderPayGrade = "E_5"

	// OrderPayGradeE6 captures enum value "E_6"
	OrderPayGradeE6 OrderPayGrade = "E_6"

	// OrderPayGradeE7 captures enum value "E_7"
	OrderPayGradeE7 OrderPayGrade = "E_7"

	// OrderPayGradeE8 captures enum value "E_8"
	OrderPayGradeE8 OrderPayGrade = "E_8"

	// OrderPayGradeE9 captures enum value "E_9"
	OrderPayGradeE9 OrderPayGrade = "E_9"

	// OrderPayGradeE9SPECIALSENIORENLISTED captures enum value "E_9_SPECIAL_SENIOR_ENLISTED"
	OrderPayGradeE9SPECIALSENIORENLISTED OrderPayGrade = "E_9_SPECIAL_SENIOR_ENLISTED"

	// OrderPayGradeO1ACADEMYGRADUATE captures enum value "O_1_ACADEMY_GRADUATE"
	OrderPayGradeO1ACADEMYGRADUATE OrderPayGrade = "O_1_ACADEMY_GRADUATE"

	// OrderPayGradeO2 captures enum value "O_2"
	OrderPayGradeO2 OrderPayGrade = "O_2"

	// OrderPayGradeO3 captures enum value "O_3"
	OrderPayGradeO3 OrderPayGrade = "O_3"

	// OrderPayGradeO4 captures enum value "O_4"
	OrderPayGradeO4 OrderPayGrade = "O_4"

	// OrderPayGradeO5 captures enum value "O_5"
	OrderPayGradeO5 OrderPayGrade = "O_5"

	// OrderPayGradeO6 captures enum value "O_6"
	OrderPayGradeO6 OrderPayGrade = "O_6"

	// OrderPayGradeO7 captures enum value "O_7"
	OrderPayGradeO7 OrderPayGrade = "O_7"

	// OrderPayGradeO8 captures enum value "O_8"
	OrderPayGradeO8 OrderPayGrade = "O_8"

	// OrderPayGradeO9 captures enum value "O_9"
	OrderPayGradeO9 OrderPayGrade = "O_9"

	// OrderPayGradeO10 captures enum value "O_10"
	OrderPayGradeO10 OrderPayGrade = "O_10"

	// OrderPayGradeW1 captures enum value "W_1"
	OrderPayGradeW1 OrderPayGrade = "W_1"

	// OrderPayGradeW2 captures enum value "W_2"
	OrderPayGradeW2 OrderPayGrade = "W_2"

	// OrderPayGradeW3 captures enum value "W_3"
	OrderPayGradeW3 OrderPayGrade = "W_3"

	// OrderPayGradeW4 captures enum value "W_4"
	OrderPayGradeW4 OrderPayGrade = "W_4"

	// OrderPayGradeW5 captures enum value "W_5"
	OrderPayGradeW5 OrderPayGrade = "W_5"

	// OrderPayGradeAVIATIONCADET captures enum value "AVIATION_CADET"
	OrderPayGradeAVIATIONCADET OrderPayGrade = "AVIATION_CADET"

	// OrderPayGradeCIVILIANEMPLOYEE captures enum value "CIVILIAN_EMPLOYEE"
	OrderPayGradeCIVILIANEMPLOYEE OrderPayGrade = "CIVILIAN_EMPLOYEE"

	// OrderPayGradeACADEMYCADET captures enum value "ACADEMY_CADET"
	OrderPayGradeACADEMYCADET OrderPayGrade = "ACADEMY_CADET"

	// OrderPayGradeMIDSHIPMAN captures enum value "MIDSHIPMAN"
	OrderPayGradeMIDSHIPMAN OrderPayGrade = "MIDSHIPMAN"
)

// for schema
var orderPayGradeEnum []interface{}

func init() {
	var res []OrderPayGrade
	if err := json.Unmarshal([]byte(`["E_1","E_2","E_3","E_4","E_5","E_6","E_7","E_8","E_9","E_9_SPECIAL_SENIOR_ENLISTED","O_1_ACADEMY_GRADUATE","O_2","O_3","O_4","O_5","O_6","O_7","O_8","O_9","O_10","W_1","W_2","W_3","W_4","W_5","AVIATION_CADET","CIVILIAN_EMPLOYEE","ACADEMY_CADET","MIDSHIPMAN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderPayGradeEnum = append(orderPayGradeEnum, v)
	}
}

func (m OrderPayGrade) validateOrderPayGradeEnum(path, location string, value OrderPayGrade) error {
	if err := validate.EnumCase(path, location, value, orderPayGradeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this order pay grade
func (m OrderPayGrade) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderPayGradeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this order pay grade based on context it is used
func (m OrderPayGrade) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
