// Code generated by go-swagger; DO NOT EDIT.

package payment_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// ProcessReviewedPaymentRequestsReader is a Reader for the ProcessReviewedPaymentRequests structure.
type ProcessReviewedPaymentRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProcessReviewedPaymentRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProcessReviewedPaymentRequestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProcessReviewedPaymentRequestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProcessReviewedPaymentRequestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProcessReviewedPaymentRequestsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProcessReviewedPaymentRequestsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewProcessReviewedPaymentRequestsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProcessReviewedPaymentRequestsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProcessReviewedPaymentRequestsOK creates a ProcessReviewedPaymentRequestsOK with default headers values
func NewProcessReviewedPaymentRequestsOK() *ProcessReviewedPaymentRequestsOK {
	return &ProcessReviewedPaymentRequestsOK{}
}

/* ProcessReviewedPaymentRequestsOK describes a response with status code 200, with default header values.

Successfully updated status of reviewed payment request and sent to Syncada if that flag is set
*/
type ProcessReviewedPaymentRequestsOK struct {
	Payload supportmessages.PaymentRequests
}

func (o *ProcessReviewedPaymentRequestsOK) Error() string {
	return fmt.Sprintf("[PATCH /payment-requests/process-reviewed][%d] processReviewedPaymentRequestsOK  %+v", 200, o.Payload)
}
func (o *ProcessReviewedPaymentRequestsOK) GetPayload() supportmessages.PaymentRequests {
	return o.Payload
}

func (o *ProcessReviewedPaymentRequestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessReviewedPaymentRequestsBadRequest creates a ProcessReviewedPaymentRequestsBadRequest with default headers values
func NewProcessReviewedPaymentRequestsBadRequest() *ProcessReviewedPaymentRequestsBadRequest {
	return &ProcessReviewedPaymentRequestsBadRequest{}
}

/* ProcessReviewedPaymentRequestsBadRequest describes a response with status code 400, with default header values.

The request payload is invalid.
*/
type ProcessReviewedPaymentRequestsBadRequest struct {
	Payload *supportmessages.ClientError
}

func (o *ProcessReviewedPaymentRequestsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /payment-requests/process-reviewed][%d] processReviewedPaymentRequestsBadRequest  %+v", 400, o.Payload)
}
func (o *ProcessReviewedPaymentRequestsBadRequest) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ProcessReviewedPaymentRequestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessReviewedPaymentRequestsUnauthorized creates a ProcessReviewedPaymentRequestsUnauthorized with default headers values
func NewProcessReviewedPaymentRequestsUnauthorized() *ProcessReviewedPaymentRequestsUnauthorized {
	return &ProcessReviewedPaymentRequestsUnauthorized{}
}

/* ProcessReviewedPaymentRequestsUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type ProcessReviewedPaymentRequestsUnauthorized struct {
	Payload *supportmessages.ClientError
}

func (o *ProcessReviewedPaymentRequestsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /payment-requests/process-reviewed][%d] processReviewedPaymentRequestsUnauthorized  %+v", 401, o.Payload)
}
func (o *ProcessReviewedPaymentRequestsUnauthorized) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ProcessReviewedPaymentRequestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessReviewedPaymentRequestsForbidden creates a ProcessReviewedPaymentRequestsForbidden with default headers values
func NewProcessReviewedPaymentRequestsForbidden() *ProcessReviewedPaymentRequestsForbidden {
	return &ProcessReviewedPaymentRequestsForbidden{}
}

/* ProcessReviewedPaymentRequestsForbidden describes a response with status code 403, with default header values.

The request was denied.
*/
type ProcessReviewedPaymentRequestsForbidden struct {
	Payload *supportmessages.ClientError
}

func (o *ProcessReviewedPaymentRequestsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /payment-requests/process-reviewed][%d] processReviewedPaymentRequestsForbidden  %+v", 403, o.Payload)
}
func (o *ProcessReviewedPaymentRequestsForbidden) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ProcessReviewedPaymentRequestsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessReviewedPaymentRequestsNotFound creates a ProcessReviewedPaymentRequestsNotFound with default headers values
func NewProcessReviewedPaymentRequestsNotFound() *ProcessReviewedPaymentRequestsNotFound {
	return &ProcessReviewedPaymentRequestsNotFound{}
}

/* ProcessReviewedPaymentRequestsNotFound describes a response with status code 404, with default header values.

The requested resource wasn't found.
*/
type ProcessReviewedPaymentRequestsNotFound struct {
	Payload *supportmessages.ClientError
}

func (o *ProcessReviewedPaymentRequestsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /payment-requests/process-reviewed][%d] processReviewedPaymentRequestsNotFound  %+v", 404, o.Payload)
}
func (o *ProcessReviewedPaymentRequestsNotFound) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ProcessReviewedPaymentRequestsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessReviewedPaymentRequestsUnprocessableEntity creates a ProcessReviewedPaymentRequestsUnprocessableEntity with default headers values
func NewProcessReviewedPaymentRequestsUnprocessableEntity() *ProcessReviewedPaymentRequestsUnprocessableEntity {
	return &ProcessReviewedPaymentRequestsUnprocessableEntity{}
}

/* ProcessReviewedPaymentRequestsUnprocessableEntity describes a response with status code 422, with default header values.

The payload was unprocessable.
*/
type ProcessReviewedPaymentRequestsUnprocessableEntity struct {
	Payload *supportmessages.ValidationError
}

func (o *ProcessReviewedPaymentRequestsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /payment-requests/process-reviewed][%d] processReviewedPaymentRequestsUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ProcessReviewedPaymentRequestsUnprocessableEntity) GetPayload() *supportmessages.ValidationError {
	return o.Payload
}

func (o *ProcessReviewedPaymentRequestsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessReviewedPaymentRequestsInternalServerError creates a ProcessReviewedPaymentRequestsInternalServerError with default headers values
func NewProcessReviewedPaymentRequestsInternalServerError() *ProcessReviewedPaymentRequestsInternalServerError {
	return &ProcessReviewedPaymentRequestsInternalServerError{}
}

/* ProcessReviewedPaymentRequestsInternalServerError describes a response with status code 500, with default header values.

A server error occurred.
*/
type ProcessReviewedPaymentRequestsInternalServerError struct {
	Payload *supportmessages.Error
}

func (o *ProcessReviewedPaymentRequestsInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /payment-requests/process-reviewed][%d] processReviewedPaymentRequestsInternalServerError  %+v", 500, o.Payload)
}
func (o *ProcessReviewedPaymentRequestsInternalServerError) GetPayload() *supportmessages.Error {
	return o.Payload
}

func (o *ProcessReviewedPaymentRequestsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
