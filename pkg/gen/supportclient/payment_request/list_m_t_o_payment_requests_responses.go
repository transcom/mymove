// Code generated by go-swagger; DO NOT EDIT.

package payment_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// ListMTOPaymentRequestsReader is a Reader for the ListMTOPaymentRequests structure.
type ListMTOPaymentRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMTOPaymentRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListMTOPaymentRequestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListMTOPaymentRequestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListMTOPaymentRequestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListMTOPaymentRequestsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListMTOPaymentRequestsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListMTOPaymentRequestsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /move-task-orders/{moveTaskOrderID}/payment-requests] listMTOPaymentRequests", response, response.Code())
	}
}

// NewListMTOPaymentRequestsOK creates a ListMTOPaymentRequestsOK with default headers values
func NewListMTOPaymentRequestsOK() *ListMTOPaymentRequestsOK {
	return &ListMTOPaymentRequestsOK{}
}

/*
ListMTOPaymentRequestsOK describes a response with status code 200, with default header values.

Successfully retrieved payment requests associated with a given move task order
*/
type ListMTOPaymentRequestsOK struct {
	Payload supportmessages.PaymentRequests
}

// IsSuccess returns true when this list m t o payment requests o k response has a 2xx status code
func (o *ListMTOPaymentRequestsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list m t o payment requests o k response has a 3xx status code
func (o *ListMTOPaymentRequestsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list m t o payment requests o k response has a 4xx status code
func (o *ListMTOPaymentRequestsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list m t o payment requests o k response has a 5xx status code
func (o *ListMTOPaymentRequestsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list m t o payment requests o k response a status code equal to that given
func (o *ListMTOPaymentRequestsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list m t o payment requests o k response
func (o *ListMTOPaymentRequestsOK) Code() int {
	return 200
}

func (o *ListMTOPaymentRequestsOK) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsOK  %+v", 200, o.Payload)
}

func (o *ListMTOPaymentRequestsOK) String() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsOK  %+v", 200, o.Payload)
}

func (o *ListMTOPaymentRequestsOK) GetPayload() supportmessages.PaymentRequests {
	return o.Payload
}

func (o *ListMTOPaymentRequestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMTOPaymentRequestsBadRequest creates a ListMTOPaymentRequestsBadRequest with default headers values
func NewListMTOPaymentRequestsBadRequest() *ListMTOPaymentRequestsBadRequest {
	return &ListMTOPaymentRequestsBadRequest{}
}

/*
ListMTOPaymentRequestsBadRequest describes a response with status code 400, with default header values.

The request payload is invalid.
*/
type ListMTOPaymentRequestsBadRequest struct {
	Payload *supportmessages.ClientError
}

// IsSuccess returns true when this list m t o payment requests bad request response has a 2xx status code
func (o *ListMTOPaymentRequestsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list m t o payment requests bad request response has a 3xx status code
func (o *ListMTOPaymentRequestsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list m t o payment requests bad request response has a 4xx status code
func (o *ListMTOPaymentRequestsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list m t o payment requests bad request response has a 5xx status code
func (o *ListMTOPaymentRequestsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list m t o payment requests bad request response a status code equal to that given
func (o *ListMTOPaymentRequestsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list m t o payment requests bad request response
func (o *ListMTOPaymentRequestsBadRequest) Code() int {
	return 400
}

func (o *ListMTOPaymentRequestsBadRequest) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsBadRequest  %+v", 400, o.Payload)
}

func (o *ListMTOPaymentRequestsBadRequest) String() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsBadRequest  %+v", 400, o.Payload)
}

func (o *ListMTOPaymentRequestsBadRequest) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ListMTOPaymentRequestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMTOPaymentRequestsUnauthorized creates a ListMTOPaymentRequestsUnauthorized with default headers values
func NewListMTOPaymentRequestsUnauthorized() *ListMTOPaymentRequestsUnauthorized {
	return &ListMTOPaymentRequestsUnauthorized{}
}

/*
ListMTOPaymentRequestsUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type ListMTOPaymentRequestsUnauthorized struct {
	Payload *supportmessages.ClientError
}

// IsSuccess returns true when this list m t o payment requests unauthorized response has a 2xx status code
func (o *ListMTOPaymentRequestsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list m t o payment requests unauthorized response has a 3xx status code
func (o *ListMTOPaymentRequestsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list m t o payment requests unauthorized response has a 4xx status code
func (o *ListMTOPaymentRequestsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list m t o payment requests unauthorized response has a 5xx status code
func (o *ListMTOPaymentRequestsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list m t o payment requests unauthorized response a status code equal to that given
func (o *ListMTOPaymentRequestsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list m t o payment requests unauthorized response
func (o *ListMTOPaymentRequestsUnauthorized) Code() int {
	return 401
}

func (o *ListMTOPaymentRequestsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListMTOPaymentRequestsUnauthorized) String() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListMTOPaymentRequestsUnauthorized) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ListMTOPaymentRequestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMTOPaymentRequestsForbidden creates a ListMTOPaymentRequestsForbidden with default headers values
func NewListMTOPaymentRequestsForbidden() *ListMTOPaymentRequestsForbidden {
	return &ListMTOPaymentRequestsForbidden{}
}

/*
ListMTOPaymentRequestsForbidden describes a response with status code 403, with default header values.

The request was denied.
*/
type ListMTOPaymentRequestsForbidden struct {
	Payload *supportmessages.ClientError
}

// IsSuccess returns true when this list m t o payment requests forbidden response has a 2xx status code
func (o *ListMTOPaymentRequestsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list m t o payment requests forbidden response has a 3xx status code
func (o *ListMTOPaymentRequestsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list m t o payment requests forbidden response has a 4xx status code
func (o *ListMTOPaymentRequestsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list m t o payment requests forbidden response has a 5xx status code
func (o *ListMTOPaymentRequestsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list m t o payment requests forbidden response a status code equal to that given
func (o *ListMTOPaymentRequestsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list m t o payment requests forbidden response
func (o *ListMTOPaymentRequestsForbidden) Code() int {
	return 403
}

func (o *ListMTOPaymentRequestsForbidden) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsForbidden  %+v", 403, o.Payload)
}

func (o *ListMTOPaymentRequestsForbidden) String() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsForbidden  %+v", 403, o.Payload)
}

func (o *ListMTOPaymentRequestsForbidden) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ListMTOPaymentRequestsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMTOPaymentRequestsNotFound creates a ListMTOPaymentRequestsNotFound with default headers values
func NewListMTOPaymentRequestsNotFound() *ListMTOPaymentRequestsNotFound {
	return &ListMTOPaymentRequestsNotFound{}
}

/*
ListMTOPaymentRequestsNotFound describes a response with status code 404, with default header values.

The requested resource wasn't found.
*/
type ListMTOPaymentRequestsNotFound struct {
	Payload *supportmessages.ClientError
}

// IsSuccess returns true when this list m t o payment requests not found response has a 2xx status code
func (o *ListMTOPaymentRequestsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list m t o payment requests not found response has a 3xx status code
func (o *ListMTOPaymentRequestsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list m t o payment requests not found response has a 4xx status code
func (o *ListMTOPaymentRequestsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list m t o payment requests not found response has a 5xx status code
func (o *ListMTOPaymentRequestsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list m t o payment requests not found response a status code equal to that given
func (o *ListMTOPaymentRequestsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list m t o payment requests not found response
func (o *ListMTOPaymentRequestsNotFound) Code() int {
	return 404
}

func (o *ListMTOPaymentRequestsNotFound) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsNotFound  %+v", 404, o.Payload)
}

func (o *ListMTOPaymentRequestsNotFound) String() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsNotFound  %+v", 404, o.Payload)
}

func (o *ListMTOPaymentRequestsNotFound) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *ListMTOPaymentRequestsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMTOPaymentRequestsInternalServerError creates a ListMTOPaymentRequestsInternalServerError with default headers values
func NewListMTOPaymentRequestsInternalServerError() *ListMTOPaymentRequestsInternalServerError {
	return &ListMTOPaymentRequestsInternalServerError{}
}

/*
ListMTOPaymentRequestsInternalServerError describes a response with status code 500, with default header values.

A server error occurred.
*/
type ListMTOPaymentRequestsInternalServerError struct {
	Payload *supportmessages.Error
}

// IsSuccess returns true when this list m t o payment requests internal server error response has a 2xx status code
func (o *ListMTOPaymentRequestsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list m t o payment requests internal server error response has a 3xx status code
func (o *ListMTOPaymentRequestsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list m t o payment requests internal server error response has a 4xx status code
func (o *ListMTOPaymentRequestsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list m t o payment requests internal server error response has a 5xx status code
func (o *ListMTOPaymentRequestsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list m t o payment requests internal server error response a status code equal to that given
func (o *ListMTOPaymentRequestsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list m t o payment requests internal server error response
func (o *ListMTOPaymentRequestsInternalServerError) Code() int {
	return 500
}

func (o *ListMTOPaymentRequestsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListMTOPaymentRequestsInternalServerError) String() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] listMTOPaymentRequestsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListMTOPaymentRequestsInternalServerError) GetPayload() *supportmessages.Error {
	return o.Payload
}

func (o *ListMTOPaymentRequestsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
