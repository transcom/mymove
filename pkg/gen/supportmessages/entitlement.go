// Code generated by go-swagger; DO NOT EDIT.

package supportmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Entitlement entitlement
//
// swagger:model Entitlement
type Entitlement struct {

	// authorized weight
	AuthorizedWeight *int64 `json:"authorizedWeight,omitempty"`

	// dependents authorized
	DependentsAuthorized *bool `json:"dependentsAuthorized,omitempty"`

	// e tag
	// Read Only: true
	ETag string `json:"eTag,omitempty"`

	// id
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// non temporary storage
	NonTemporaryStorage *bool `json:"nonTemporaryStorage,omitempty"`

	// organizational clothing and individual equipment
	OrganizationalClothingAndIndividualEquipment bool `json:"organizationalClothingAndIndividualEquipment,omitempty"`

	// privately owned vehicle
	PrivatelyOwnedVehicle *bool `json:"privatelyOwnedVehicle,omitempty"`

	// pro gear weight
	// Read Only: true
	ProGearWeight int64 `json:"proGearWeight,omitempty"`

	// pro gear weight spouse
	// Read Only: true
	ProGearWeightSpouse int64 `json:"proGearWeightSpouse,omitempty"`

	// required medical equipment weight
	RequiredMedicalEquipmentWeight int64 `json:"requiredMedicalEquipmentWeight,omitempty"`

	// storage in transit
	StorageInTransit int64 `json:"storageInTransit,omitempty"`

	// total dependents
	TotalDependents int64 `json:"totalDependents,omitempty"`

	// total weight
	TotalWeight int64 `json:"totalWeight,omitempty"`
}

// Validate validates this entitlement
func (m *Entitlement) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Entitlement) validateID(formats strfmt.Registry) error {

	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Entitlement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Entitlement) UnmarshalBinary(b []byte) error {
	var res Entitlement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
