// Code generated by go-swagger; DO NOT EDIT.

package supportmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OrderType Order type
// swagger:model OrderType
type OrderType string

const (

	// OrderTypePERMANENTCHANGEOFSTATION captures enum value "PERMANENT_CHANGE_OF_STATION"
	OrderTypePERMANENTCHANGEOFSTATION OrderType = "PERMANENT_CHANGE_OF_STATION"

	// OrderTypeRETIREMENT captures enum value "RETIREMENT"
	OrderTypeRETIREMENT OrderType = "RETIREMENT"

	// OrderTypeSEPARATION captures enum value "SEPARATION"
	OrderTypeSEPARATION OrderType = "SEPARATION"

	// OrderTypeGHC captures enum value "GHC"
	OrderTypeGHC OrderType = "GHC"

	// OrderTypeNTS captures enum value "NTS"
	OrderTypeNTS OrderType = "NTS"
)

// for schema
var orderTypeEnum []interface{}

func init() {
	var res []OrderType
	if err := json.Unmarshal([]byte(`["PERMANENT_CHANGE_OF_STATION","RETIREMENT","SEPARATION","GHC","NTS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderTypeEnum = append(orderTypeEnum, v)
	}
}

func (m OrderType) validateOrderTypeEnum(path, location string, value OrderType) error {
	if err := validate.Enum(path, location, value, orderTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this order type
func (m OrderType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
