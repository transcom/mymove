// Code generated by go-swagger; DO NOT EDIT.

package customer_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// IndexCustomerUsersHandlerFunc turns a function with the right signature into a index customer users handler
type IndexCustomerUsersHandlerFunc func(IndexCustomerUsersParams) middleware.Responder

// Handle executing the request and returning a response
func (fn IndexCustomerUsersHandlerFunc) Handle(params IndexCustomerUsersParams) middleware.Responder {
	return fn(params)
}

// IndexCustomerUsersHandler interface for that can handle valid index customer users params
type IndexCustomerUsersHandler interface {
	Handle(IndexCustomerUsersParams) middleware.Responder
}

// NewIndexCustomerUsers creates a new http.Handler for the index customer users operation
func NewIndexCustomerUsers(ctx *middleware.Context, handler IndexCustomerUsersHandler) *IndexCustomerUsers {
	return &IndexCustomerUsers{Context: ctx, Handler: handler}
}

/*IndexCustomerUsers swagger:route GET /customer_users customer_users indexCustomerUsers

List customers

Returns a list of customers

*/
type IndexCustomerUsers struct {
	Context *middleware.Context
	Handler IndexCustomerUsersHandler
}

func (o *IndexCustomerUsers) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewIndexCustomerUsersParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
