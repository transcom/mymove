// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/adminmessages"
)

// GetUploadOKCode is the HTTP code returned for type GetUploadOK
const GetUploadOKCode int = 200

/*
GetUploadOK success

swagger:response getUploadOK
*/
type GetUploadOK struct {

	/*
	  In: Body
	*/
	Payload *adminmessages.UploadInformation `json:"body,omitempty"`
}

// NewGetUploadOK creates GetUploadOK with default headers values
func NewGetUploadOK() *GetUploadOK {

	return &GetUploadOK{}
}

// WithPayload adds the payload to the get upload o k response
func (o *GetUploadOK) WithPayload(payload *adminmessages.UploadInformation) *GetUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload o k response
func (o *GetUploadOK) SetPayload(payload *adminmessages.UploadInformation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadBadRequestCode is the HTTP code returned for type GetUploadBadRequest
const GetUploadBadRequestCode int = 400

/*
GetUploadBadRequest invalid request

swagger:response getUploadBadRequest
*/
type GetUploadBadRequest struct {
}

// NewGetUploadBadRequest creates GetUploadBadRequest with default headers values
func NewGetUploadBadRequest() *GetUploadBadRequest {

	return &GetUploadBadRequest{}
}

// WriteResponse to the client
func (o *GetUploadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetUploadUnauthorizedCode is the HTTP code returned for type GetUploadUnauthorized
const GetUploadUnauthorizedCode int = 401

/*
GetUploadUnauthorized request requires user authentication

swagger:response getUploadUnauthorized
*/
type GetUploadUnauthorized struct {
}

// NewGetUploadUnauthorized creates GetUploadUnauthorized with default headers values
func NewGetUploadUnauthorized() *GetUploadUnauthorized {

	return &GetUploadUnauthorized{}
}

// WriteResponse to the client
func (o *GetUploadUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetUploadNotFoundCode is the HTTP code returned for type GetUploadNotFound
const GetUploadNotFoundCode int = 404

/*
GetUploadNotFound Upload not found

swagger:response getUploadNotFound
*/
type GetUploadNotFound struct {
}

// NewGetUploadNotFound creates GetUploadNotFound with default headers values
func NewGetUploadNotFound() *GetUploadNotFound {

	return &GetUploadNotFound{}
}

// WriteResponse to the client
func (o *GetUploadNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetUploadInternalServerErrorCode is the HTTP code returned for type GetUploadInternalServerError
const GetUploadInternalServerErrorCode int = 500

/*
GetUploadInternalServerError server error

swagger:response getUploadInternalServerError
*/
type GetUploadInternalServerError struct {
}

// NewGetUploadInternalServerError creates GetUploadInternalServerError with default headers values
func NewGetUploadInternalServerError() *GetUploadInternalServerError {

	return &GetUploadInternalServerError{}
}

// WriteResponse to the client
func (o *GetUploadInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
