// Code generated by go-swagger; DO NOT EDIT.

package e_d_i_errors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/adminmessages"
)

// FetchEdiErrorsOKCode is the HTTP code returned for type FetchEdiErrorsOK
const FetchEdiErrorsOKCode int = 200

/*
FetchEdiErrorsOK success

swagger:response fetchEdiErrorsOK
*/
type FetchEdiErrorsOK struct {
	/*Used for pagination

	 */
	ContentRange string `json:"Content-Range"`

	/*
	  In: Body
	*/
	Payload adminmessages.EdiErrors `json:"body,omitempty"`
}

// NewFetchEdiErrorsOK creates FetchEdiErrorsOK with default headers values
func NewFetchEdiErrorsOK() *FetchEdiErrorsOK {

	return &FetchEdiErrorsOK{}
}

// WithContentRange adds the contentRange to the fetch edi errors o k response
func (o *FetchEdiErrorsOK) WithContentRange(contentRange string) *FetchEdiErrorsOK {
	o.ContentRange = contentRange
	return o
}

// SetContentRange sets the contentRange to the fetch edi errors o k response
func (o *FetchEdiErrorsOK) SetContentRange(contentRange string) {
	o.ContentRange = contentRange
}

// WithPayload adds the payload to the fetch edi errors o k response
func (o *FetchEdiErrorsOK) WithPayload(payload adminmessages.EdiErrors) *FetchEdiErrorsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch edi errors o k response
func (o *FetchEdiErrorsOK) SetPayload(payload adminmessages.EdiErrors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchEdiErrorsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Content-Range

	contentRange := o.ContentRange
	if contentRange != "" {
		rw.Header().Set("Content-Range", contentRange)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = adminmessages.EdiErrors{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// FetchEdiErrorsBadRequestCode is the HTTP code returned for type FetchEdiErrorsBadRequest
const FetchEdiErrorsBadRequestCode int = 400

/*
FetchEdiErrorsBadRequest Invalid request

swagger:response fetchEdiErrorsBadRequest
*/
type FetchEdiErrorsBadRequest struct {
}

// NewFetchEdiErrorsBadRequest creates FetchEdiErrorsBadRequest with default headers values
func NewFetchEdiErrorsBadRequest() *FetchEdiErrorsBadRequest {

	return &FetchEdiErrorsBadRequest{}
}

// WriteResponse to the client
func (o *FetchEdiErrorsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// FetchEdiErrorsUnauthorizedCode is the HTTP code returned for type FetchEdiErrorsUnauthorized
const FetchEdiErrorsUnauthorizedCode int = 401

/*
FetchEdiErrorsUnauthorized Must be authenticated to use this end point

swagger:response fetchEdiErrorsUnauthorized
*/
type FetchEdiErrorsUnauthorized struct {
}

// NewFetchEdiErrorsUnauthorized creates FetchEdiErrorsUnauthorized with default headers values
func NewFetchEdiErrorsUnauthorized() *FetchEdiErrorsUnauthorized {

	return &FetchEdiErrorsUnauthorized{}
}

// WriteResponse to the client
func (o *FetchEdiErrorsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// FetchEdiErrorsInternalServerErrorCode is the HTTP code returned for type FetchEdiErrorsInternalServerError
const FetchEdiErrorsInternalServerErrorCode int = 500

/*
FetchEdiErrorsInternalServerError Server error

swagger:response fetchEdiErrorsInternalServerError
*/
type FetchEdiErrorsInternalServerError struct {
}

// NewFetchEdiErrorsInternalServerError creates FetchEdiErrorsInternalServerError with default headers values
func NewFetchEdiErrorsInternalServerError() *FetchEdiErrorsInternalServerError {

	return &FetchEdiErrorsInternalServerError{}
}

// WriteResponse to the client
func (o *FetchEdiErrorsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
