// Code generated by go-swagger; DO NOT EDIT.

package transportation_service_provider_performances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// IndexTSPPsHandlerFunc turns a function with the right signature into a index t s p ps handler
type IndexTSPPsHandlerFunc func(IndexTSPPsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn IndexTSPPsHandlerFunc) Handle(params IndexTSPPsParams) middleware.Responder {
	return fn(params)
}

// IndexTSPPsHandler interface for that can handle valid index t s p ps params
type IndexTSPPsHandler interface {
	Handle(IndexTSPPsParams) middleware.Responder
}

// NewIndexTSPPs creates a new http.Handler for the index t s p ps operation
func NewIndexTSPPs(ctx *middleware.Context, handler IndexTSPPsHandler) *IndexTSPPs {
	return &IndexTSPPs{Context: ctx, Handler: handler}
}

/* IndexTSPPs swagger:route GET /transportation_service_provider_performances transportation_service_provider_performances indexTSPPs

List transportation service provider performances (TSPPs)

Returns a list of transportation service provider performances (TSPPs)

*/
type IndexTSPPs struct {
	Context *middleware.Context
	Handler IndexTSPPsHandler
}

func (o *IndexTSPPs) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewIndexTSPPsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
