// Code generated by go-swagger; DO NOT EDIT.

package rejected_office_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetRejectedOfficeUserHandlerFunc turns a function with the right signature into a get rejected office user handler
type GetRejectedOfficeUserHandlerFunc func(GetRejectedOfficeUserParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRejectedOfficeUserHandlerFunc) Handle(params GetRejectedOfficeUserParams) middleware.Responder {
	return fn(params)
}

// GetRejectedOfficeUserHandler interface for that can handle valid get rejected office user params
type GetRejectedOfficeUserHandler interface {
	Handle(GetRejectedOfficeUserParams) middleware.Responder
}

// NewGetRejectedOfficeUser creates a new http.Handler for the get rejected office user operation
func NewGetRejectedOfficeUser(ctx *middleware.Context, handler GetRejectedOfficeUserHandler) *GetRejectedOfficeUser {
	return &GetRejectedOfficeUser{Context: ctx, Handler: handler}
}

/*
	GetRejectedOfficeUser swagger:route GET /rejected-office-users/{officeUserId} Rejected office users getRejectedOfficeUser

# Get a Rejected Office User

Retrieving a single office user in any status. This endpoint is used in the Admin UI that will allow the admin user to view the user's relevant data.
*/
type GetRejectedOfficeUser struct {
	Context *middleware.Context
	Handler GetRejectedOfficeUserHandler
}

func (o *GetRejectedOfficeUser) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetRejectedOfficeUserParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
