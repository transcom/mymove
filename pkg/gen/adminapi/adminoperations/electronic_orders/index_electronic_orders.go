// Code generated by go-swagger; DO NOT EDIT.

package electronic_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// IndexElectronicOrdersHandlerFunc turns a function with the right signature into a index electronic orders handler
type IndexElectronicOrdersHandlerFunc func(IndexElectronicOrdersParams) middleware.Responder

// Handle executing the request and returning a response
func (fn IndexElectronicOrdersHandlerFunc) Handle(params IndexElectronicOrdersParams) middleware.Responder {
	return fn(params)
}

// IndexElectronicOrdersHandler interface for that can handle valid index electronic orders params
type IndexElectronicOrdersHandler interface {
	Handle(IndexElectronicOrdersParams) middleware.Responder
}

// NewIndexElectronicOrders creates a new http.Handler for the index electronic orders operation
func NewIndexElectronicOrders(ctx *middleware.Context, handler IndexElectronicOrdersHandler) *IndexElectronicOrders {
	return &IndexElectronicOrders{Context: ctx, Handler: handler}
}

/*
	IndexElectronicOrders swagger:route GET /electronic-orders Electronic orders indexElectronicOrders

# List Electronic Orders

This endpoint returns a list of Electronic Orders. Do not use this endpoint
directly as it is meant to be used with the Admin UI exclusively.
*/
type IndexElectronicOrders struct {
	Context *middleware.Context
	Handler IndexElectronicOrdersHandler
}

func (o *IndexElectronicOrders) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewIndexElectronicOrdersParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
