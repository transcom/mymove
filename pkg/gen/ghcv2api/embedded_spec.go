// Code generated by go-swagger; DO NOT EDIT.

package ghcv2api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The GHC V2 API is a RESTful API that enables the Office application for MilMove.\nAll endpoints are located under ` + "`" + `/ghc/v2` + "`" + `.\n",
    "title": "MilMove GHC V2 API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/ghc/v2",
  "paths": {
    "/move_task_orders/{moveTaskOrderID}/mto_shipments/{shipmentID}": {
      "patch": {
        "description": "Updates a specified MTO shipment.\nRequired fields include:\n* MTO Shipment ID required in path\n* If-Match required in headers\n* No fields required in body\nOptional fields include:\n* New shipment status type\n* Shipment Type\n* Customer requested pick-up date\n* Pick-up Address\n* Delivery Address\n* Secondary Pick-up Address\n* SecondaryDelivery Address\n* Delivery Address Type\n* Customer Remarks\n* Counselor Remarks\n* Releasing / Receiving agents\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "updateMTOShipment",
        "operationId": "updateMTOShipment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of move task order for mto shipment to use",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the MTO Shipment to update",
            "name": "shipmentID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateShipmentV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the specified MTO shipment.",
            "schema": {
              "$ref": "definitions/MTOShipment.yaml"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "412": {
            "$ref": "#/responses/PreconditionFailed"
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    }
  },
  "definitions": {
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "UpdatePPMShipment": {
      "type": "object",
      "properties": {
        "actualMoveDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "advanceAmountRequested": {
          "description": "The amount request for an advance, or null if no advance is requested\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true
        },
        "advanceStatus": {
          "x-nullable": true,
          "$ref": "definitions/PPMAdvanceStatus.yaml"
        },
        "destinationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "estimatedWeight": {
          "type": "integer",
          "x-nullable": true,
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to move.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "hasRequestedAdvance": {
          "description": "Indicates whether an advance has been requested for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "pickupPostalCode": {
          "description": "zip code",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "proGearWeight": {
          "type": "integer",
          "x-nullable": true
        },
        "secondaryDestinationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "sitEstimatedDepartureDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedEntryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedWeight": {
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "sitExpected": {
          "type": "boolean",
          "x-nullable": true
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "definitions/SITLocationType.yaml"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "spouseProGearWeight": {
          "type": "integer",
          "x-nullable": true
        },
        "w2Address": {
          "x-nullable": true,
          "$ref": "definitions/Address.yaml"
        }
      }
    },
    "UpdateShipmentV1": {
      "type": "object",
      "properties": {
        "agents": {
          "x-nullable": true,
          "$ref": "definitions/MTOAgents.yaml"
        },
        "billableWeightCap": {
          "description": "estimated weight of the shuttle service item provided by the prime",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2500
        },
        "billableWeightJustification": {
          "type": "string",
          "x-nullable": true,
          "example": "more weight than expected"
        },
        "counselorRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "counselor approved"
        },
        "customerRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "allOf": [
            {
              "$ref": "definitions/Address.yaml"
            }
          ]
        },
        "destinationType": {
          "$ref": "definitions/DestinationType.yaml"
        },
        "hasSecondaryDeliveryAddress": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasSecondaryPickupAddress": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "ntsRecordedWeight": {
          "description": "The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "pickupAddress": {
          "allOf": [
            {
              "$ref": "definitions/Address.yaml"
            }
          ]
        },
        "ppmShipment": {
          "$ref": "#/definitions/UpdatePPMShipment"
        },
        "requestedDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sacType": {
          "$ref": "definitions/LOATypeNullable.yaml"
        },
        "secondaryDeliveryAddress": {
          "allOf": [
            {
              "$ref": "definitions/Address.yaml"
            }
          ]
        },
        "secondaryPickupAddress": {
          "allOf": [
            {
              "$ref": "definitions/Address.yaml"
            }
          ]
        },
        "serviceOrderNumber": {
          "type": "string",
          "x-nullable": true
        },
        "shipmentType": {
          "$ref": "definitions/MTOShipmentType.yaml"
        },
        "storageFacility": {
          "x-nullable": true,
          "$ref": "definitions/StorageFacility.yaml"
        },
        "tacType": {
          "$ref": "definitions/LOATypeNullable.yaml"
        },
        "usesExternalVendor": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "Conflict": {
      "description": "Conflict error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The payload was unprocessable.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The GHC V2 API is a RESTful API that enables the Office application for MilMove.\nAll endpoints are located under ` + "`" + `/ghc/v2` + "`" + `.\n",
    "title": "MilMove GHC V2 API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/ghc/v2",
  "paths": {
    "/move_task_orders/{moveTaskOrderID}/mto_shipments/{shipmentID}": {
      "patch": {
        "description": "Updates a specified MTO shipment.\nRequired fields include:\n* MTO Shipment ID required in path\n* If-Match required in headers\n* No fields required in body\nOptional fields include:\n* New shipment status type\n* Shipment Type\n* Customer requested pick-up date\n* Pick-up Address\n* Delivery Address\n* Secondary Pick-up Address\n* SecondaryDelivery Address\n* Delivery Address Type\n* Customer Remarks\n* Counselor Remarks\n* Releasing / Receiving agents\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment"
        ],
        "summary": "updateMTOShipment",
        "operationId": "updateMTOShipment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of move task order for mto shipment to use",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the MTO Shipment to update",
            "name": "shipmentID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Optimistic locking is implemented via the ` + "`" + `If-Match` + "`" + ` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a ` + "`" + `412 Precondition Failed` + "`" + ` error.\n",
            "name": "If-Match",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateShipmentV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the specified MTO shipment.",
            "schema": {
              "$ref": "#/definitions/mTOShipment"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "The payload was unprocessable.",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SITStatusCurrentSIT": {
      "type": "object",
      "properties": {
        "daysInSIT": {
          "type": "integer",
          "minimum": 0
        },
        "location": {
          "enum": [
            "ORIGIN",
            "DESTINATION"
          ]
        },
        "serviceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "sitAllowanceEndDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitCustomerContacted": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitDepartureDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEntryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitRequestedDelivery": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        }
      }
    },
    "UpdatePPMShipment": {
      "type": "object",
      "properties": {
        "actualMoveDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "advanceAmountRequested": {
          "description": "The amount request for an advance, or null if no advance is requested\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true
        },
        "advanceStatus": {
          "$ref": "#/definitions/pPMAdvanceStatus"
        },
        "destinationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "estimatedWeight": {
          "type": "integer",
          "x-nullable": true,
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to move.\n",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "hasRequestedAdvance": {
          "description": "Indicates whether an advance has been requested for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true
        },
        "pickupPostalCode": {
          "description": "zip code",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "proGearWeight": {
          "type": "integer",
          "x-nullable": true
        },
        "secondaryDestinationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "example": "90210"
        },
        "sitEstimatedDepartureDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedEntryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitEstimatedWeight": {
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "sitExpected": {
          "type": "boolean",
          "x-nullable": true
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/sITLocationType"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "spouseProGearWeight": {
          "type": "integer",
          "x-nullable": true
        },
        "w2Address": {
          "$ref": "#/definitions/address"
        }
      }
    },
    "UpdateShipmentV1": {
      "type": "object",
      "properties": {
        "agents": {
          "$ref": "#/definitions/mTOAgents"
        },
        "billableWeightCap": {
          "description": "estimated weight of the shuttle service item provided by the prime",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2500
        },
        "billableWeightJustification": {
          "type": "string",
          "x-nullable": true,
          "example": "more weight than expected"
        },
        "counselorRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "counselor approved"
        },
        "customerRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "destinationAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ]
        },
        "destinationType": {
          "$ref": "#/definitions/destinationType"
        },
        "hasSecondaryDeliveryAddress": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasSecondaryPickupAddress": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "ntsRecordedWeight": {
          "description": "The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "pickupAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ]
        },
        "ppmShipment": {
          "$ref": "#/definitions/UpdatePPMShipment"
        },
        "requestedDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sacType": {
          "$ref": "#/definitions/lOATypeNullable"
        },
        "secondaryDeliveryAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ]
        },
        "secondaryPickupAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ]
        },
        "serviceOrderNumber": {
          "type": "string",
          "x-nullable": true
        },
        "shipmentType": {
          "$ref": "#/definitions/mTOShipmentType"
        },
        "storageFacility": {
          "$ref": "#/definitions/storageFacility"
        },
        "tacType": {
          "$ref": "#/definitions/lOATypeNullable"
        },
        "usesExternalVendor": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "$ref": "#/definitions/ValidationErrorAllOf1"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ValidationErrorAllOf1": {
      "type": "object"
    },
    "address": {
      "description": "A postal address",
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "customerContactType": {
      "description": "Describes a customer contact type for a MTOServiceItem of type domestic destination SIT.",
      "type": "string",
      "enum": [
        "FIRST",
        "SECOND"
      ]
    },
    "destinationType": {
      "type": "string",
      "title": "Destination Type",
      "enum": [
        "HOME_OF_RECORD",
        "HOME_OF_SELECTION",
        "PLACE_ENTERED_ACTIVE_DUTY",
        "OTHER_THAN_AUTHORIZED"
      ],
      "x-nullable": true,
      "example": "OTHER_THAN_AUTHORIZED"
    },
    "dimensionType": {
      "description": "Describes a dimension type for a MTOServiceItemDimension.",
      "type": "string",
      "enum": [
        "ITEM",
        "CRATE"
      ]
    },
    "document": {
      "type": "object",
      "required": [
        "id",
        "service_member_id",
        "uploads"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "service_member_id": {
          "type": "string",
          "format": "uuid",
          "title": "The service member this document belongs to"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/upload"
          }
        }
      }
    },
    "lOAType": {
      "description": "The Line of accounting (TAC/SAC) type that will be used for the shipment",
      "type": "string",
      "enum": [
        "HHG",
        "NTS"
      ],
      "example": "HHG"
    },
    "lOATypeNullable": {
      "description": "The Line of accounting (TAC/SAC) type that will be used for the shipment",
      "type": "string",
      "enum": [
        "HHG",
        "NTS"
      ],
      "x-go-type": {
        "import": {
          "package": "github.com/transcom/mymove/pkg/swagger/nullable"
        },
        "type": "String"
      },
      "example": "HHG"
    },
    "mTOAgent": {
      "type": "object",
      "properties": {
        "agentType": {
          "type": "string",
          "enum": [
            "RELEASING_AGENT",
            "RECEIVING_AGENT"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "eTag": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "(^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$)|(^$)",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "(^[2-9]\\d{2}-\\d{3}-\\d{4}$)|(^$)",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "mTOAgents": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/mTOAgent"
      }
    },
    "mTOServiceItem": {
      "type": "object",
      "required": [
        "id",
        "moveTaskOrderID",
        "reServiceID",
        "reServiceCode",
        "reServiceName"
      ],
      "properties": {
        "SITPostalCode": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        },
        "approvedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "convertToCustomerExpense": {
          "type": "boolean",
          "x-omitempty": false,
          "example": false
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "customerContacts": {
          "$ref": "#/definitions/mTOServiceItemCustomerContacts"
        },
        "customerExpenseReason": {
          "type": "string",
          "x-nullable": true
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "dimensions": {
          "$ref": "#/definitions/mTOServiceItemDimensions"
        },
        "eTag": {
          "type": "string"
        },
        "estimatedWeight": {
          "description": "estimated weight of the shuttle service item provided by the prime",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2500
        },
        "feeType": {
          "type": "string",
          "enum": [
            "COUNSELING",
            "CRATING",
            "TRUCKING",
            "SHUTTLE"
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupPostalCode": {
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "type": "integer"
        },
        "rate": {
          "type": "integer"
        },
        "reServiceCode": {
          "type": "string"
        },
        "reServiceID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "type": "string"
        },
        "reason": {
          "type": "string",
          "x-nullable": true
        },
        "rejectedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true
        },
        "serviceRequestDocuments": {
          "$ref": "#/definitions/serviceRequestDocuments"
        },
        "sitAddressUpdates": {
          "$ref": "#/definitions/sITAddressUpdates"
        },
        "sitCustomerContacted": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "sitDepartureDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "sitDestinationFinalAddress": {
          "$ref": "#/definitions/address"
        },
        "sitDestinationOriginalAddress": {
          "$ref": "#/definitions/address"
        },
        "sitEntryDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "sitRequestedDelivery": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "status": {
          "$ref": "#/definitions/mTOServiceItemStatus"
        },
        "submittedAt": {
          "type": "string",
          "format": "date"
        },
        "total": {
          "type": "integer",
          "format": "cents"
        },
        "updateReason": {
          "description": "Reason for updating service item.",
          "type": "string",
          "x-nullable": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "mTOServiceItemCustomerContact": {
      "description": "Customer contact information for a destination SIT service item",
      "type": "object",
      "properties": {
        "dateOfContact": {
          "description": "Date of attempted contact by the prime.",
          "type": "string",
          "format": "date"
        },
        "firstAvailableDeliveryDate": {
          "description": "First available date that the Prime can deliver SIT service item.",
          "type": "string",
          "format": "date",
          "example": "2020-12-31"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "timeMilitary": {
          "description": "Time of attempted contact by the prime.",
          "type": "string",
          "example": "0400Z"
        },
        "type": {
          "$ref": "#/definitions/customerContactType"
        }
      }
    },
    "mTOServiceItemCustomerContacts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/mTOServiceItemCustomerContact"
      }
    },
    "mTOServiceItemDimension": {
      "description": "Describes a dimension object for the MTOServiceItem.",
      "type": "object",
      "properties": {
        "height": {
          "description": "Height in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "length": {
          "description": "Length in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        },
        "type": {
          "$ref": "#/definitions/dimensionType"
        },
        "width": {
          "description": "Width in thousandth inches. 1000 thou = 1 inch.",
          "type": "integer",
          "format": "int32",
          "example": 1000
        }
      }
    },
    "mTOServiceItemDimensions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/mTOServiceItemDimension"
      }
    },
    "mTOServiceItemStatus": {
      "description": "Describes all statuses for a MTOServiceItem",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "REJECTED"
      ]
    },
    "mTOServiceItems": {
      "description": "A list of service items connected to this shipment.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/mTOServiceItem"
      }
    },
    "mTOShipment": {
      "properties": {
        "actualDeliveryDate": {
          "description": "The actual date that the shipment was delivered to the destination address by the Prime",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "actualPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "approvedDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "billableWeightCap": {
          "description": "TIO override billable weight to be used for calculations",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2500
        },
        "billableWeightJustification": {
          "type": "string",
          "x-nullable": true,
          "example": "more weight than expected"
        },
        "calculatedBillableWeight": {
          "type": "integer",
          "x-nullable": true,
          "readOnly": true,
          "example": 2000
        },
        "counselorRemarks": {
          "description": "The counselor can use the counselor remarks field to inform the movers about any\nspecial circumstances for this shipment. Typical examples:\n  * bulky or fragile items,\n  * weapons,\n  * access info for their address.\nCounselors enters this information when creating or editing an MTO Shipment. Optional field.\n",
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "customerRemarks": {
          "type": "string",
          "x-nullable": true,
          "example": "handle with care"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "deliveryAddressUpdate": {
          "$ref": "#/definitions/shipmentAddressUpdate"
        },
        "destinationAddress": {
          "$ref": "#/definitions/address"
        },
        "destinationType": {
          "$ref": "#/definitions/destinationType"
        },
        "diversion": {
          "type": "boolean",
          "example": true
        },
        "eTag": {
          "type": "string"
        },
        "hasSecondaryDeliveryAddress": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasSecondaryPickupAddress": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoAgents": {
          "$ref": "#/definitions/mTOAgents"
        },
        "mtoServiceItems": {
          "$ref": "#/definitions/mTOServiceItems"
        },
        "ntsRecordedWeight": {
          "description": "The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.",
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "pickupAddress": {
          "$ref": "#/definitions/address"
        },
        "ppmShipment": {
          "$ref": "#/definitions/pPMShipment"
        },
        "primeActualWeight": {
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "primeEstimatedWeight": {
          "type": "integer",
          "x-nullable": true,
          "example": 2000
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "MTO Shipment not good enough"
        },
        "requestedDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requiredDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "reweigh": {
          "$ref": "#/definitions/reweigh"
        },
        "sacType": {
          "allOf": [
            {
              "$ref": "#/definitions/lOAType"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "scheduledDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "scheduledPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "secondaryDeliveryAddress": {
          "$ref": "#/definitions/address"
        },
        "secondaryPickupAddress": {
          "$ref": "#/definitions/address"
        },
        "serviceOrderNumber": {
          "type": "string",
          "x-nullable": true
        },
        "shipmentType": {
          "$ref": "#/definitions/mTOShipmentType"
        },
        "sitDaysAllowance": {
          "type": "integer",
          "x-nullable": true
        },
        "sitExtensions": {
          "$ref": "#/definitions/sITExtensions"
        },
        "sitStatus": {
          "$ref": "#/definitions/sITStatus"
        },
        "status": {
          "$ref": "#/definitions/mTOShipmentStatus"
        },
        "storageFacility": {
          "$ref": "#/definitions/storageFacility"
        },
        "tacType": {
          "allOf": [
            {
              "$ref": "#/definitions/lOAType"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "usesExternalVendor": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "mTOShipmentStatus": {
      "type": "string",
      "title": "Shipment Status",
      "enum": [
        "SUBMITTED",
        "REJECTED",
        "APPROVED",
        "CANCELLATION_REQUESTED",
        "CANCELED",
        "DIVERSION_REQUESTED"
      ],
      "example": "SUBMITTED"
    },
    "mTOShipmentType": {
      "type": "string",
      "title": "Shipment Type",
      "enum": [
        "HHG",
        "HHG_INTO_NTS_DOMESTIC",
        "HHG_OUTOF_NTS_DOMESTIC",
        "INTERNATIONAL_HHG",
        "INTERNATIONAL_UB",
        "PPM"
      ],
      "x-display-value": {
        "HHG": "HHG",
        "HHG_INTO_NTS_DOMESTIC": "NTS",
        "HHG_OUTOF_NTS_DOMESTIC": "NTS Release",
        "INTERNATIONAL_HHG": "International HHG",
        "INTERNATIONAL_UB": "International UB",
        "PPM": "PPM"
      },
      "example": "HHG"
    },
    "movingExpense": {
      "description": "Expense information and receipts of costs incurred that can be reimbursed while moving a PPM shipment.",
      "type": "object",
      "required": [
        "id",
        "createdAt",
        "updatedAt",
        "ppmShipmentId",
        "documentId",
        "document"
      ],
      "properties": {
        "amount": {
          "description": "The total amount of the expense as indicated on the receipt",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "createdAt": {
          "description": "Timestamp the moving expense object was initially created in the system (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "description": {
          "description": "A brief description of the expense",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false
        },
        "document": {
          "allOf": [
            {
              "description": "The Document object that contains all file uploads for this expense"
            },
            {
              "$ref": "#/definitions/document"
            }
          ]
        },
        "documentId": {
          "description": "The id of the Document that contains all file uploads for this expense",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "description": "A hash that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Unique primary identifier of the Moving Expense object",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "missingReceipt": {
          "description": "Indicates if the service member is missing the receipt with the proof of expense amount",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "movingExpenseType": {
          "$ref": "#/definitions/omittableMovingExpenseType"
        },
        "paidWithGtcc": {
          "description": "Indicates if the service member used their government issued card to pay for the expense",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "ppmShipmentId": {
          "description": "The PPM Shipment id that this moving expense belongs to",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "reason": {
          "$ref": "#/definitions/pPMDocumentStatusReason"
        },
        "sitEndDate": {
          "description": "The date the shipment exited storage, applicable for the ` + "`" + `STORAGE` + "`" + ` movingExpenseType only",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "2018-05-26"
        },
        "sitStartDate": {
          "description": "The date the shipment entered storage, applicable for the ` + "`" + `STORAGE` + "`" + ` movingExpenseType only",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "2022-04-26"
        },
        "status": {
          "$ref": "#/definitions/omittablePPMDocumentStatus"
        },
        "updatedAt": {
          "description": "Timestamp when a property of this moving expense object was last modified (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "omittableMovingExpenseType": {
      "description": "Moving Expense Type",
      "type": "string",
      "enum": [
        "CONTRACTED_EXPENSE",
        "GAS",
        "OIL",
        "OTHER",
        "PACKING_MATERIALS",
        "RENTAL_EQUIPMENT",
        "STORAGE",
        "TOLLS",
        "WEIGHING_FEE"
      ],
      "x-display-value": {
        "CONTRACTED_EXPENSE": "Contracted expense",
        "GAS": "Gas",
        "OIL": "Oil",
        "OTHER": "Other",
        "PACKING_MATERIALS": "Packing materials",
        "RENTAL_EQUIPMENT": "Rental equipment",
        "STORAGE": "Storage",
        "TOLLS": "Tolls",
        "WEIGHING_FEE": "Weighing fee"
      },
      "x-nullable": true,
      "x-omitempty": false
    },
    "omittablePPMDocumentStatus": {
      "description": "Status of the PPM document.",
      "type": "string",
      "enum": [
        "APPROVED",
        "EXCLUDED",
        "REJECTED"
      ],
      "x-display-value": {
        "APPROVED": "Approved",
        "EXCLUDED": "Excluded",
        "REJECTED": "Rejected"
      },
      "x-nullable": true,
      "x-omitempty": false
    },
    "pPMAdvanceStatus": {
      "description": "Indicates whether an advance status has been accepted, rejected, or edited.",
      "type": "string",
      "title": "PPM Advance Status",
      "enum": [
        "APPROVED",
        "REJECTED",
        "EDITED"
      ],
      "x-nullable": true
    },
    "pPMDocumentStatusReason": {
      "description": "The reason the services counselor has excluded or rejected the item.",
      "type": "string",
      "x-nullable": true,
      "x-omitempty": false
    },
    "pPMShipment": {
      "description": "A personally procured move is a type of shipment that a service member moves themselves.",
      "required": [
        "id",
        "shipmentId",
        "createdAt",
        "status",
        "expectedDepartureDate",
        "pickupPostalCode",
        "destinationPostalCode",
        "sitExpected",
        "eTag"
      ],
      "properties": {
        "actualDestinationPostalCode": {
          "description": "The actual postal code where the PPM shipment ended. To be filled once the customer has moved the shipment.\n",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "actualMoveDate": {
          "description": "The actual start date of when the PPM shipment left the origin.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "actualPickupPostalCode": {
          "description": "The actual postal code where the PPM shipment started. To be filled once the customer has moved the shipment.\n",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "advanceAmountReceived": {
          "description": "The amount received for an advance, or null if no advance is received.\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "advanceAmountRequested": {
          "description": "The amount requested as an advance by the service member up to a maximum percentage of the estimated incentive.\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "advanceStatus": {
          "$ref": "#/definitions/pPMAdvanceStatus"
        },
        "approvedAt": {
          "description": "The timestamp of when the shipment was approved and the service member can begin their move.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "createdAt": {
          "description": "Timestamp of when the PPM Shipment was initially created (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "destinationPostalCode": {
          "description": "The postal code of the destination location where goods are being delivered to.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "eTag": {
          "description": "A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "estimatedIncentive": {
          "description": "The estimated amount the government will pay the service member to move their belongings based on the moving date, locations, and shipment weight.",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "estimatedWeight": {
          "description": "The estimated weight of the PPM shipment goods being moved.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 4200
        },
        "expectedDepartureDate": {
          "description": "Date the customer expects to begin their move.\n",
          "type": "string",
          "format": "date"
        },
        "finalIncentive": {
          "description": "The final calculated incentive for the PPM shipment. This does not include **SIT** as it is a reimbursement.\n",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true
        },
        "hasProGear": {
          "description": "Indicates whether PPM shipment has pro gear for themselves or their spouse.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasReceivedAdvance": {
          "description": "Indicates whether an advance was received for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "hasRequestedAdvance": {
          "description": "Indicates whether an advance has been requested for the PPM shipment.\n",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "description": "Primary auto-generated unique identifier of the PPM shipment object",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "movingExpenses": {
          "description": "All expense documentation receipt records of this PPM shipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/movingExpense"
          }
        },
        "pickupPostalCode": {
          "description": "The postal code of the origin location where goods are being moved from.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "proGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to the service member.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "proGearWeightTickets": {
          "description": "All pro-gear weight ticket documentation records for this PPM shipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/proGearWeightTicket"
          }
        },
        "reviewedAt": {
          "description": "The timestamp of when the Service Counselor has reviewed all of the closeout documents.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "secondaryDestinationPostalCode": {
          "description": "An optional secondary location near the destination where goods will be dropped off.",
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "secondaryPickupPostalCode": {
          "type": "string",
          "format": "An optional secondary pickup location near the origin where additional goods exist.",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "90210"
        },
        "shipmentId": {
          "description": "The id of the parent MTOShipment object",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "signedCertification": {
          "$ref": "#/definitions/signedCertification"
        },
        "sitEstimatedCost": {
          "description": "The estimated amount that the government will pay the service member to put their goods into storage. This estimated storage cost is separate from the estimated incentive.",
          "type": "integer",
          "format": "cents",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedDepartureDate": {
          "description": "The date that goods will exit the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedEntryDate": {
          "description": "The date that goods will first enter the storage location.",
          "type": "string",
          "format": "date",
          "x-nullable": true,
          "x-omitempty": false
        },
        "sitEstimatedWeight": {
          "description": "The estimated weight of the goods being put into storage.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        },
        "sitExpected": {
          "description": "Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.\n\nMust be set to ` + "`" + `true` + "`" + ` when providing ` + "`" + `sitLocation` + "`" + `, ` + "`" + `sitEstimatedWeight` + "`" + `, ` + "`" + `sitEstimatedEntryDate` + "`" + `, and ` + "`" + `sitEstimatedDepartureDate` + "`" + ` values to calculate the ` + "`" + `sitEstimatedCost` + "`" + `.\n",
          "type": "boolean"
        },
        "sitLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/sITLocationType"
            },
            {
              "x-nullable": true
            },
            {
              "x-omitempty": false
            }
          ]
        },
        "spouseProGearWeight": {
          "description": "The estimated weight of the pro-gear being moved belonging to a spouse.",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false
        },
        "status": {
          "$ref": "#/definitions/pPMShipmentStatus"
        },
        "submittedAt": {
          "description": "The timestamp of when the customer submitted their PPM documentation to the counselor for review.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "updatedAt": {
          "description": "Timestamp of when a property of this object was last updated (UTC)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "w2Address": {
          "$ref": "#/definitions/address"
        },
        "weightTickets": {
          "$ref": "#/definitions/weightTickets"
        }
      },
      "x-nullable": true
    },
    "pPMShipmentStatus": {
      "description": "Status of the PPM Shipment:\n  * **DRAFT**: The customer has created the PPM shipment but has not yet submitted their move for counseling.\n  * **SUBMITTED**: The shipment belongs to a move that has been submitted by the customer or has been created by a Service Counselor or Prime Contractor for a submitted move.\n  * **WAITING_ON_CUSTOMER**: The PPM shipment has been approved and the customer may now provide their actual move closeout information and documentation required to get paid.\n  * **NEEDS_ADVANCE_APPROVAL**: The shipment was counseled by the Prime Contractor and approved but an advance was requested so will need further financial approval from the government.\n  * **NEEDS_PAYMENT_APPROVAL**: The customer has provided their closeout weight tickets, receipts, and expenses and certified it for the Service Counselor to approve, exclude or reject.\n  * **PAYMENT_APPROVED**: The Service Counselor has reviewed all of the customer's PPM closeout documentation and authorizes the customer can download and submit their finalized SSW packet.\n",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "WAITING_ON_CUSTOMER",
        "NEEDS_ADVANCE_APPROVAL",
        "NEEDS_PAYMENT_APPROVAL",
        "PAYMENT_APPROVED"
      ],
      "readOnly": true
    },
    "proGearWeightTicket": {
      "description": "Pro-gear associated information and weight docs for a PPM shipment",
      "type": "object",
      "required": [
        "ppmShipmentId",
        "createdAt",
        "updatedAt",
        "documentId",
        "document"
      ],
      "properties": {
        "belongsToSelf": {
          "description": "Indicates if this information is for the customer's own pro-gear, otherwise, it's the spouse's.",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "description": {
          "description": "Describes the pro-gear that was moved.",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false
        },
        "document": {
          "allOf": [
            {
              "description": "Document that is associated with the user uploads containing the pro-gear weight."
            },
            {
              "$ref": "#/definitions/document"
            }
          ]
        },
        "documentId": {
          "description": "The ID of the document that is associated with the user uploads containing the pro-gear weight.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "eTag": {
          "description": "A hash that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "hasWeightTickets": {
          "description": "Indicates if the user has a weight ticket for their pro-gear, otherwise they have a constructed weight.",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "description": "The ID of the pro-gear weight ticket.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "ppmShipmentId": {
          "description": "The ID of the PPM shipment that this pro-gear weight ticket is associated with.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "reason": {
          "$ref": "#/definitions/pPMDocumentStatusReason"
        },
        "status": {
          "$ref": "#/definitions/omittablePPMDocumentStatus"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "weight": {
          "description": "Weight of the pro-gear.",
          "type": "integer",
          "minimum": 0,
          "x-nullable": true,
          "x-omitempty": false
        }
      }
    },
    "reweigh": {
      "description": "A reweigh  is when a shipment is weighed for a second time due to the request of a customer, the contractor, system or TOO.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "requestedAt": {
          "type": "string",
          "format": "date-time"
        },
        "requestedBy": {
          "$ref": "#/definitions/reweighRequester"
        },
        "shipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "verificationProvidedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "verificationReason": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The reweigh was not performed due to some justification provided by the counselor"
        },
        "weight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 2000
        }
      }
    },
    "reweighRequester": {
      "type": "string",
      "enum": [
        "CUSTOMER",
        "PRIME",
        "SYSTEM",
        "TOO"
      ]
    },
    "sITAddressUpdate": {
      "description": "An update to a SIT service item address.",
      "type": "object",
      "properties": {
        "contractorRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The customer has found a new house closer to base."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "distance": {
          "description": "The distance between the old address and the new address in miles.",
          "type": "integer",
          "minimum": 0,
          "example": 54
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoServiceItemID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "newAddress": {
          "$ref": "#/definitions/address"
        },
        "officeRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "The customer has found a new house closer to base."
        },
        "oldAddress": {
          "$ref": "#/definitions/address"
        },
        "status": {
          "enum": [
            "REQUESTED",
            "APPROVED",
            "REJECTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "sITAddressUpdates": {
      "description": "A list of updates to a SIT service item address.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/sITAddressUpdate"
      }
    },
    "sITExtension": {
      "description": "A storage in transit (SIT) Extension is a request for an increase in the billable number of days a shipment is allowed to be in SIT.",
      "type": "object",
      "properties": {
        "approvedDays": {
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 30
        },
        "contractorRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "We need SIT additional days. The customer has not found a house yet."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "decisionDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "mtoShipmentID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "officeRemarks": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false
        },
        "requestReason": {
          "type": "string",
          "enum": [
            "SERIOUS_ILLNESS_MEMBER",
            "SERIOUS_ILLNESS_DEPENDENT",
            "IMPENDING_ASSIGNEMENT",
            "DIRECTED_TEMPORARY_DUTY",
            "NONAVAILABILITY_OF_CIVILIAN_HOUSING",
            "AWAITING_COMPLETION_OF_RESIDENCE",
            "OTHER"
          ]
        },
        "requestedDays": {
          "type": "integer",
          "example": 30
        },
        "status": {
          "enum": [
            "PENDING",
            "APPROVED",
            "DENIED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "sITExtensions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/sITExtension"
      }
    },
    "sITLocationType": {
      "description": "The list of SIT location types.",
      "type": "string",
      "enum": [
        "ORIGIN",
        "DESTINATION"
      ]
    },
    "sITStatus": {
      "properties": {
        "calculatedTotalDaysInSIT": {
          "type": "integer",
          "minimum": 0
        },
        "currentSIT": {
          "type": "object",
          "properties": {
            "daysInSIT": {
              "type": "integer",
              "minimum": 0
            },
            "location": {
              "enum": [
                "ORIGIN",
                "DESTINATION"
              ]
            },
            "serviceItemID": {
              "type": "string",
              "format": "uuid",
              "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
            },
            "sitAllowanceEndDate": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitCustomerContacted": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitDepartureDate": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitEntryDate": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "sitRequestedDelivery": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            }
          }
        },
        "pastSITServiceItems": {
          "$ref": "#/definitions/mTOServiceItems"
        },
        "totalDaysRemaining": {
          "type": "integer",
          "minimum": 0
        },
        "totalSITDaysUsed": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "serviceRequestDocument": {
      "type": "object",
      "properties": {
        "mtoServiceItemID": {
          "type": "string",
          "format": "uuid"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/upload"
          }
        }
      }
    },
    "serviceRequestDocuments": {
      "description": "documents uploaded by the Prime as proof of request for service items",
      "type": "array",
      "items": {
        "$ref": "#/definitions/serviceRequestDocument"
      }
    },
    "shipmentAddressUpdate": {
      "description": "This represents a destination address change request made by the Prime that is either auto-approved or requires review if the pricing criteria has changed. If criteria has changed, then it must be approved or rejected by a TOO.\n",
      "type": "object",
      "required": [
        "id",
        "status",
        "shipmentID",
        "originalAddress",
        "newAddress",
        "contractorRemarks"
      ],
      "properties": {
        "contractorRemarks": {
          "description": "The reason there is an address change.",
          "type": "string",
          "title": "Contractor Remarks",
          "readOnly": true,
          "example": "This is a contractor remark"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "newAddress": {
          "$ref": "#/definitions/address"
        },
        "officeRemarks": {
          "description": "The TOO comment on approval or rejection.",
          "type": "string",
          "title": "Office Remarks",
          "x-nullable": true,
          "example": "This is an office remark"
        },
        "originalAddress": {
          "$ref": "#/definitions/address"
        },
        "shipmentID": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "status": {
          "$ref": "#/definitions/shipmentAddressUpdateStatus"
        }
      }
    },
    "shipmentAddressUpdateStatus": {
      "type": "string",
      "title": "Status",
      "enum": [
        "REQUESTED",
        "REJECTED",
        "APPROVED"
      ],
      "x-display-value": {
        "APPROVED": "APPROVED",
        "REJECTED": "REJECTED",
        "REQUESTED": "REQUESTED"
      },
      "readOnly": true
    },
    "signedCertification": {
      "description": "Signed certification",
      "type": "object",
      "required": [
        "id",
        "submittingUserId",
        "moveId",
        "certificationType",
        "certificationText",
        "signature",
        "date",
        "createdAt",
        "updatedAt",
        "eTag"
      ],
      "properties": {
        "certificationText": {
          "description": "Full text that the customer agreed to and signed.",
          "type": "string"
        },
        "certificationType": {
          "$ref": "#/definitions/signedCertificationType"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "date": {
          "description": "Date that the customer signed the certification.",
          "type": "string",
          "format": "date"
        },
        "eTag": {
          "description": "A hash that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the signed certification.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "moveId": {
          "description": "The ID of the move associated with this signed certification.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "ppmId": {
          "description": "The ID of the PPM shipment associated with this signed certification, if any.",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "signature": {
          "description": "The signature that the customer provided.",
          "type": "string"
        },
        "submittingUserId": {
          "description": "The ID of the user that signed.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "signedCertificationType": {
      "description": "The type of signed certification:\n  - PPM_PAYMENT: This is used when the customer has a PPM shipment that they have uploaded their documents for and are\n      ready to submit their documentation for review. When they submit, they will be asked to sign certifying the\n      information is correct.\n  - SHIPMENT: This is used when a customer submits their move with their shipments to be reviewed by office users.\n",
      "type": "string",
      "enum": [
        "PPM_PAYMENT",
        "SHIPMENT"
      ],
      "readOnly": true
    },
    "storageFacility": {
      "description": "The Storage Facility information for the shipment",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true
        },
        "facilityName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "lotNumber": {
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "type": "string",
          "format": "telephone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true
        }
      }
    },
    "upload": {
      "description": "An uploaded file.",
      "type": "object",
      "required": [
        "id",
        "url",
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer",
          "readOnly": true
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "readOnly": true,
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "filename": {
          "type": "string",
          "readOnly": true,
          "example": "filename.pdf"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isWeightTicket": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "INFECTED",
            "CLEAN",
            "PROCESSING"
          ],
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "example": "https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "weightTicket": {
      "description": "Vehicle and optional trailer information and weight documents used to move this PPM shipment.",
      "type": "object",
      "required": [
        "ppmShipmentId",
        "createdAt",
        "updatedAt",
        "emptyDocumentId",
        "emptyDocument",
        "fullDocument",
        "fullDocumentId",
        "proofOfTrailerOwnershipDocument",
        "proofOfTrailerOwnershipDocumentId"
      ],
      "properties": {
        "adjustedNetWeight": {
          "description": "Indicates the adjusted net weight of the vehicle",
          "type": "integer",
          "minimum": 0,
          "x-nullable": true,
          "x-omitempty": false
        },
        "allowableWeight": {
          "description": "Maximum reimbursable weight.",
          "type": "integer",
          "minimum": 0,
          "x-nullable": true,
          "x-omitempty": false
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "description": "A hash that should be used as the \"If-Match\" header for any updates.",
          "type": "string",
          "readOnly": true
        },
        "emptyDocument": {
          "allOf": [
            {
              "description": "Document that is associated with the user uploads containing the vehicle weight when empty."
            },
            {
              "$ref": "#/definitions/document"
            }
          ]
        },
        "emptyDocumentId": {
          "description": "ID of the document that is associated with the user uploads containing the vehicle weight when empty.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "emptyWeight": {
          "description": "Weight of the vehicle when empty.",
          "type": "integer",
          "minimum": 0,
          "x-nullable": true,
          "x-omitempty": false
        },
        "fullDocument": {
          "allOf": [
            {
              "description": "Document that is associated with the user uploads containing the vehicle weight when full."
            },
            {
              "$ref": "#/definitions/document"
            }
          ]
        },
        "fullDocumentId": {
          "description": "ID of the document that is associated with the user uploads containing the vehicle weight when full.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "fullWeight": {
          "description": "The weight of the vehicle when full.",
          "type": "integer",
          "minimum": 0,
          "x-nullable": true,
          "x-omitempty": false
        },
        "id": {
          "description": "ID of this set of weight tickets.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "missingEmptyWeightTicket": {
          "description": "Indicates if the customer is missing a weight ticket for the vehicle weight when empty.",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "missingFullWeightTicket": {
          "description": "Indicates if the customer is missing a weight ticket for the vehicle weight when full.",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "netWeightRemarks": {
          "description": "Remarks explaining any edits made to the net weight",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false
        },
        "ownsTrailer": {
          "description": "Indicates if the customer used a trailer they own for the move.",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "ppmShipmentId": {
          "description": "The ID of the PPM shipment that this set of weight tickets is for.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "proofOfTrailerOwnershipDocument": {
          "allOf": [
            {
              "description": "Document that is associated with the user uploads containing the proof of trailer ownership."
            },
            {
              "$ref": "#/definitions/document"
            }
          ]
        },
        "proofOfTrailerOwnershipDocumentId": {
          "description": "ID of the document that is associated with the user uploads containing the proof of trailer ownership.",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "reason": {
          "$ref": "#/definitions/pPMDocumentStatusReason"
        },
        "status": {
          "$ref": "#/definitions/omittablePPMDocumentStatus"
        },
        "trailerMeetsCriteria": {
          "description": "Indicates if the trailer that the customer used meets all the criteria to be claimable.",
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "vehicleDescription": {
          "description": "Description of the vehicle used for the trip. E.g. make/model, type of truck/van, etc.",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false
        }
      }
    },
    "weightTickets": {
      "description": "All weight tickets associated with a PPM shipment.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/weightTicket"
      },
      "x-omitempty": false
    }
  },
  "responses": {
    "Conflict": {
      "description": "Conflict error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "The payload was unprocessable.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    }
  }
}`))
}
