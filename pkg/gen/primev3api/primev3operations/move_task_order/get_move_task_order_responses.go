// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/primev3messages"
)

// GetMoveTaskOrderOKCode is the HTTP code returned for type GetMoveTaskOrderOK
const GetMoveTaskOrderOKCode int = 200

/*
GetMoveTaskOrderOK Successfully retrieve an individual move task order.

swagger:response getMoveTaskOrderOK
*/
type GetMoveTaskOrderOK struct {

	/*
	  In: Body
	*/
	Payload *primev3messages.MoveTaskOrder `json:"body,omitempty"`
}

// NewGetMoveTaskOrderOK creates GetMoveTaskOrderOK with default headers values
func NewGetMoveTaskOrderOK() *GetMoveTaskOrderOK {

	return &GetMoveTaskOrderOK{}
}

// WithPayload adds the payload to the get move task order o k response
func (o *GetMoveTaskOrderOK) WithPayload(payload *primev3messages.MoveTaskOrder) *GetMoveTaskOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order o k response
func (o *GetMoveTaskOrderOK) SetPayload(payload *primev3messages.MoveTaskOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveTaskOrderUnauthorizedCode is the HTTP code returned for type GetMoveTaskOrderUnauthorized
const GetMoveTaskOrderUnauthorizedCode int = 401

/*
GetMoveTaskOrderUnauthorized The request was denied.

swagger:response getMoveTaskOrderUnauthorized
*/
type GetMoveTaskOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *primev3messages.ClientError `json:"body,omitempty"`
}

// NewGetMoveTaskOrderUnauthorized creates GetMoveTaskOrderUnauthorized with default headers values
func NewGetMoveTaskOrderUnauthorized() *GetMoveTaskOrderUnauthorized {

	return &GetMoveTaskOrderUnauthorized{}
}

// WithPayload adds the payload to the get move task order unauthorized response
func (o *GetMoveTaskOrderUnauthorized) WithPayload(payload *primev3messages.ClientError) *GetMoveTaskOrderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order unauthorized response
func (o *GetMoveTaskOrderUnauthorized) SetPayload(payload *primev3messages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveTaskOrderForbiddenCode is the HTTP code returned for type GetMoveTaskOrderForbidden
const GetMoveTaskOrderForbiddenCode int = 403

/*
GetMoveTaskOrderForbidden The request was denied.

swagger:response getMoveTaskOrderForbidden
*/
type GetMoveTaskOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *primev3messages.ClientError `json:"body,omitempty"`
}

// NewGetMoveTaskOrderForbidden creates GetMoveTaskOrderForbidden with default headers values
func NewGetMoveTaskOrderForbidden() *GetMoveTaskOrderForbidden {

	return &GetMoveTaskOrderForbidden{}
}

// WithPayload adds the payload to the get move task order forbidden response
func (o *GetMoveTaskOrderForbidden) WithPayload(payload *primev3messages.ClientError) *GetMoveTaskOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order forbidden response
func (o *GetMoveTaskOrderForbidden) SetPayload(payload *primev3messages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveTaskOrderNotFoundCode is the HTTP code returned for type GetMoveTaskOrderNotFound
const GetMoveTaskOrderNotFoundCode int = 404

/*
GetMoveTaskOrderNotFound The requested resource wasn't found.

swagger:response getMoveTaskOrderNotFound
*/
type GetMoveTaskOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload *primev3messages.ClientError `json:"body,omitempty"`
}

// NewGetMoveTaskOrderNotFound creates GetMoveTaskOrderNotFound with default headers values
func NewGetMoveTaskOrderNotFound() *GetMoveTaskOrderNotFound {

	return &GetMoveTaskOrderNotFound{}
}

// WithPayload adds the payload to the get move task order not found response
func (o *GetMoveTaskOrderNotFound) WithPayload(payload *primev3messages.ClientError) *GetMoveTaskOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order not found response
func (o *GetMoveTaskOrderNotFound) SetPayload(payload *primev3messages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveTaskOrderInternalServerErrorCode is the HTTP code returned for type GetMoveTaskOrderInternalServerError
const GetMoveTaskOrderInternalServerErrorCode int = 500

/*
GetMoveTaskOrderInternalServerError A server error occurred.

swagger:response getMoveTaskOrderInternalServerError
*/
type GetMoveTaskOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *primev3messages.Error `json:"body,omitempty"`
}

// NewGetMoveTaskOrderInternalServerError creates GetMoveTaskOrderInternalServerError with default headers values
func NewGetMoveTaskOrderInternalServerError() *GetMoveTaskOrderInternalServerError {

	return &GetMoveTaskOrderInternalServerError{}
}

// WithPayload adds the payload to the get move task order internal server error response
func (o *GetMoveTaskOrderInternalServerError) WithPayload(payload *primev3messages.Error) *GetMoveTaskOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order internal server error response
func (o *GetMoveTaskOrderInternalServerError) SetPayload(payload *primev3messages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
