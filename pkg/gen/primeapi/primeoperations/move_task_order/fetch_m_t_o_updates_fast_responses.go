// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// FetchMTOUpdatesFastOKCode is the HTTP code returned for type FetchMTOUpdatesFastOK
const FetchMTOUpdatesFastOKCode int = 200

/*FetchMTOUpdatesFastOK Successfully retrieved move task orders where `availableToPrimeAt` has been set.

swagger:response fetchMTOUpdatesFastOK
*/
type FetchMTOUpdatesFastOK struct {

	/*
	  In: Body
	*/
	Payload primemessages.FetchMoveTaskOrders `json:"body,omitempty"`
}

// NewFetchMTOUpdatesFastOK creates FetchMTOUpdatesFastOK with default headers values
func NewFetchMTOUpdatesFastOK() *FetchMTOUpdatesFastOK {

	return &FetchMTOUpdatesFastOK{}
}

// WithPayload adds the payload to the fetch m t o updates fast o k response
func (o *FetchMTOUpdatesFastOK) WithPayload(payload primemessages.FetchMoveTaskOrders) *FetchMTOUpdatesFastOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch m t o updates fast o k response
func (o *FetchMTOUpdatesFastOK) SetPayload(payload primemessages.FetchMoveTaskOrders) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchMTOUpdatesFastOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = primemessages.FetchMoveTaskOrders{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// FetchMTOUpdatesFastBadRequestCode is the HTTP code returned for type FetchMTOUpdatesFastBadRequest
const FetchMTOUpdatesFastBadRequestCode int = 400

/*FetchMTOUpdatesFastBadRequest The request payload is invalid.

swagger:response fetchMTOUpdatesFastBadRequest
*/
type FetchMTOUpdatesFastBadRequest struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewFetchMTOUpdatesFastBadRequest creates FetchMTOUpdatesFastBadRequest with default headers values
func NewFetchMTOUpdatesFastBadRequest() *FetchMTOUpdatesFastBadRequest {

	return &FetchMTOUpdatesFastBadRequest{}
}

// WithPayload adds the payload to the fetch m t o updates fast bad request response
func (o *FetchMTOUpdatesFastBadRequest) WithPayload(payload *primemessages.ClientError) *FetchMTOUpdatesFastBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch m t o updates fast bad request response
func (o *FetchMTOUpdatesFastBadRequest) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchMTOUpdatesFastBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FetchMTOUpdatesFastUnauthorizedCode is the HTTP code returned for type FetchMTOUpdatesFastUnauthorized
const FetchMTOUpdatesFastUnauthorizedCode int = 401

/*FetchMTOUpdatesFastUnauthorized The request was denied.

swagger:response fetchMTOUpdatesFastUnauthorized
*/
type FetchMTOUpdatesFastUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewFetchMTOUpdatesFastUnauthorized creates FetchMTOUpdatesFastUnauthorized with default headers values
func NewFetchMTOUpdatesFastUnauthorized() *FetchMTOUpdatesFastUnauthorized {

	return &FetchMTOUpdatesFastUnauthorized{}
}

// WithPayload adds the payload to the fetch m t o updates fast unauthorized response
func (o *FetchMTOUpdatesFastUnauthorized) WithPayload(payload *primemessages.ClientError) *FetchMTOUpdatesFastUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch m t o updates fast unauthorized response
func (o *FetchMTOUpdatesFastUnauthorized) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchMTOUpdatesFastUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FetchMTOUpdatesFastForbiddenCode is the HTTP code returned for type FetchMTOUpdatesFastForbidden
const FetchMTOUpdatesFastForbiddenCode int = 403

/*FetchMTOUpdatesFastForbidden The request was denied.

swagger:response fetchMTOUpdatesFastForbidden
*/
type FetchMTOUpdatesFastForbidden struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewFetchMTOUpdatesFastForbidden creates FetchMTOUpdatesFastForbidden with default headers values
func NewFetchMTOUpdatesFastForbidden() *FetchMTOUpdatesFastForbidden {

	return &FetchMTOUpdatesFastForbidden{}
}

// WithPayload adds the payload to the fetch m t o updates fast forbidden response
func (o *FetchMTOUpdatesFastForbidden) WithPayload(payload *primemessages.ClientError) *FetchMTOUpdatesFastForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch m t o updates fast forbidden response
func (o *FetchMTOUpdatesFastForbidden) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchMTOUpdatesFastForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FetchMTOUpdatesFastNotFoundCode is the HTTP code returned for type FetchMTOUpdatesFastNotFound
const FetchMTOUpdatesFastNotFoundCode int = 404

/*FetchMTOUpdatesFastNotFound The requested resource wasn't found.

swagger:response fetchMTOUpdatesFastNotFound
*/
type FetchMTOUpdatesFastNotFound struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewFetchMTOUpdatesFastNotFound creates FetchMTOUpdatesFastNotFound with default headers values
func NewFetchMTOUpdatesFastNotFound() *FetchMTOUpdatesFastNotFound {

	return &FetchMTOUpdatesFastNotFound{}
}

// WithPayload adds the payload to the fetch m t o updates fast not found response
func (o *FetchMTOUpdatesFastNotFound) WithPayload(payload *primemessages.ClientError) *FetchMTOUpdatesFastNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch m t o updates fast not found response
func (o *FetchMTOUpdatesFastNotFound) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchMTOUpdatesFastNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FetchMTOUpdatesFastInternalServerErrorCode is the HTTP code returned for type FetchMTOUpdatesFastInternalServerError
const FetchMTOUpdatesFastInternalServerErrorCode int = 500

/*FetchMTOUpdatesFastInternalServerError A server error occurred.

swagger:response fetchMTOUpdatesFastInternalServerError
*/
type FetchMTOUpdatesFastInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *primemessages.Error `json:"body,omitempty"`
}

// NewFetchMTOUpdatesFastInternalServerError creates FetchMTOUpdatesFastInternalServerError with default headers values
func NewFetchMTOUpdatesFastInternalServerError() *FetchMTOUpdatesFastInternalServerError {

	return &FetchMTOUpdatesFastInternalServerError{}
}

// WithPayload adds the payload to the fetch m t o updates fast internal server error response
func (o *FetchMTOUpdatesFastInternalServerError) WithPayload(payload *primemessages.Error) *FetchMTOUpdatesFastInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch m t o updates fast internal server error response
func (o *FetchMTOUpdatesFastInternalServerError) SetPayload(payload *primemessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchMTOUpdatesFastInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
