// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// DownloadMoveOrderOKCode is the HTTP code returned for type DownloadMoveOrderOK
const DownloadMoveOrderOKCode int = 200

/*
DownloadMoveOrderOK Move Order PDF

swagger:response downloadMoveOrderOK
*/
type DownloadMoveOrderOK struct {
	/*File name to download

	 */
	ContentDisposition string `json:"Content-Disposition"`

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewDownloadMoveOrderOK creates DownloadMoveOrderOK with default headers values
func NewDownloadMoveOrderOK() *DownloadMoveOrderOK {

	return &DownloadMoveOrderOK{}
}

// WithContentDisposition adds the contentDisposition to the download move order o k response
func (o *DownloadMoveOrderOK) WithContentDisposition(contentDisposition string) *DownloadMoveOrderOK {
	o.ContentDisposition = contentDisposition
	return o
}

// SetContentDisposition sets the contentDisposition to the download move order o k response
func (o *DownloadMoveOrderOK) SetContentDisposition(contentDisposition string) {
	o.ContentDisposition = contentDisposition
}

// WithPayload adds the payload to the download move order o k response
func (o *DownloadMoveOrderOK) WithPayload(payload io.ReadCloser) *DownloadMoveOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download move order o k response
func (o *DownloadMoveOrderOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadMoveOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Content-Disposition

	contentDisposition := o.ContentDisposition
	if contentDisposition != "" {
		rw.Header().Set("Content-Disposition", contentDisposition)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DownloadMoveOrderBadRequestCode is the HTTP code returned for type DownloadMoveOrderBadRequest
const DownloadMoveOrderBadRequestCode int = 400

/*
DownloadMoveOrderBadRequest The request payload is invalid.

swagger:response downloadMoveOrderBadRequest
*/
type DownloadMoveOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewDownloadMoveOrderBadRequest creates DownloadMoveOrderBadRequest with default headers values
func NewDownloadMoveOrderBadRequest() *DownloadMoveOrderBadRequest {

	return &DownloadMoveOrderBadRequest{}
}

// WithPayload adds the payload to the download move order bad request response
func (o *DownloadMoveOrderBadRequest) WithPayload(payload *primemessages.ClientError) *DownloadMoveOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download move order bad request response
func (o *DownloadMoveOrderBadRequest) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadMoveOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadMoveOrderForbiddenCode is the HTTP code returned for type DownloadMoveOrderForbidden
const DownloadMoveOrderForbiddenCode int = 403

/*
DownloadMoveOrderForbidden The request was denied.

swagger:response downloadMoveOrderForbidden
*/
type DownloadMoveOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewDownloadMoveOrderForbidden creates DownloadMoveOrderForbidden with default headers values
func NewDownloadMoveOrderForbidden() *DownloadMoveOrderForbidden {

	return &DownloadMoveOrderForbidden{}
}

// WithPayload adds the payload to the download move order forbidden response
func (o *DownloadMoveOrderForbidden) WithPayload(payload *primemessages.ClientError) *DownloadMoveOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download move order forbidden response
func (o *DownloadMoveOrderForbidden) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadMoveOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadMoveOrderNotFoundCode is the HTTP code returned for type DownloadMoveOrderNotFound
const DownloadMoveOrderNotFoundCode int = 404

/*
DownloadMoveOrderNotFound The requested resource wasn't found.

swagger:response downloadMoveOrderNotFound
*/
type DownloadMoveOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewDownloadMoveOrderNotFound creates DownloadMoveOrderNotFound with default headers values
func NewDownloadMoveOrderNotFound() *DownloadMoveOrderNotFound {

	return &DownloadMoveOrderNotFound{}
}

// WithPayload adds the payload to the download move order not found response
func (o *DownloadMoveOrderNotFound) WithPayload(payload *primemessages.ClientError) *DownloadMoveOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download move order not found response
func (o *DownloadMoveOrderNotFound) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadMoveOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadMoveOrderUnprocessableEntityCode is the HTTP code returned for type DownloadMoveOrderUnprocessableEntity
const DownloadMoveOrderUnprocessableEntityCode int = 422

/*
DownloadMoveOrderUnprocessableEntity The request was unprocessable, likely due to bad input from the requester.

swagger:response downloadMoveOrderUnprocessableEntity
*/
type DownloadMoveOrderUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ValidationError `json:"body,omitempty"`
}

// NewDownloadMoveOrderUnprocessableEntity creates DownloadMoveOrderUnprocessableEntity with default headers values
func NewDownloadMoveOrderUnprocessableEntity() *DownloadMoveOrderUnprocessableEntity {

	return &DownloadMoveOrderUnprocessableEntity{}
}

// WithPayload adds the payload to the download move order unprocessable entity response
func (o *DownloadMoveOrderUnprocessableEntity) WithPayload(payload *primemessages.ValidationError) *DownloadMoveOrderUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download move order unprocessable entity response
func (o *DownloadMoveOrderUnprocessableEntity) SetPayload(payload *primemessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadMoveOrderUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadMoveOrderInternalServerErrorCode is the HTTP code returned for type DownloadMoveOrderInternalServerError
const DownloadMoveOrderInternalServerErrorCode int = 500

/*
DownloadMoveOrderInternalServerError A server error occurred.

swagger:response downloadMoveOrderInternalServerError
*/
type DownloadMoveOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *primemessages.Error `json:"body,omitempty"`
}

// NewDownloadMoveOrderInternalServerError creates DownloadMoveOrderInternalServerError with default headers values
func NewDownloadMoveOrderInternalServerError() *DownloadMoveOrderInternalServerError {

	return &DownloadMoveOrderInternalServerError{}
}

// WithPayload adds the payload to the download move order internal server error response
func (o *DownloadMoveOrderInternalServerError) WithPayload(payload *primemessages.Error) *DownloadMoveOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download move order internal server error response
func (o *DownloadMoveOrderInternalServerError) SetPayload(payload *primemessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadMoveOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
