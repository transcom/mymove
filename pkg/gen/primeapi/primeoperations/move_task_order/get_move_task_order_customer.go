// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetMoveTaskOrderCustomerHandlerFunc turns a function with the right signature into a get move task order customer handler
type GetMoveTaskOrderCustomerHandlerFunc func(GetMoveTaskOrderCustomerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMoveTaskOrderCustomerHandlerFunc) Handle(params GetMoveTaskOrderCustomerParams) middleware.Responder {
	return fn(params)
}

// GetMoveTaskOrderCustomerHandler interface for that can handle valid get move task order customer params
type GetMoveTaskOrderCustomerHandler interface {
	Handle(GetMoveTaskOrderCustomerParams) middleware.Responder
}

// NewGetMoveTaskOrderCustomer creates a new http.Handler for the get move task order customer operation
func NewGetMoveTaskOrderCustomer(ctx *middleware.Context, handler GetMoveTaskOrderCustomerHandler) *GetMoveTaskOrderCustomer {
	return &GetMoveTaskOrderCustomer{Context: ctx, Handler: handler}
}

/*GetMoveTaskOrderCustomer swagger:route GET /move-task-orders/{moveTaskOrderID}/customer moveTaskOrder prime getMoveTaskOrderCustomer

Gets a the customer associated with a move task order ID

Gets a the customer associated with a move task order ID

*/
type GetMoveTaskOrderCustomer struct {
	Context *middleware.Context
	Handler GetMoveTaskOrderCustomerHandler
}

func (o *GetMoveTaskOrderCustomer) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetMoveTaskOrderCustomerParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
