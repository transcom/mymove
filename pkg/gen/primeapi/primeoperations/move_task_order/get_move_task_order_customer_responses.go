// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	primemessages "github.com/transcom/mymove/pkg/gen/primemessages"
)

// GetMoveTaskOrderCustomerOKCode is the HTTP code returned for type GetMoveTaskOrderCustomerOK
const GetMoveTaskOrderCustomerOKCode int = 200

/*GetMoveTaskOrderCustomerOK Successfully retrieved customer associated with move task order

swagger:response getMoveTaskOrderCustomerOK
*/
type GetMoveTaskOrderCustomerOK struct {

	/*
	  In: Body
	*/
	Payload *primemessages.Customer `json:"body,omitempty"`
}

// NewGetMoveTaskOrderCustomerOK creates GetMoveTaskOrderCustomerOK with default headers values
func NewGetMoveTaskOrderCustomerOK() *GetMoveTaskOrderCustomerOK {

	return &GetMoveTaskOrderCustomerOK{}
}

// WithPayload adds the payload to the get move task order customer o k response
func (o *GetMoveTaskOrderCustomerOK) WithPayload(payload *primemessages.Customer) *GetMoveTaskOrderCustomerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order customer o k response
func (o *GetMoveTaskOrderCustomerOK) SetPayload(payload *primemessages.Customer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderCustomerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveTaskOrderCustomerUnauthorizedCode is the HTTP code returned for type GetMoveTaskOrderCustomerUnauthorized
const GetMoveTaskOrderCustomerUnauthorizedCode int = 401

/*GetMoveTaskOrderCustomerUnauthorized The request was denied

swagger:response getMoveTaskOrderCustomerUnauthorized
*/
type GetMoveTaskOrderCustomerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveTaskOrderCustomerUnauthorized creates GetMoveTaskOrderCustomerUnauthorized with default headers values
func NewGetMoveTaskOrderCustomerUnauthorized() *GetMoveTaskOrderCustomerUnauthorized {

	return &GetMoveTaskOrderCustomerUnauthorized{}
}

// WithPayload adds the payload to the get move task order customer unauthorized response
func (o *GetMoveTaskOrderCustomerUnauthorized) WithPayload(payload interface{}) *GetMoveTaskOrderCustomerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order customer unauthorized response
func (o *GetMoveTaskOrderCustomerUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderCustomerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveTaskOrderCustomerForbiddenCode is the HTTP code returned for type GetMoveTaskOrderCustomerForbidden
const GetMoveTaskOrderCustomerForbiddenCode int = 403

/*GetMoveTaskOrderCustomerForbidden The request was denied

swagger:response getMoveTaskOrderCustomerForbidden
*/
type GetMoveTaskOrderCustomerForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveTaskOrderCustomerForbidden creates GetMoveTaskOrderCustomerForbidden with default headers values
func NewGetMoveTaskOrderCustomerForbidden() *GetMoveTaskOrderCustomerForbidden {

	return &GetMoveTaskOrderCustomerForbidden{}
}

// WithPayload adds the payload to the get move task order customer forbidden response
func (o *GetMoveTaskOrderCustomerForbidden) WithPayload(payload interface{}) *GetMoveTaskOrderCustomerForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order customer forbidden response
func (o *GetMoveTaskOrderCustomerForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderCustomerForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveTaskOrderCustomerNotFoundCode is the HTTP code returned for type GetMoveTaskOrderCustomerNotFound
const GetMoveTaskOrderCustomerNotFoundCode int = 404

/*GetMoveTaskOrderCustomerNotFound The requested resource wasn't found

swagger:response getMoveTaskOrderCustomerNotFound
*/
type GetMoveTaskOrderCustomerNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveTaskOrderCustomerNotFound creates GetMoveTaskOrderCustomerNotFound with default headers values
func NewGetMoveTaskOrderCustomerNotFound() *GetMoveTaskOrderCustomerNotFound {

	return &GetMoveTaskOrderCustomerNotFound{}
}

// WithPayload adds the payload to the get move task order customer not found response
func (o *GetMoveTaskOrderCustomerNotFound) WithPayload(payload interface{}) *GetMoveTaskOrderCustomerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order customer not found response
func (o *GetMoveTaskOrderCustomerNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderCustomerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMoveTaskOrderCustomerUnprocessableEntityCode is the HTTP code returned for type GetMoveTaskOrderCustomerUnprocessableEntity
const GetMoveTaskOrderCustomerUnprocessableEntityCode int = 422

/*GetMoveTaskOrderCustomerUnprocessableEntity The request payload is invalid

swagger:response getMoveTaskOrderCustomerUnprocessableEntity
*/
type GetMoveTaskOrderCustomerUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ValidationError `json:"body,omitempty"`
}

// NewGetMoveTaskOrderCustomerUnprocessableEntity creates GetMoveTaskOrderCustomerUnprocessableEntity with default headers values
func NewGetMoveTaskOrderCustomerUnprocessableEntity() *GetMoveTaskOrderCustomerUnprocessableEntity {

	return &GetMoveTaskOrderCustomerUnprocessableEntity{}
}

// WithPayload adds the payload to the get move task order customer unprocessable entity response
func (o *GetMoveTaskOrderCustomerUnprocessableEntity) WithPayload(payload *primemessages.ValidationError) *GetMoveTaskOrderCustomerUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order customer unprocessable entity response
func (o *GetMoveTaskOrderCustomerUnprocessableEntity) SetPayload(payload *primemessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderCustomerUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMoveTaskOrderCustomerInternalServerErrorCode is the HTTP code returned for type GetMoveTaskOrderCustomerInternalServerError
const GetMoveTaskOrderCustomerInternalServerErrorCode int = 500

/*GetMoveTaskOrderCustomerInternalServerError A server error occurred

swagger:response getMoveTaskOrderCustomerInternalServerError
*/
type GetMoveTaskOrderCustomerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMoveTaskOrderCustomerInternalServerError creates GetMoveTaskOrderCustomerInternalServerError with default headers values
func NewGetMoveTaskOrderCustomerInternalServerError() *GetMoveTaskOrderCustomerInternalServerError {

	return &GetMoveTaskOrderCustomerInternalServerError{}
}

// WithPayload adds the payload to the get move task order customer internal server error response
func (o *GetMoveTaskOrderCustomerInternalServerError) WithPayload(payload interface{}) *GetMoveTaskOrderCustomerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move task order customer internal server error response
func (o *GetMoveTaskOrderCustomerInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMoveTaskOrderCustomerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
