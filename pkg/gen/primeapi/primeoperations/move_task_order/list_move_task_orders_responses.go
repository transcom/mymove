// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	primemessages "github.com/transcom/mymove/pkg/gen/primemessages"
)

// ListMoveTaskOrdersOKCode is the HTTP code returned for type ListMoveTaskOrdersOK
const ListMoveTaskOrdersOKCode int = 200

/*ListMoveTaskOrdersOK Successfully retrieved all move task orders

swagger:response listMoveTaskOrdersOK
*/
type ListMoveTaskOrdersOK struct {

	/*
	  In: Body
	*/
	Payload primemessages.MoveTaskOrders `json:"body,omitempty"`
}

// NewListMoveTaskOrdersOK creates ListMoveTaskOrdersOK with default headers values
func NewListMoveTaskOrdersOK() *ListMoveTaskOrdersOK {

	return &ListMoveTaskOrdersOK{}
}

// WithPayload adds the payload to the list move task orders o k response
func (o *ListMoveTaskOrdersOK) WithPayload(payload primemessages.MoveTaskOrders) *ListMoveTaskOrdersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders o k response
func (o *ListMoveTaskOrdersOK) SetPayload(payload primemessages.MoveTaskOrders) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = primemessages.MoveTaskOrders{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersBadRequestCode is the HTTP code returned for type ListMoveTaskOrdersBadRequest
const ListMoveTaskOrdersBadRequestCode int = 400

/*ListMoveTaskOrdersBadRequest The request payload is invalid

swagger:response listMoveTaskOrdersBadRequest
*/
type ListMoveTaskOrdersBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersBadRequest creates ListMoveTaskOrdersBadRequest with default headers values
func NewListMoveTaskOrdersBadRequest() *ListMoveTaskOrdersBadRequest {

	return &ListMoveTaskOrdersBadRequest{}
}

// WithPayload adds the payload to the list move task orders bad request response
func (o *ListMoveTaskOrdersBadRequest) WithPayload(payload interface{}) *ListMoveTaskOrdersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders bad request response
func (o *ListMoveTaskOrdersBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersUnauthorizedCode is the HTTP code returned for type ListMoveTaskOrdersUnauthorized
const ListMoveTaskOrdersUnauthorizedCode int = 401

/*ListMoveTaskOrdersUnauthorized The request was denied

swagger:response listMoveTaskOrdersUnauthorized
*/
type ListMoveTaskOrdersUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersUnauthorized creates ListMoveTaskOrdersUnauthorized with default headers values
func NewListMoveTaskOrdersUnauthorized() *ListMoveTaskOrdersUnauthorized {

	return &ListMoveTaskOrdersUnauthorized{}
}

// WithPayload adds the payload to the list move task orders unauthorized response
func (o *ListMoveTaskOrdersUnauthorized) WithPayload(payload interface{}) *ListMoveTaskOrdersUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders unauthorized response
func (o *ListMoveTaskOrdersUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersForbiddenCode is the HTTP code returned for type ListMoveTaskOrdersForbidden
const ListMoveTaskOrdersForbiddenCode int = 403

/*ListMoveTaskOrdersForbidden The request was denied

swagger:response listMoveTaskOrdersForbidden
*/
type ListMoveTaskOrdersForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersForbidden creates ListMoveTaskOrdersForbidden with default headers values
func NewListMoveTaskOrdersForbidden() *ListMoveTaskOrdersForbidden {

	return &ListMoveTaskOrdersForbidden{}
}

// WithPayload adds the payload to the list move task orders forbidden response
func (o *ListMoveTaskOrdersForbidden) WithPayload(payload interface{}) *ListMoveTaskOrdersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders forbidden response
func (o *ListMoveTaskOrdersForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersNotFoundCode is the HTTP code returned for type ListMoveTaskOrdersNotFound
const ListMoveTaskOrdersNotFoundCode int = 404

/*ListMoveTaskOrdersNotFound The requested resource wasn't found

swagger:response listMoveTaskOrdersNotFound
*/
type ListMoveTaskOrdersNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersNotFound creates ListMoveTaskOrdersNotFound with default headers values
func NewListMoveTaskOrdersNotFound() *ListMoveTaskOrdersNotFound {

	return &ListMoveTaskOrdersNotFound{}
}

// WithPayload adds the payload to the list move task orders not found response
func (o *ListMoveTaskOrdersNotFound) WithPayload(payload interface{}) *ListMoveTaskOrdersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders not found response
func (o *ListMoveTaskOrdersNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersInternalServerErrorCode is the HTTP code returned for type ListMoveTaskOrdersInternalServerError
const ListMoveTaskOrdersInternalServerErrorCode int = 500

/*ListMoveTaskOrdersInternalServerError A server error occurred

swagger:response listMoveTaskOrdersInternalServerError
*/
type ListMoveTaskOrdersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersInternalServerError creates ListMoveTaskOrdersInternalServerError with default headers values
func NewListMoveTaskOrdersInternalServerError() *ListMoveTaskOrdersInternalServerError {

	return &ListMoveTaskOrdersInternalServerError{}
}

// WithPayload adds the payload to the list move task orders internal server error response
func (o *ListMoveTaskOrdersInternalServerError) WithPayload(payload interface{}) *ListMoveTaskOrdersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders internal server error response
func (o *ListMoveTaskOrdersInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
