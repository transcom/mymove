// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// UpdateMoveTaskOrderActualWeightHandlerFunc turns a function with the right signature into a update move task order actual weight handler
type UpdateMoveTaskOrderActualWeightHandlerFunc func(UpdateMoveTaskOrderActualWeightParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMoveTaskOrderActualWeightHandlerFunc) Handle(params UpdateMoveTaskOrderActualWeightParams) middleware.Responder {
	return fn(params)
}

// UpdateMoveTaskOrderActualWeightHandler interface for that can handle valid update move task order actual weight params
type UpdateMoveTaskOrderActualWeightHandler interface {
	Handle(UpdateMoveTaskOrderActualWeightParams) middleware.Responder
}

// NewUpdateMoveTaskOrderActualWeight creates a new http.Handler for the update move task order actual weight operation
func NewUpdateMoveTaskOrderActualWeight(ctx *middleware.Context, handler UpdateMoveTaskOrderActualWeightHandler) *UpdateMoveTaskOrderActualWeight {
	return &UpdateMoveTaskOrderActualWeight{Context: ctx, Handler: handler}
}

/*UpdateMoveTaskOrderActualWeight swagger:route PATCH /move-task-orders/{moveTaskOrderID}/prime-actual-weight moveTaskOrder prime updateMoveTaskOrderActualWeight

Updates a move order's actual weight by ID

Updates a move order's actual weight by ID

*/
type UpdateMoveTaskOrderActualWeight struct {
	Context *middleware.Context
	Handler UpdateMoveTaskOrderActualWeightHandler
}

func (o *UpdateMoveTaskOrderActualWeight) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateMoveTaskOrderActualWeightParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UpdateMoveTaskOrderActualWeightBody update move task order actual weight body
// swagger:model UpdateMoveTaskOrderActualWeightBody
type UpdateMoveTaskOrderActualWeightBody struct {

	// actual weight
	ActualWeight int64 `json:"actualWeight,omitempty"`
}

// Validate validates this update move task order actual weight body
func (o *UpdateMoveTaskOrderActualWeightBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateMoveTaskOrderActualWeightBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateMoveTaskOrderActualWeightBody) UnmarshalBinary(b []byte) error {
	var res UpdateMoveTaskOrderActualWeightBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
