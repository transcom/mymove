// Code generated by go-swagger; DO NOT EDIT.

package mto_service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateMTOServiceItemHandlerFunc turns a function with the right signature into a create m t o service item handler
type CreateMTOServiceItemHandlerFunc func(CreateMTOServiceItemParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateMTOServiceItemHandlerFunc) Handle(params CreateMTOServiceItemParams) middleware.Responder {
	return fn(params)
}

// CreateMTOServiceItemHandler interface for that can handle valid create m t o service item params
type CreateMTOServiceItemHandler interface {
	Handle(CreateMTOServiceItemParams) middleware.Responder
}

// NewCreateMTOServiceItem creates a new http.Handler for the create m t o service item operation
func NewCreateMTOServiceItem(ctx *middleware.Context, handler CreateMTOServiceItemHandler) *CreateMTOServiceItem {
	return &CreateMTOServiceItem{Context: ctx, Handler: handler}
}

/*
	CreateMTOServiceItem swagger:route POST /mto-service-items mtoServiceItem createMTOServiceItem

createMTOServiceItem

Creates one or more MTOServiceItems. Not all service items may be created, please see details below.

This endpoint supports different body definitions. In the modelType field below, select the modelType corresponding

	to the service item you wish to create and the documentation will update with the new definition.

Upon creation these items are associated with a Move Task Order and an MTO Shipment.
The request must include UUIDs for the MTO and MTO Shipment connected to this service item. Some service item types require
additional service items to be autogenerated when added - all created service items, autogenerated included,
will be returned in the response.

To update a service item, please use [updateMTOServiceItem](#operation/updateMTOServiceItem) endpoint.

---

**`MTOServiceItemOriginSIT`**

MTOServiceItemOriginSIT is a subtype of MTOServiceItem.

This model type describes a domestic origin SIT service item. Items can be created using this
model type with the following codes:

**DOFSIT**

**1st day origin SIT service item**. When a DOFSIT is requested, the API will auto-create the following group of service items:
  - DOFSIT - Domestic origin 1st day SIT
  - DOASIT - Domestic origin Additional day SIT
  - DOPSIT - Domestic origin SIT pickup
  - DOSFSC - Domestic origin SIT fuel surcharge

**DOASIT**

**Addt'l days origin SIT service item**. This represents an additional day of storage for the same item.
Additional DOASIT service items can be created and added to an existing shipment that **includes a DOFSIT service item**.

---

**`MTOServiceItemDestSIT`**

MTOServiceItemDestSIT is a subtype of MTOServiceItem.

This model type describes a domestic destination SIT service item. Items can be created using this
model type with the following codes:

**DDFSIT**

**1st day destination SIT service item**.

These additional fields are optional for creating a DDFSIT:
  - `firstAvailableDeliveryDate1`
  - string <date>
  - First available date that Prime can deliver SIT service item.
  - firstAvailableDeliveryDate1, dateOfContact1, and timeMilitary1 are required together
  - `dateOfContact1`
  - string <date>
  - Date of attempted contact by the prime corresponding to `timeMilitary1`
  - dateOfContact1, timeMilitary1, and firstAvailableDeliveryDate1 are required together
  - `timeMilitary1`
  - string\d{4}Z
  - Time of attempted contact corresponding to `dateOfContact1`, in military format.
  - timeMilitary1, dateOfContact1, and firstAvailableDeliveryDate1 are required together
  - `firstAvailableDeliveryDate2`
  - string <date>
  - Second available date that Prime can deliver SIT service item.
  - firstAvailableDeliveryDate2, dateOfContact2, and timeMilitary2 are required together
  - `dateOfContact2`
  - string <date>
  - Date of attempted contact delivery by the prime corresponding to `timeMilitary2`
  - dateOfContact2, timeMilitary2, and firstAvailableDeliveryDate2 are required together
  - `timeMilitary2`
  - string\d{4}Z
  - Time of attempted contact corresponding to `dateOfContact2`, in military format.
  - timeMilitary2, dateOfContact2, and firstAvailableDeliveryDate2 are required together

When a DDFSIT is requested, the API will auto-create the following group of service items:
  - DDFSIT - Domestic destination 1st day SIT
  - DDASIT - Domestic destination Additional day SIT
  - DDDSIT - Domestic destination SIT delivery
  - DDSFSC - Domestic destination SIT fuel surcharge

**NOTE** When providing the `sitEntryDate` value in the payload, please ensure that the date is not BEFORE
`firstAvailableDeliveryDate1` or `firstAvailableDeliveryDate2`. If it is, you will receive an error response.

**DDASIT**

**Addt'l days destination SIT service item**. This represents an additional day of storage for the same item.
Additional DDASIT service items can be created and added to an existing shipment that **includes a DDFSIT service item**.
*/
type CreateMTOServiceItem struct {
	Context *middleware.Context
	Handler CreateMTOServiceItemHandler
}

func (o *CreateMTOServiceItem) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateMTOServiceItemParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
