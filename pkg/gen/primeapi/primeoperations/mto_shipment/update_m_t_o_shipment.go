// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateMTOShipmentHandlerFunc turns a function with the right signature into a update m t o shipment handler
type UpdateMTOShipmentHandlerFunc func(UpdateMTOShipmentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMTOShipmentHandlerFunc) Handle(params UpdateMTOShipmentParams) middleware.Responder {
	return fn(params)
}

// UpdateMTOShipmentHandler interface for that can handle valid update m t o shipment params
type UpdateMTOShipmentHandler interface {
	Handle(UpdateMTOShipmentParams) middleware.Responder
}

// NewUpdateMTOShipment creates a new http.Handler for the update m t o shipment operation
func NewUpdateMTOShipment(ctx *middleware.Context, handler UpdateMTOShipmentHandler) *UpdateMTOShipment {
	return &UpdateMTOShipment{Context: ctx, Handler: handler}
}

/*
	UpdateMTOShipment swagger:route PATCH /mto-shipments/{mtoShipmentID} mtoShipment updateMTOShipment

updateMTOShipment

_[Deprecated: sunset on August 5th, 2024]_ This endpoint is deprecated and will be removed in a future version.
Please use the new endpoint at `/prime/v2/updateMTOShipment` instead.

**DEPRECATION ON AUGUST 5TH, 2024**
Following deprecation, there is an edge case scenario where a PPM shipment with no addresses could be updated and it would also update the final destination SIT address
for SIT service items. This edge case has been removed as you should not be able to update items using this endpoint. Third-party APIs have confirmed they will require
deprecation for this change.

Updates an existing shipment for a move.

Note that there are some restrictions on nested objects:

* Service items: You cannot add or update service items using this endpoint. Please use [createMTOServiceItem](#operation/createMTOServiceItem) and [updateMTOServiceItem](#operation/updateMTOServiceItem) instead.
* Agents: You cannot add or update agents using this endpoint. Please use [createMTOAgent](#operation/createMTOAgent) and [updateMTOAgent](#operation/updateMTOAgent) instead.
* Addresses: You can add new addresses using this endpoint (and must use this endpoint to do so), but you cannot update existing ones. Please use [updateMTOShipmentAddress](#operation/updateMTOShipmentAddress) instead.

These restrictions are due to our [optimistic locking/concurrency control](https://transcom.github.io/mymove-docs/docs/dev/contributing/backend/use-optimistic-locking) mechanism.

Note that some fields cannot be manually changed but will still be updated automatically, such as `primeEstimatedWeightRecordedDate` and `requiredDeliveryDate`.
*/
type UpdateMTOShipment struct {
	Context *middleware.Context
	Handler UpdateMTOShipmentHandler
}

func (o *UpdateMTOShipment) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateMTOShipmentParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
