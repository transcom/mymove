// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// UpdateMTOAgentOKCode is the HTTP code returned for type UpdateMTOAgentOK
const UpdateMTOAgentOKCode int = 200

/*
UpdateMTOAgentOK Successfully updated the agent.

swagger:response updateMTOAgentOK
*/
type UpdateMTOAgentOK struct {

	/*
	  In: Body
	*/
	Payload *primemessages.MTOAgent `json:"body,omitempty"`
}

// NewUpdateMTOAgentOK creates UpdateMTOAgentOK with default headers values
func NewUpdateMTOAgentOK() *UpdateMTOAgentOK {

	return &UpdateMTOAgentOK{}
}

// WithPayload adds the payload to the update m t o agent o k response
func (o *UpdateMTOAgentOK) WithPayload(payload *primemessages.MTOAgent) *UpdateMTOAgentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent o k response
func (o *UpdateMTOAgentOK) SetPayload(payload *primemessages.MTOAgent) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOAgentBadRequestCode is the HTTP code returned for type UpdateMTOAgentBadRequest
const UpdateMTOAgentBadRequestCode int = 400

/*
UpdateMTOAgentBadRequest The request payload is invalid.

swagger:response updateMTOAgentBadRequest
*/
type UpdateMTOAgentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewUpdateMTOAgentBadRequest creates UpdateMTOAgentBadRequest with default headers values
func NewUpdateMTOAgentBadRequest() *UpdateMTOAgentBadRequest {

	return &UpdateMTOAgentBadRequest{}
}

// WithPayload adds the payload to the update m t o agent bad request response
func (o *UpdateMTOAgentBadRequest) WithPayload(payload *primemessages.ClientError) *UpdateMTOAgentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent bad request response
func (o *UpdateMTOAgentBadRequest) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOAgentUnauthorizedCode is the HTTP code returned for type UpdateMTOAgentUnauthorized
const UpdateMTOAgentUnauthorizedCode int = 401

/*
UpdateMTOAgentUnauthorized The request was denied.

swagger:response updateMTOAgentUnauthorized
*/
type UpdateMTOAgentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewUpdateMTOAgentUnauthorized creates UpdateMTOAgentUnauthorized with default headers values
func NewUpdateMTOAgentUnauthorized() *UpdateMTOAgentUnauthorized {

	return &UpdateMTOAgentUnauthorized{}
}

// WithPayload adds the payload to the update m t o agent unauthorized response
func (o *UpdateMTOAgentUnauthorized) WithPayload(payload *primemessages.ClientError) *UpdateMTOAgentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent unauthorized response
func (o *UpdateMTOAgentUnauthorized) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOAgentForbiddenCode is the HTTP code returned for type UpdateMTOAgentForbidden
const UpdateMTOAgentForbiddenCode int = 403

/*
UpdateMTOAgentForbidden The request was denied.

swagger:response updateMTOAgentForbidden
*/
type UpdateMTOAgentForbidden struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewUpdateMTOAgentForbidden creates UpdateMTOAgentForbidden with default headers values
func NewUpdateMTOAgentForbidden() *UpdateMTOAgentForbidden {

	return &UpdateMTOAgentForbidden{}
}

// WithPayload adds the payload to the update m t o agent forbidden response
func (o *UpdateMTOAgentForbidden) WithPayload(payload *primemessages.ClientError) *UpdateMTOAgentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent forbidden response
func (o *UpdateMTOAgentForbidden) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOAgentNotFoundCode is the HTTP code returned for type UpdateMTOAgentNotFound
const UpdateMTOAgentNotFoundCode int = 404

/*
UpdateMTOAgentNotFound The requested resource wasn't found.

swagger:response updateMTOAgentNotFound
*/
type UpdateMTOAgentNotFound struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewUpdateMTOAgentNotFound creates UpdateMTOAgentNotFound with default headers values
func NewUpdateMTOAgentNotFound() *UpdateMTOAgentNotFound {

	return &UpdateMTOAgentNotFound{}
}

// WithPayload adds the payload to the update m t o agent not found response
func (o *UpdateMTOAgentNotFound) WithPayload(payload *primemessages.ClientError) *UpdateMTOAgentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent not found response
func (o *UpdateMTOAgentNotFound) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOAgentPreconditionFailedCode is the HTTP code returned for type UpdateMTOAgentPreconditionFailed
const UpdateMTOAgentPreconditionFailedCode int = 412

/*
UpdateMTOAgentPreconditionFailed Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.

swagger:response updateMTOAgentPreconditionFailed
*/
type UpdateMTOAgentPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ClientError `json:"body,omitempty"`
}

// NewUpdateMTOAgentPreconditionFailed creates UpdateMTOAgentPreconditionFailed with default headers values
func NewUpdateMTOAgentPreconditionFailed() *UpdateMTOAgentPreconditionFailed {

	return &UpdateMTOAgentPreconditionFailed{}
}

// WithPayload adds the payload to the update m t o agent precondition failed response
func (o *UpdateMTOAgentPreconditionFailed) WithPayload(payload *primemessages.ClientError) *UpdateMTOAgentPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent precondition failed response
func (o *UpdateMTOAgentPreconditionFailed) SetPayload(payload *primemessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOAgentUnprocessableEntityCode is the HTTP code returned for type UpdateMTOAgentUnprocessableEntity
const UpdateMTOAgentUnprocessableEntityCode int = 422

/*
UpdateMTOAgentUnprocessableEntity The request was unprocessable, likely due to bad input from the requester.

swagger:response updateMTOAgentUnprocessableEntity
*/
type UpdateMTOAgentUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *primemessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateMTOAgentUnprocessableEntity creates UpdateMTOAgentUnprocessableEntity with default headers values
func NewUpdateMTOAgentUnprocessableEntity() *UpdateMTOAgentUnprocessableEntity {

	return &UpdateMTOAgentUnprocessableEntity{}
}

// WithPayload adds the payload to the update m t o agent unprocessable entity response
func (o *UpdateMTOAgentUnprocessableEntity) WithPayload(payload *primemessages.ValidationError) *UpdateMTOAgentUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent unprocessable entity response
func (o *UpdateMTOAgentUnprocessableEntity) SetPayload(payload *primemessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOAgentInternalServerErrorCode is the HTTP code returned for type UpdateMTOAgentInternalServerError
const UpdateMTOAgentInternalServerErrorCode int = 500

/*
UpdateMTOAgentInternalServerError A server error occurred.

swagger:response updateMTOAgentInternalServerError
*/
type UpdateMTOAgentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *primemessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOAgentInternalServerError creates UpdateMTOAgentInternalServerError with default headers values
func NewUpdateMTOAgentInternalServerError() *UpdateMTOAgentInternalServerError {

	return &UpdateMTOAgentInternalServerError{}
}

// WithPayload adds the payload to the update m t o agent internal server error response
func (o *UpdateMTOAgentInternalServerError) WithPayload(payload *primemessages.Error) *UpdateMTOAgentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o agent internal server error response
func (o *UpdateMTOAgentInternalServerError) SetPayload(payload *primemessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOAgentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
