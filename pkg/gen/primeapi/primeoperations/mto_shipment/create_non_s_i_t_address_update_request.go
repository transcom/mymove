// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateNonSITAddressUpdateRequestHandlerFunc turns a function with the right signature into a create non s i t address update request handler
type CreateNonSITAddressUpdateRequestHandlerFunc func(CreateNonSITAddressUpdateRequestParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateNonSITAddressUpdateRequestHandlerFunc) Handle(params CreateNonSITAddressUpdateRequestParams) middleware.Responder {
	return fn(params)
}

// CreateNonSITAddressUpdateRequestHandler interface for that can handle valid create non s i t address update request params
type CreateNonSITAddressUpdateRequestHandler interface {
	Handle(CreateNonSITAddressUpdateRequestParams) middleware.Responder
}

// NewCreateNonSITAddressUpdateRequest creates a new http.Handler for the create non s i t address update request operation
func NewCreateNonSITAddressUpdateRequest(ctx *middleware.Context, handler CreateNonSITAddressUpdateRequestHandler) *CreateNonSITAddressUpdateRequest {
	return &CreateNonSITAddressUpdateRequest{Context: ctx, Handler: handler}
}

/*
	CreateNonSITAddressUpdateRequest swagger:route POST /mto-shipments/{mtoShipmentID}/shipment-address-updates mtoShipment createNonSITAddressUpdateRequest

createNonSITAddressUpdateRequest

### Functionality
This endpoint is used so the Prime can request an **update** for the destination address on an MTO Shipment for non SIT.
Address can update automatically unless this changes:
  - the service area
  - mileage bracket for direct delivery
  - mileage bracket where there is a Zip3 resulting in Domestic Short Haul (DSH) changing from Domestic Short Haul (DSH) to Domestic Line Haul (DLH) or vice versa.

For those, changes will require TOO approval.

	**Limitations:**

The update can be requested for APPROVED non SIT items only.
Only ONE request is allowed per approved non SIT item.
*/
type CreateNonSITAddressUpdateRequest struct {
	Context *middleware.Context
	Handler CreateNonSITAddressUpdateRequestHandler
}

func (o *CreateNonSITAddressUpdateRequest) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateNonSITAddressUpdateRequestParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
