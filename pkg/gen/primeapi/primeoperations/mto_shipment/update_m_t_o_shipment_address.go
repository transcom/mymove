// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateMTOShipmentAddressHandlerFunc turns a function with the right signature into a update m t o shipment address handler
type UpdateMTOShipmentAddressHandlerFunc func(UpdateMTOShipmentAddressParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMTOShipmentAddressHandlerFunc) Handle(params UpdateMTOShipmentAddressParams) middleware.Responder {
	return fn(params)
}

// UpdateMTOShipmentAddressHandler interface for that can handle valid update m t o shipment address params
type UpdateMTOShipmentAddressHandler interface {
	Handle(UpdateMTOShipmentAddressParams) middleware.Responder
}

// NewUpdateMTOShipmentAddress creates a new http.Handler for the update m t o shipment address operation
func NewUpdateMTOShipmentAddress(ctx *middleware.Context, handler UpdateMTOShipmentAddressHandler) *UpdateMTOShipmentAddress {
	return &UpdateMTOShipmentAddress{Context: ctx, Handler: handler}
}

/*
	UpdateMTOShipmentAddress swagger:route PUT /mto-shipments/{mtoShipmentID}/addresses/{addressID} mtoShipment updateMTOShipmentAddress

updateMTOShipmentAddress

### Functionality
This endpoint is used to **update** the pickup, secondary, and destination addresses on an MTO Shipment. mto-shipments/{mtoShipmentID}/shipment-address-updates is for updating a delivery address. The address details completely replace the original, except for the UUID.
Therefore a complete address should be sent in the request.
When a destination address on a shipment is updated, the destination SIT service items address ID will also be updated so that shipment and service item final destinations match.

This endpoint **cannot create** an address.
To create an address on an MTO shipment, the caller must use [updateMTOShipment](#operation/updateMTOShipment) as the parent shipment has to be updated with the appropriate link to the address.

### Errors
The address must be associated with the mtoShipment passed in the url.
In other words, it should be listed as pickupAddress, destinationAddress, secondaryPickupAddress or secondaryDeliveryAddress on the mtoShipment provided.
If it is not, caller will receive a **Conflict** Error.

The mtoShipment should be associated with an MTO that is available to prime.
If the caller requests an update to an address, and the shipment is not on an available MTO, the caller will receive a **NotFound** Error.
*/
type UpdateMTOShipmentAddress struct {
	Context *middleware.Context
	Handler UpdateMTOShipmentAddressHandler
}

func (o *UpdateMTOShipmentAddress) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateMTOShipmentAddressParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
