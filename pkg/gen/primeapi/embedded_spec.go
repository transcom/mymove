// Code generated by go-swagger; DO NOT EDIT.

package primeapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/prime/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "Gets all move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets all move orders",
        "operationId": "listMoveTaskOrders",
        "parameters": [
          {
            "type": "integer",
            "format": "timestamp",
            "description": "Only return MTOs updated since this time",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}/prime-estimated-weight": {
      "patch": {
        "description": "Updates a move order's estimated weight by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder",
          "prime"
        ],
        "summary": "Updates a move order's estimated weight by ID",
        "operationId": "updateMoveTaskOrderEstimatedWeight",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "primeEstimatedWeight": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montm√¢rtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "agency": {
          "type": "string",
          "title": "Agency",
          "x-nullable": true,
          "example": "Some Agency"
        },
        "destinationDutyStation": {
          "type": "string",
          "title": "Destination",
          "x-nullable": true,
          "example": "Dover AFB"
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "title": "Email Address",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true,
          "example": "john_bob@example.com"
        },
        "grade": {
          "type": "string",
          "title": "Grade",
          "x-nullable": true,
          "example": "Some Grade"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "title": "Customer Name",
          "x-nullable": true,
          "example": "George Washington"
        },
        "originDutyStation": {
          "type": "string",
          "title": "Origin",
          "x-nullable": true,
          "example": "Dover AFB"
        },
        "pickup_address": {
          "$ref": "#/definitions/Address"
        },
        "telephone": {
          "type": "string",
          "format": "telephone",
          "title": "Best Contact Phone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true,
          "example": "212-555-5555"
        }
      }
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "dependentsAuthorized": {
          "type": "boolean",
          "example": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeightSelf": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 18000
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "USMC-0001"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "customerId": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "destinationAddress": {
          "$ref": "#/definitions/Address"
        },
        "destinationDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "destinationPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "entitlements": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveDate": {
          "type": "string",
          "format": "date"
        },
        "moveID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "moveTaskOrdersType": {
          "type": "string",
          "enum": [
            "NON_TEMPORARY_STORAGE",
            "PRIME"
          ]
        },
        "originDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "originPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "primeEstimatedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 1000
        },
        "primeEstimatedWeightRecordedDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "remarks": {
          "type": "string",
          "example": "Requires more gentle care"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "APPROVED",
            "REJECTED",
            "SUBMITTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/prime/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "Gets all move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets all move orders",
        "operationId": "listMoveTaskOrders",
        "parameters": [
          {
            "type": "integer",
            "format": "timestamp",
            "description": "Only return MTOs updated since this time",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}/prime-estimated-weight": {
      "patch": {
        "description": "Updates a move order's estimated weight by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder",
          "prime"
        ],
        "summary": "Updates a move order's estimated weight by ID",
        "operationId": "updateMoveTaskOrderEstimatedWeight",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "primeEstimatedWeight": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved move task order",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montm√¢rtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "agency": {
          "type": "string",
          "title": "Agency",
          "x-nullable": true,
          "example": "Some Agency"
        },
        "destinationDutyStation": {
          "type": "string",
          "title": "Destination",
          "x-nullable": true,
          "example": "Dover AFB"
        },
        "email": {
          "type": "string",
          "format": "x-email",
          "title": "Email Address",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          "x-nullable": true,
          "example": "john_bob@example.com"
        },
        "grade": {
          "type": "string",
          "title": "Grade",
          "x-nullable": true,
          "example": "Some Grade"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "title": "Customer Name",
          "x-nullable": true,
          "example": "George Washington"
        },
        "originDutyStation": {
          "type": "string",
          "title": "Origin",
          "x-nullable": true,
          "example": "Dover AFB"
        },
        "pickup_address": {
          "$ref": "#/definitions/Address"
        },
        "telephone": {
          "type": "string",
          "format": "telephone",
          "title": "Best Contact Phone",
          "pattern": "^[2-9]\\d{2}-\\d{3}-\\d{4}$",
          "x-nullable": true,
          "example": "212-555-5555"
        }
      }
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "dependentsAuthorized": {
          "type": "boolean",
          "example": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeightSelf": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 18000
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "USMC-0001"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "customerId": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "deletedAt": {
          "type": "string",
          "format": "date"
        },
        "destinationAddress": {
          "$ref": "#/definitions/Address"
        },
        "destinationDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "destinationPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "entitlements": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveDate": {
          "type": "string",
          "format": "date"
        },
        "moveID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "moveTaskOrdersType": {
          "type": "string",
          "enum": [
            "NON_TEMPORARY_STORAGE",
            "PRIME"
          ]
        },
        "originDutyStation": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "originPPSO": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "primeEstimatedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 1000
        },
        "primeEstimatedWeightRecordedDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "remarks": {
          "type": "string",
          "example": "Requires more gentle care"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "APPROVED",
            "REJECTED",
            "SUBMITTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
