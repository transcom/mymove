// Code generated by go-swagger; DO NOT EDIT.

package primeapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/prime/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "Gets all move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets all move orders",
        "operationId": "fetchMTOUpdates",
        "parameters": [
          {
            "type": "integer",
            "format": "timestamp",
            "description": "Only return MTOs updated since this time",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}/customer": {
      "get": {
        "description": "Gets a the customer associated with a move task order ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder",
          "prime"
        ],
        "summary": "Gets a the customer associated with a move task order ID",
        "operationId": "getMoveTaskOrderCustomer",
        "responses": {
          "200": {
            "description": "Successfully retrieved customer associated with move task order",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/mto-shipments/{mtoShipmentID}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment",
          "prime"
        ],
        "summary": "Updates mto shipment",
        "operationId": "updateMTOShipment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "mtoShipmentID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          {
            "type": "string",
            "format": "datetime",
            "name": "If-Unmodified-Since",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "updated instance of mto shipment",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "description": "invalid request"
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "412": {
            "description": "precondition failed",
            "schema": {
              "$ref": "#/responses/PreconditionFailed"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}/post-counseling-info": {
      "patch": {
        "description": "Updates move task order's post counseling information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder",
          "prime"
        ],
        "summary": "Updates move task order's post counseling information",
        "operationId": "updateMoveTaskOrderPostCounselingInformation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ppm-is-included": {
                  "type": "boolean"
                },
                "scheduled-move-date": {
                  "type": "string",
                  "format": "date",
                  "example": "2018-04-26"
                },
                "secondary-delivery-address": {
                  "$ref": "#/definitions/Address"
                },
                "secondary-pickup-address": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order post counseling information",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests": {
      "post": {
        "description": "Creates a payment request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests"
        ],
        "summary": "Creates a payment request",
        "operationId": "createPaymentRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequestPayload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created instance of payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    },
    "/payment-requests/{paymentRequestID}/uploads": {
      "post": {
        "description": "Uploads represent a single digital file, such as a JPEG, PNG, or PDF.",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "uploads"
        ],
        "summary": "Create a new upload for a payment request",
        "operationId": "createUpload",
        "parameters": [
          {
            "type": "string",
            "description": "ID of payment request to use",
            "name": "paymentRequestID",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created upload",
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/responses/InvalidRequest"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "$ref": "#/responses/PermissionDenied"
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "$ref": "#/responses/NotFound"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "$ref": "#/responses/ServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CreatePaymentRequestPayload": {
      "type": "object",
      "properties": {
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "serviceItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceItem"
          }
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "dodID": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "DutyStation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "address_id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MTOServiceItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceCode": {
          "type": "string"
        },
        "reServiceID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "type": "string"
        }
      }
    },
    "MTOServiceItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOServiceItem"
      }
    },
    "MTOServiceItemstatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        }
      }
    },
    "MTOShipment": {
      "required": [
        "pickupAddress",
        "destinationAddress",
        "scheduledPickupDate",
        "requestedPickupDate",
        "shipmentType"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "datetime"
        },
        "customerRemarks": {
          "type": "string",
          "example": "handle with care"
        },
        "destinationAddress": {
          "$ref": "#/definitions/Address"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "primeActualWeight": {
          "type": "integer"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "scheduledPickupDate": {
          "type": "string",
          "format": "date"
        },
        "secondaryDeliveryAddress": {
          "$ref": "#/definitions/Address"
        },
        "secondaryPickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "MTOShipmentType": {
      "type": "string",
      "title": "Shipment Type",
      "enum": [
        "HHG",
        "INTERNATIONAL_HHG",
        "INTERNATIONAL_UB"
      ],
      "x-display-value": {
        "HHG": "HHG",
        "INTERNATIONAL_HHG": "International HHG",
        "INTERNATIONAL_UB": "International UB"
      },
      "example": "HHG"
    },
    "MTOShipments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipment"
      }
    },
    "MoveOrder": {
      "type": "object",
      "properties": {
        "customerID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "destinationDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "originDutyStation": {
          "$ref": "#/definitions/DutyStation"
        }
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "isAvailableToPrime": {
          "type": "boolean",
          "x-nullable": true
        },
        "isCanceled": {
          "type": "boolean",
          "x-nullable": true
        },
        "moveOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mto_service_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mto_shipments": {
          "$ref": "#/definitions/MTOShipments"
        },
        "payment_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRequest"
          }
        },
        "referenceId": {
          "type": "string",
          "x-nullable": true,
          "example": "1001-3456"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "proofOfServiceDocs": {
          "$ref": "#/definitions/ProofOfServiceDocs"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "ProofOfServiceDocs": {
      "type": "object",
      "properties": {
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "ServiceItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "params": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "example": "Service Item Parameter Name"
              },
              "value": {
                "type": "string",
                "example": "Service Item Parameter Value"
              }
            }
          }
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "filename": {
          "type": "string",
          "example": "filename.pdf"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime API for move.mil",
    "title": "move.mil API",
    "contact": {
      "email": "dp3@truss.works"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "basePath": "/prime/v1",
  "paths": {
    "/move-task-orders": {
      "get": {
        "description": "Gets all move orders",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder"
        ],
        "summary": "Gets all move orders",
        "operationId": "fetchMTOUpdates",
        "parameters": [
          {
            "type": "integer",
            "format": "timestamp",
            "description": "Only return MTOs updated since this time",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all move task orders",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrders"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}/customer": {
      "get": {
        "description": "Gets a the customer associated with a move task order ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder",
          "prime"
        ],
        "summary": "Gets a the customer associated with a move task order ID",
        "operationId": "getMoveTaskOrderCustomer",
        "responses": {
          "200": {
            "description": "Successfully retrieved customer associated with move task order",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/move-task-orders/{moveTaskOrderID}/mto-shipments/{mtoShipmentID}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mtoShipment",
          "prime"
        ],
        "summary": "Updates mto shipment",
        "operationId": "updateMTOShipment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "moveTaskOrderID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "mtoShipmentID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          {
            "type": "string",
            "format": "datetime",
            "name": "If-Unmodified-Since",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "updated instance of mto shipment",
            "schema": {
              "$ref": "#/definitions/MTOShipment"
            }
          },
          "400": {
            "description": "invalid request"
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "412": {
            "description": "precondition failed",
            "schema": {
              "description": "Precondition failed",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/move-task-orders/{moveTaskOrderID}/post-counseling-info": {
      "patch": {
        "description": "Updates move task order's post counseling information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moveTaskOrder",
          "prime"
        ],
        "summary": "Updates move task order's post counseling information",
        "operationId": "updateMoveTaskOrderPostCounselingInformation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ppm-is-included": {
                  "type": "boolean"
                },
                "scheduled-move-date": {
                  "type": "string",
                  "format": "date",
                  "example": "2018-04-26"
                },
                "secondary-delivery-address": {
                  "$ref": "#/definitions/Address"
                },
                "secondary-pickup-address": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated move task order post counseling information",
            "schema": {
              "$ref": "#/definitions/MoveTaskOrder"
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "422": {
            "description": "The request payload is invalid",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of move order to use",
          "name": "moveTaskOrderID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/payment-requests": {
      "post": {
        "description": "Creates a payment request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "paymentRequests"
        ],
        "summary": "Creates a payment request",
        "operationId": "createPaymentRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequestPayload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created instance of payment request",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          },
          "400": {
            "description": "The request payload is invalid",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/payment-requests/{paymentRequestID}/uploads": {
      "post": {
        "description": "Uploads represent a single digital file, such as a JPEG, PNG, or PDF.",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "uploads"
        ],
        "summary": "Create a new upload for a payment request",
        "operationId": "createUpload",
        "parameters": [
          {
            "type": "string",
            "description": "ID of payment request to use",
            "name": "paymentRequestID",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created upload",
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "description": "The request payload is invalid",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "401": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "403": {
            "description": "The request was denied",
            "schema": {
              "description": "The request was denied",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "description": "The requested resource wasn't found",
            "schema": {
              "description": "The requested resource wasn't found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "500": {
            "description": "A server error occurred",
            "schema": {
              "description": "A server error occurred",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "streetAddress1",
        "city",
        "state",
        "postalCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "example": "Anytown"
        },
        "country": {
          "type": "string",
          "title": "Country",
          "default": "USA",
          "x-nullable": true,
          "example": "USA"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "postalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5}([\\-]\\d{4})?)$",
          "example": "90210"
        },
        "state": {
          "type": "string",
          "title": "State",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "x-display-value": {
            "AK": "AK",
            "AL": "AL",
            "AR": "AR",
            "AZ": "AZ",
            "CA": "CA",
            "CO": "CO",
            "CT": "CT",
            "DC": "DC",
            "DE": "DE",
            "FL": "FL",
            "GA": "GA",
            "HI": "HI",
            "IA": "IA",
            "ID": "ID",
            "IL": "IL",
            "IN": "IN",
            "KS": "KS",
            "KY": "KY",
            "LA": "LA",
            "MA": "MA",
            "MD": "MD",
            "ME": "ME",
            "MI": "MI",
            "MN": "MN",
            "MO": "MO",
            "MS": "MS",
            "MT": "MT",
            "NC": "NC",
            "ND": "ND",
            "NE": "NE",
            "NH": "NH",
            "NJ": "NJ",
            "NM": "NM",
            "NV": "NV",
            "NY": "NY",
            "OH": "OH",
            "OK": "OK",
            "OR": "OR",
            "PA": "PA",
            "RI": "RI",
            "SC": "SC",
            "SD": "SD",
            "TN": "TN",
            "TX": "TX",
            "UT": "UT",
            "VA": "VA",
            "VT": "VT",
            "WA": "WA",
            "WI": "WI",
            "WV": "WV",
            "WY": "WY"
          }
        },
        "streetAddress1": {
          "type": "string",
          "title": "Street address 1",
          "example": "123 Main Ave"
        },
        "streetAddress2": {
          "type": "string",
          "title": "Street address 2",
          "x-nullable": true,
          "example": "Apartment 9000"
        },
        "streetAddress3": {
          "type": "string",
          "title": "Address Line 3",
          "x-nullable": true,
          "example": "Montmârtre"
        }
      }
    },
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CreatePaymentRequestPayload": {
      "type": "object",
      "properties": {
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "serviceItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceItem"
          }
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "dodID": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "userID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        }
      }
    },
    "DutyStation": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "address_id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "name": {
          "type": "string",
          "example": "Fort Bragg North Station"
        }
      }
    },
    "Entitlements": {
      "type": "object",
      "properties": {
        "authorizedWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "x-nullable": true,
          "example": 2000
        },
        "dependentsAuthorized": {
          "type": "boolean",
          "x-nullable": true,
          "example": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "571008b1-b0de-454d-b843-d71be9f02c04"
        },
        "nonTemporaryStorage": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "privatelyOwnedVehicle": {
          "type": "boolean",
          "x-nullable": true,
          "example": false
        },
        "proGearWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 2000
        },
        "proGearWeightSpouse": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        },
        "storageInTransit": {
          "type": "integer",
          "example": 90
        },
        "totalDependents": {
          "type": "integer",
          "example": 2
        },
        "totalWeight": {
          "type": "integer",
          "x-formatting": "weight",
          "example": 500
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "MTOServiceItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceCode": {
          "type": "string"
        },
        "reServiceID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "reServiceName": {
          "type": "string"
        }
      }
    },
    "MTOServiceItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOServiceItem"
      }
    },
    "MTOServiceItemstatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        }
      }
    },
    "MTOShipment": {
      "required": [
        "pickupAddress",
        "destinationAddress",
        "scheduledPickupDate",
        "requestedPickupDate",
        "shipmentType"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "datetime"
        },
        "customerRemarks": {
          "type": "string",
          "example": "handle with care"
        },
        "destinationAddress": {
          "$ref": "#/definitions/Address"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "pickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "primeActualWeight": {
          "type": "integer"
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date"
        },
        "scheduledPickupDate": {
          "type": "string",
          "format": "date"
        },
        "secondaryDeliveryAddress": {
          "$ref": "#/definitions/Address"
        },
        "secondaryPickupAddress": {
          "$ref": "#/definitions/Address"
        },
        "shipmentType": {
          "$ref": "#/definitions/MTOShipmentType"
        },
        "status": {
          "type": "string",
          "enum": [
            "APPROVED",
            "SUBMITTED",
            "REJECTED"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime"
        }
      }
    },
    "MTOShipmentType": {
      "type": "string",
      "title": "Shipment Type",
      "enum": [
        "HHG",
        "INTERNATIONAL_HHG",
        "INTERNATIONAL_UB"
      ],
      "x-display-value": {
        "HHG": "HHG",
        "INTERNATIONAL_HHG": "International HHG",
        "INTERNATIONAL_UB": "International UB"
      },
      "example": "HHG"
    },
    "MTOShipments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MTOShipment"
      }
    },
    "MoveOrder": {
      "type": "object",
      "properties": {
        "customerID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "destinationDutyStation": {
          "$ref": "#/definitions/DutyStation"
        },
        "entitlement": {
          "$ref": "#/definitions/Entitlements"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "originDutyStation": {
          "$ref": "#/definitions/DutyStation"
        }
      }
    },
    "MoveTaskOrder": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "isAvailableToPrime": {
          "type": "boolean",
          "x-nullable": true
        },
        "isCanceled": {
          "type": "boolean",
          "x-nullable": true
        },
        "moveOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "mto_service_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MTOServiceItem"
          }
        },
        "mto_shipments": {
          "$ref": "#/definitions/MTOShipments"
        },
        "payment_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRequest"
          }
        },
        "referenceId": {
          "type": "string",
          "x-nullable": true,
          "example": "1001-3456"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "MoveTaskOrders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MoveTaskOrder"
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "isFinal": {
          "type": "boolean",
          "default": false
        },
        "moveTaskOrderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "proofOfServiceDocs": {
          "$ref": "#/definitions/ProofOfServiceDocs"
        },
        "rejectionReason": {
          "type": "string",
          "x-nullable": true,
          "example": "documentation was incomplete"
        },
        "status": {
          "$ref": "#/definitions/PaymentRequestStatus"
        }
      }
    },
    "PaymentRequestStatus": {
      "type": "string",
      "title": "Payment Request Status",
      "enum": [
        "PENDING",
        "REVIEWED",
        "SENT_TO_GEX",
        "RECEIVED_BY_GEX",
        "PAID"
      ]
    },
    "PaymentRequests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PaymentRequest"
      }
    },
    "ProofOfServiceDocs": {
      "type": "object",
      "properties": {
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Upload"
          }
        }
      }
    },
    "ServiceItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "params": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "example": "Service Item Parameter Name"
              },
              "value": {
                "type": "string",
                "example": "Service Item Parameter Value"
              }
            }
          }
        }
      }
    },
    "Upload": {
      "type": "object",
      "required": [
        "filename",
        "contentType",
        "bytes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "bytes": {
          "type": "integer"
        },
        "contentType": {
          "type": "string",
          "format": "mime-type",
          "example": "application/pdf"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "filename": {
          "type": "string",
          "example": "filename.pdf"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ValidationError": {
      "required": [
        "invalid_fields"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "invalid_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request payload is invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The requested resource wasn't found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PermissionDenied": {
      "description": "The request was denied",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "PreconditionFailed": {
      "description": "Precondition failed",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ServerError": {
      "description": "A server error occurred",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
