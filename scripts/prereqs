#! /usr/bin/env bash

set -eu -o pipefail

RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

prereqs_found=true

cask_is_installed() {
  brew list -1 --cask | grep -Fqx "$1"
}

app_is_in_applications_folder() {
  find "/Applications" -maxdepth 1 -name "$1"
}

docker_installed_outside_of_brew() {
  ! cask_is_installed "docker" && app_is_in_applications_folder "Docker"
}

# if nix is in use
if [ ! -r .nix-disable ] && [ -x "$(command -v nix-env)" ]; then
  nix_dir="nix"
  # add the nix files so that if they change, direnv needs to be reloaded
  config_hash=$(nix-hash "${nix_dir}")
  store_hash=$(nix-store -q --hash "${NIX_PROFILE}")

  if ! docker_installed_outside_of_brew; then
  brew bundle --file=- <<EOF
    cask 'docker'
EOF
  fi

  # The .nix-hash file is created by nix/update.sh
  if [ ! -r .nix-hash ] || ! grep -q "${config_hash}-${store_hash}" .nix-hash; then
    echo -e "${YELLOW}WARNING: nix packages out of date Run ${nix_dir}/update.sh${NC}"
    prereqs_found=false
  else
    echo "nix dependencies installed"
  fi
else # things only required without nix
  make setup
fi

if [[ $prereqs_found == "true" ]]; then
    echo "OK: all prereqs found"
else
    echo -e "${RED}ERROR: some prereqs missing, please install them.${NC}"
    exit 1
fi

if [ -z "${SKIP_CHECKS:-}" ]; then
  # Now check versions are correct for prereqs
  echo
  check-gopath
  check-go-version
  check-hosts-file
  check-node-version
fi
