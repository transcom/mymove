#! /usr/bin/env bash

set -eu -o pipefail

#
# Scan alb logs for specific http codes.
#
# Requires a environment and http code but can also include a date.
# When a date is not given the current UTC date is used.
#
# Example with no date (uses current UTC date):
#	../scripts/scan-alb-logs prod 403
#
# Example for single code 504:
#	../scripts/scan-alb-logs prod 504 2019/02/14,2019/02/16
#
# Example with Pattern matching all 5XX codes:
#	 ../scripts/scan-alb-logs prod "5" 2019/02/22
#
# Note: Must run from transcom-ppp/ directory
#

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly DIR

if [[  $# -lt 2 ]]  || [[ $# -gt 4 ]]; then
    echo "Usage: scan-alb-logs <environment:prd|stg|exp|demo> <http-code> [<day:YYYY/mm/dd>[,<day:YYYY/mm/dd>]] [domainName]"
    exit 1
fi

if [[ $1 = "demo" ]]
then
  export AWS_PROFILE=transcom-gov-milmove-demo
elif [[ $1 = "exp" ]]
then
  export AWS_PROFILE=transcom-gov-milmove-exp
elif [[ $1 = "stg" ]]
then
  export AWS_PROFILE=transcom-gov-milmove-stg
elif [[ $1 = "prd" ]]
then
  export AWS_PROFILE=transcom-gov-milmove-prd
else
  echo "I need, 'demo', 'exp', 'stg' or 'prd'."
  exit 1
fi

readonly environment=${1:-}
readonly http_code=${2:-}
day=${3:-$(date -u "+%Y/%m/%d")}
domainName=${4:-}

if ! command -v big-cat > /dev/null; then
  echo "big-cat tool is required."
  echo "Build with make bin/big-cat"
  exit 1
fi

if ! command -v read-alb-logs > /dev/null; then
  echo "read-alb-logs tool is required."
  echo "Build with make bin/read-alb-logs"
  exit 1
fi

rm -rf tmp
"${DIR}/download-alb-logs" tmp "${environment}" "${day}"
if [[ -n "${domainName}" ]]; then
  big-cat "./tmp/*.app-${environment}.*.log.gz" | gunzip | read-alb-logs | jq -c ". | select( .elbStatusCode | startswith(\"${http_code}\")) | select(.domainName | startswith(\"${domainName}\")) | {requestType, timestamp, clientPort, elbStatusCode, targetStatusCode, domainName, request, actionsExecuted}"
else
  big-cat "./tmp/*.app-${environment}.*.log.gz" | gunzip | read-alb-logs | jq -c ". | select( .elbStatusCode | startswith(\"${http_code}\")) | {requestType, timestamp, clientPort, elbStatusCode, targetStatusCode, domainName, request, actionsExecuted}"
fi
