#! /usr/bin/env bash
#
# A script to upload secure migrations to all environments
# https://github.com/transcom/mymove#secure-migrations
#

set -eu -o pipefail

readonly aws_command="aws"
# Environments to upload production migrations to
# shellcheck disable=SC2206
readonly environments=(${ENVIRONMENTS:-experimental staging prod})
readonly aws_bucket_prefix="transcom-ppp-app-"
readonly aws_bucket_suffix="-us-west-2"
readonly aws_path_prefix="secure-migrations"

readonly usage="usage: $0 <production_migration_file>"

function proceed() {
  proceed_message=${1:-"proceed"}
  echo -en "\e[31m${proceed_message} (y/N) \e[39m"
  read -r proceed
  if [[ "$proceed" =~ ^[^yY]*$ ]]; then
    echo "exiting"
    exit 0
  fi
}

function run() {
  command=( "$@" )
  echo "...executing: ${command[*]}"
  ${command[*]} &> /dev/null || (echo "Failed!!" && exit 1)
}

#
# Pre-flight checks
#

if [[ -z "${1:-}" ]]; then
  echo "$usage"
  exit 1
elif [[ ! -f "${1}" ]]; then
  echo "error: unable to find migration file: ${1}"
  exit 1
fi
readonly production_migration_file="$1"

# Migration files need to have the suffix ".up.sql"
if [[ "${production_migration_file#*.}" != "up.sql" ]]; then
  echo "error: migration filename extensions must be '.up.sql'"
  exit 1
fi

# Ensure the file is below the limit for upload of 250MB for anti-virus
# Files larger than this size will not scan and thus will not be available for streaming download
# to the migration container.
FILESIZE=$(/usr/bin/stat -f%z "${1}")
# 250MB in bytes
BYTES_IN_MB=1048576
MAX_FILESIZE=$((250 * "${BYTES_IN_MB}" ))
if [[ ${FILESIZE} -gt ${MAX_FILESIZE} ]]; then
  FILESIZE_MB=$(( "${FILESIZE}" / "${BYTES_IN_MB}" ))
  echo "error: Max file size for upload is 250 MB, this file is too large for anti-virus to work."
  echo "Your file is ${FILESIZE_MB} MB, please reduce or split before uploading."
  exit 1
fi

# Ensure our `aws` command is the one infra has wrapped with aws-vault
command -v "$aws_command" 2> /dev/null | grep "ppp-infra/scripts/aws" &> /dev/null || \
  ( echo "error: aws command not pointing to 'ppp-infra/scripts/aws"
    echo "see https://github.com/transcom/ppp-infra/blob/master/transcom-ppp/README.md#using-aws-vault"
    exit 1
  )

# Test AWS command and freshen AWS session token
${aws_command} s3 ls "${aws_bucket_prefix}${environments[0]}${aws_bucket_suffix}" > /dev/null

#
# Test local migration
#

echo "Testing migrations ... (This could be several minutes!)"

make db_deployed_migrations_reset

MIGRATION_PATH="file://local_migrations;file://migrations" \
  DB_HOST=localhost \
  DB_PORT="${DB_PORT_DEPLOYED_MIGRATIONS}" \
  DB_NAME="${DB_NAME_DEPLOYED_MIGRATIONS}" \
	DB_DEBUG=0 \
  bin/milmove migrate

echo "Testing migrations was successful!"
echo

#
# Upload secure migration
#

proceed "Are you ready to upload the migrations? This will overwrite files of the same name in S3."

for environment in "${environments[@]}"; do
  echo "Uploading to: $environment"
  sleep 1
  run aws s3 cp --sse AES256 \
    "$production_migration_file" \
    "s3://${aws_bucket_prefix}${environment}${aws_bucket_suffix}/${aws_path_prefix}/"
done

#
# Cleanup
#

echo
echo "Production migration files contain sensitive data and should be deleted after uploading!"
rm -i "$production_migration_file"
