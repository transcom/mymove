#! /usr/bin/env bash

set -eu -o pipefail

#
# Get a sha256 hash of the public certificate from CAC
#
# certificates table contains sha256 of public cert -
# middleware gets cert, terminates at tls, passes on to middleware
# in middleware we pull out key, digest it and compare fingerprint
# to what's stored in DB and then we can authorize effectively

OS_VERSION=$(/usr/bin/sw_vers -productVersion)
MAC_OS="10.15"
if [[ $OS_VERSION == *$MAC_OS* ]]; then
  MODULE=/usr/local/lib/pkcs11/opensc-pkcs11.so
elif [[ -f "${MODULE}" ]]; then
  MODULE=/usr/local/lib/pkcs11/cackey.dylib
fi
readonly MODULE
readonly PKCS11=/usr/local/bin/pkcs11-tool

# Check the CAC Pre-Requirements
cac-prereqs

# Fingerprint
"${PKCS11}" --module "${MODULE}" -r --id 01 --type cert 2>/dev/null | openssl dgst -sha256 | perl -ne 's/^\(stdin\)= //; print'
