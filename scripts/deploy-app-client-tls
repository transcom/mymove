#! /usr/bin/env bash

set -eu -o pipefail

#
# Deploy the app client-tls
#

usage() {
  echo "$0 <environment>"
  exit 1
}

readonly environment="${1:-experimental}"

[[ -z "${environment}" ]] && usage

case "${environment}" in
  experimental)
    compare_host=gex.experimental.move.mil
    health_check_hosts=gex.experimental.move.mil,dps.experimental.move.mil,orders.experimental.move.mil
    ;;
  staging)
    compare_host=gex.staging.move.mil
    health_check_hosts=gex.staging.move.mil,dps.staging.move.mil,orders.staging.move.mil
    ;;
  prod)
    compare_host=gex.move.mil
    health_check_hosts=gex.move.mil,dps.move.mil,orders.move.mil
    ;;
  *)
    echo "<environment> must be one of experimental, staging, or prod"
    exit 1
    ;;
esac

if [ -n "${AWS_ACCOUNT_ID}" ]; then
  echo "AWS_ACCOUNT_ID not found!"
  echo "Please add 'AWS_ACCOUNT_ID' to your .envrc.local"
  exit 1
fi

APP_ENVIRONMENT="${environment}"
AWS_DEFAULT_REGION=us-west-2

KEY=$(chamber read app-experimental move_mil_dod_tls_key -q | base64 -i -)
CERT=$(chamber read app-experimental move_mil_dod_tls_cert -q | base64 -i -)
CA=$(chamber read app-experimental move_mil_dod_ca_cert -q | base64 -i -)

CIRCLE_SHA1=$(curl -sk --key <(echo "${KEY}" | base64 --decode) --cert <(echo "${CERT}" | base64 --decode) --cacert <(echo "${CA}" | base64 --decode) "https://${compare_host}/health"  | jq -r .gitCommit)

scripts/compare-deployed-commit "${compare_host}" "${CIRCLE_SHA1}" "${KEY}" "${CERT}" "${CA}"

scripts/ecs-deploy-service-container app-client-tls config/app-client-tls.container-definition.json "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/app:git-${CIRCLE_SHA1}" "${APP_ENVIRONMENT}" FARGATE

# NOTE: The health checker in all environments ought to work with the values from experimental for the key, cert, and ca.
bin/health-checker --schemes https --hosts "${health_check_hosts}" --key "${KEY}" --cert "${CERT}" --ca "${CA}" --tries 10 --backoff 3 --log-level info --timeout 15m

scripts/check-deployed-commit "${health_check_hosts}" "${CIRCLE_SHA1}" "${KEY}" "${CERT}" "${CA}"
