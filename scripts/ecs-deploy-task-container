#! /usr/bin/env bash
#
#   Updates the named task with the given name, image, and environment.
#
set -eo pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly DIR

usage() {
    echo "$0 <name> <image> <environment>"
    exit 1
}
[[ -z $1 || -z $2 || -z $3 ]] && usage

# Display command being run
echo "$0 $*"

set -u

readonly name=$1
readonly image=$2
readonly environment=$3

readonly RESERVATION_CPU=256
readonly RESERVATION_MEM=512

echo "Checking for existence of variables file"

variables_file="${DIR}/../config/env/${environment}.${name}.env"
if [ ! -f "${variables_file}" ]; then
  echo "Variables file '${variables_file}' does not exist!"
  exit 1
fi

echo
echo "Preparing ECS task definition for ${name}"

"${DIR}/../bin/ecs-deploy" task-def \
  --aws-account-id "${AWS_ACCOUNT_ID}" \
  --aws-region "${AWS_DEFAULT_REGION}" \
  --service app-tasks \
  --environment "${environment}" \
  --image "${image}" \
  --cpu "${RESERVATION_CPU}" \
  --memory "${RESERVATION_MEM}" \
  --variables-file "${variables_file}" \
  --entrypoint "/bin/milmove-tasks ${name}" \
  --dry-run | jq .

echo
echo "Registering ECS task definition for ${name}"

task_def_arn=$("${DIR}/../bin/ecs-deploy" task-def \
  --aws-account-id "${AWS_ACCOUNT_ID}" \
  --aws-region "${AWS_DEFAULT_REGION}" \
  --service app-tasks \
  --environment "${environment}" \
  --image "${image}" \
  --cpu "${RESERVATION_CPU}" \
  --memory "${RESERVATION_MEM}" \
  --variables-file "${variables_file}" \
  --entrypoint "/bin/milmove-tasks ${name}" \
  --register)

readonly task_def_arn
echo
echo "Registered ECS task definition ${task_def_arn}"

echo
echo "Put new CloudWatch Event target for ${name}"

"${DIR}/../bin/ecs-deploy" put-target \
  --aws-account-id "${AWS_ACCOUNT_ID}" \
  --aws-region "${AWS_DEFAULT_REGION}" \
  --environment "${environment}" \
  --name "${name}" \
  --task-def-arn "${task_def_arn}" \
  --put-target

echo
echo "Successfully put new CloudWatch Event target for ${name} with ECS task definition ${task_def_arn}"
