#! /usr/bin/env bash
#
#   Updates the named task with the given name, image, and environment.
#
set -eo pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly DIR

usage() {
    echo "$0 <name> <image> <environment>"
    exit 1
}
[[ -z $1 || -z $2 || -z $3 ]] && usage

# Display command being run
echo "$0 $*"

set -u

readonly name=$1
readonly image=$2
readonly environment=$3
readonly ECR_DIGEST=$4
readonly repo=$5

readonly RESERVATION_CPU=256
readonly RESERVATION_MEM=512

# Compare recorded sha with the ecr digest sha
check_ecr_digest() {
  local image_name=$1
  local repoName=$2
  local ECRDIGEST=$3

 # assumes image_name like url_path:imagetag
  IFS=":"; read -ra imagetag <<< "${image_name}"; unset IFS;

  imagesha="$(aws ecr describe-images --repository-name "${repoName}" --image-ids imageTag="${imagetag[1]}" | jq ".imageDetails[0] .imageDigest" -r)"
  echo "${imagesha}"

  if [ "${ECRDIGEST}" != "${imagesha}" ]
  then
    echo "Recorded ECR digest sha did not match the tagged image sha. Expected ${ECRDIGEST} but got ${imagesha}"
    exit 1
  fi

}

echo "Checking for existence of variables file"

variables_file="${DIR}/../config/env/${environment}.${name}.env"
if [ ! -f "${variables_file}" ]; then
  echo "Variables file '${variables_file}' does not exist!"
  exit 1
fi

echo
echo "Comparing image digest with recorded image digest in a prior step"
check_ecr_digest "${image}" "${repo}" "${ECR_DIGEST}"

echo
echo "Preparing ECS task definition for ${name}"

"${DIR}/../bin/ecs-deploy" task-def \
  --aws-account-id "${AWS_ACCOUNT_ID}" \
  --aws-region "${AWS_DEFAULT_REGION}" \
  --service app-tasks \
  --environment "${environment}" \
  --image "${image}" \
  --ecr-digest "${ECR_DIGEST}" \
  --cpu "${RESERVATION_CPU}" \
  --memory "${RESERVATION_MEM}" \
  --variables-file "${variables_file}" \
  --entrypoint "/bin/milmove-tasks ${name}" \
  --dry-run | jq .

echo
echo "Registering ECS task definition for ${name}"
set +e
task_def_arn=$("${DIR}/../bin/ecs-deploy" task-def \
  --aws-account-id "${AWS_ACCOUNT_ID}" \
  --aws-region "${AWS_DEFAULT_REGION}" \
  --service app-tasks \
  --environment "${environment}" \
  --image "${image}" \
  --ecr-digest "${ECR_DIGEST}" \
  --cpu "${RESERVATION_CPU}" \
  --memory "${RESERVATION_MEM}" \
  --variables-file "${variables_file}" \
  --entrypoint "/bin/milmove-tasks ${name}" \
  --register)
# shellcheck disable=SC2181
if [ "$?" != "0" ]; then echo "$task_def_arn"; exit 1; fi
set -e

readonly task_def_arn
echo
echo "Registered ECS task definition ${task_def_arn}"

echo
echo "Put new CloudWatch Event target for ${name}"

"${DIR}/../bin/ecs-deploy" put-target \
  --aws-account-id "${AWS_ACCOUNT_ID}" \
  --aws-region "${AWS_DEFAULT_REGION}" \
  --environment "${environment}" \
  --name "${name}" \
  --task-def-arn "${task_def_arn}" \
  --put-target

echo
echo "Successfully put new CloudWatch Event target for ${name} with ECS task definition ${task_def_arn}"
