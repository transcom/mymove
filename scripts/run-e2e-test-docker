#! /usr/bin/env bash

circleci_build_image=milmove/circleci-docker:milmove-app-f678d1c6a5e2085f733f5408b7affd628f9f3576

set -eux -o pipefail

# Setting REACT_APP_NODE_ENV to development enables the "Local Sign In" button
export REACT_APP_NODE_ENV=development

# This script is no longer used in circleci because in CI we want some
# of the steps below to run in parallel and that's hard to integration
# with circleci config, so there's some duplication in .circleci/config.yml
if [ -n "${CIRCLECI+x}" ]; then
  echo "This script is only for running e2e tests locally"
  exit 1
fi

# Check that the docker process is running first
docker system info >> /dev/null

# ensure we nuke anything from a prior run
docker-compose -f docker-compose.e2e.yml down
docker rm -f cypress || true
docker network rm e2e_cypress || true

# in CI, we can copy in the artifacts built in CI, but locally we have
# to compile inside docker first
rm -rf bin pkg/assets/assets.go
mkdir bin
# set GOPATH if not already set
: "${GOPATH:=$HOME/.gopath}"
docker run \
       --rm \
       -v "${GOPATH}:${GOPATH}" \
       -v "${PWD}:${PWD}" \
       -w "${PWD}" \
       -e GOPATH \
       -e CIRCLECI=1 \
       ${circleci_build_image} \
       make pkg/assets/assets.go \
       server_build \
       bin/generate-test-data \
       bin/rds-ca-2019-root.pem \
       bin/rds-ca-us-gov-west-1-2017-root.pem \
       bin/rds-ca-rsa4096-g1.pem
docker build -t milmove_e2e:local -f Dockerfile.e2e .

# clean up the generated files that are now for linux instead of macOS
rm -rf bin

docker network create e2e_cypress
docker-compose -f docker-compose.e2e.yml up -d

docker run \
       --rm \
       --network e2e_cypress \
       ${circleci_build_image} \
       dockerize -wait http://milmovelocal:4000 -timeout 5m

docker build -t cypress:local -f cypress/Dockerfile.cypress cypress

default_specs=$(find cypress/integration -type f -name '*.js' | paste -s -d, -)
# assign SPECS if it is not set
: "${SPECS:=${default_specs}}"
docker run \
       --name cypress \
       --network e2e_cypress \
       -e CYPRESS_baseUrl="http://milmovelocal:4000" \
       cypress:local \
       run --spec "${SPECS}"

# Copy out the results, there are always xml result files so fail if we don't find them
docker cp cypress:/home/circleci/cypress/results cypress/
# Copy out screenshots, videos, and reports which may or may not be generated, hence we are hiding the errors
docker cp cypress:/home/circleci/cypress/screenshots cypress/ 2>/dev/null || echo "No cypress screenshots copied"
docker cp cypress:/home/circleci/cypress/videos cypress/ 2>/dev/null || echo "No cypress videos copied"
docker cp cypress:/home/circleci/cypress/reports cypress/ 2>/dev/null || echo "No cypress reports copied"

# Grab the exit code from the test container
EXIT_STATUS=$(docker inspect cypress --format='{{.State.ExitCode}}')

# Exit with the status from tests
exit "${EXIT_STATUS}"
