#! /usr/bin/env bash

#
# Runs the storybook tests in docker containers for CircleCI testing.
#

set -eu -o pipefail

RED=$'\e[1;31m'
GREEN=$'\e[1;32m'
NOCOLOR=$'\e[1;0m'

function run_tests() {
  container=$(docker-compose -f docker-compose.storybook.yml ps --filter=name=storybook_tests | awk 'END{print $1}')
  return_code=$(docker-compose -f docker-compose.storybook.yml ps --filter=name=storybook_tests | awk 'END{print $6}')

  echo "Clean .loki directory"
  rm -rf .loki

  echo "Copy results to .loki directory"
  docker cp "$container":/home/circleci/project/.loki/ .loki
  ls -lR .loki

  echo "Shutdown containers"
  docker-compose -f docker-compose.storybook.yml down

  if [ "$return_code" -ne "0" ]; then
    printf "%sLoki Tests FAILED!%s\n" "${RED}" "${NOCOLOR}";
  else
    printf "%sLoki Tests Passed!%s\n" "${GREEN}" "${NOCOLOR}";
  fi
  exit "$return_code"
}

if [[ -z ${CIRCLECI-} ]]; then
  # not on CircleCI
  # verify port is free, if not we need to bail
  # can't kill it since it maybe a docker container and that would kill Docker for Mac
  pid=$(lsof -t -sTCP:LISTEN -i :"6006") || true

  if [[ -z "$pid" ]]; then
    docker-compose -f docker-compose.storybook.yml -f docker-compose.storybook_local.yml build --pull
    docker-compose -f docker-compose.storybook.yml -f docker-compose.storybook_local.yml up storybook_tests

    run_tests
  else
    echo "port 6006 is taken cannot continue, is storybook already running?"
    exit 1
  fi
else
  # on CircleCI
  # remove node_modules from dockerignore
  sed -i='' '/^\/node_modules/d' .dockerignore
  docker-compose -f docker-compose.storybook.yml build --pull
  docker-compose -f docker-compose.storybook.yml up storybook_tests

  run_tests
fi

