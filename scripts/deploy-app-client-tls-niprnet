#! /usr/bin/env bash

set -eu -o pipefail

#
# Deploy the app client-tls
#

usage() {
  echo "$0 <environment>"
  exit 1
}

readonly environment="${1}"

[[ -z "${environment}" ]] && usage

case "${environment}" in
  stg)
    compare_host=gex.stg.move.mil
    health_check_hosts=gex.stg.move.mil,my.stg.move.mil,orders.stg.move.mil
    export AWS_ACCOUNT_ID=015932076428
    ;;
  prd)
    compare_host=gex.move.mil
    health_check_hosts=gex.move.mil,my.move.mil,orders.move.mil
    export AWS_ACCOUNT_ID=015533997236
    ;;
  *)
    echo "<environment> must be one of stg or prd"
    exit 1
    ;;
esac

APP_ENVIRONMENT="${environment}"
AWS_DEFAULT_REGION=us-gov-west-1

KEY=$(chamber read "app-${environment}" move_mil_dod_tls_key -q | base64 -i -)
CERT=$(chamber read "app-${environment}" move_mil_dod_tls_cert -q | base64 -i -)
CA=$(chamber read "app-${environment}" move_mil_dod_ca_cert -q | base64 -i -)

CIRCLE_SHA1=$(curl -sk --key <(echo "${KEY}" | base64 --decode) --cert <(echo "${CERT}" | base64 --decode) --cacert <(echo "${CA}" | base64 --decode) "https://${compare_host}/health"  | jq -r .gitCommit)

scripts/compare-deployed-commit "${compare_host}" "${CIRCLE_SHA1}" "${KEY}" "${CERT}" "${CA}"

readonly image="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/app:git-${CIRCLE_SHA1}"
scripts/ecs-deploy-service-container app-client-tls-niprnet "${image}" "${APP_ENVIRONMENT}" "/bin/milmove serve"

# NOTE: The health checker in all environments ought to work with the values from stg for the key, cert, and ca.
# The following line is commented out until the cert is corrected.
# bin/health-checker --schemes https --hosts "${health_check_hosts}" --key "${KEY}" --cert "${CERT}" --ca "${CA}" --tries 10 --backoff 3 --log-level info --timeout 15m
bin/tls-checker --schemes https --hosts "${health_check_hosts}" --key "${KEY}" --cert "${CERT}" --ca "${CA}" --log-level info --timeout 15m

scripts/check-deployed-commit "${health_check_hosts}" "${CIRCLE_SHA1}" "${KEY}" "${CERT}" "${CA}"
