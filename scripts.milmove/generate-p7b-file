#! /usr/bin/env bash
# The purpose of this function is to create a p7b file from a collection of certificate files that get passed in.
# Run this from the root of the mymove directory and it will place it in config/tls/milmove-cert-bundle.p7b, replacing the current one
## Usage:
## ./scripts/generate-p7b-file cert1.pem cert2.pem cert3.p7b cert4.der.p7b cert5.cer cert6.crt

set -e -o pipefail
# Function to convert DER-encoded p7b files to PEM format
function convert_der_p7b_to_pem() {
  local input_file
  input_file="$1"
  local output_file
  output_file="tmp_certs/$(basename "${input_file%.p7b}.pem")"

  # Check if the input file is DER-encoded
  if ! openssl pkcs7 -inform DER -in "$input_file" -print_certs > /dev/null 2>&1; then
    echo "Error: $input_file is not a DER-encoded p7b file"
    return 1
  fi

  # Convert the file to PEM format
  openssl pkcs7 -inform DER -in "$input_file" -print_certs -out "$output_file"
  echo "Converted $input_file to $output_file"
}

# Function to verify and convert any cer or crt files to PEM format
function verify_and_convert_cer_crt_to_pem() {
  local input_file
  input_file="$1"
  local output_file
  output_file="tmp_certs/$(basename "${input_file%.cer}.pem")"

  # Check if the input file is in PEM format
  if openssl x509 -in "$input_file" -noout > /dev/null 2>&1; then
    cp "$input_file" "$output_file"
    echo "Copied $input_file to $output_file"
  # Otherwise, check if the input file is in DER format
  elif openssl x509 -in "$input_file" -inform DER -noout > /dev/null 2>&1; then
    openssl x509 -in "$input_file" -inform DER -out "$output_file"
    echo "Converted $input_file to $output_file"
  # Otherwise, throw an error
  else
    echo "Error: $input_file is not a valid PEM or DER-encoded certificate file"
    return 1
  fi
}

# Check if the required argument is passed
if [ $# -lt 1 ]; then
  echo "Usage: $0 input_file1 [input_file2 ...]"
  exit 1
fi

# Create a temporary directory for generated files. I called it tmp_certs to avoid collision with tmp
mkdir -p tmp_certs

# Convert any DER-encoded p7b files to PEM format
for file in "$@"; do
  if [[ "$file" == *der.p7b ]]; then
    convert_der_p7b_to_pem "$file"
  fi
done

# Verify and convert any cer or crt files to PEM format
for file in "$@"; do
  if [[ "$file" == *cer || "$file" == *crt ]]; then
    verify_and_convert_cer_crt_to_pem "$file"
  fi
done

# concatenate all the files into one merged pem
cat tmp_certs/*.pem > tmp_certs/merged.pem

# convert to p7b
openssl crl2pkcs7 -nocrl -certfile tmp_certs/merged.pem -outform DER -out config/tls/milmove-cert-bundle.p7b

# Clean up any temporary files
rm -rf tmp_certs

echo "All files packaged into config/tls/milmove-cert-bundle.p7b"