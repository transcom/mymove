swagger: '2.0'
info:
  contact:
    email: dp3@truss.works
  description: |
    The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.

    All endpoints are located at `primelocal/prime/v1/`.

  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  title: Milmove Prime API
  version: 0.0.1
basePath: /prime/v1
schemes:
  - http
tags:
  - name: moveTaskOrder
  - name: mtoShipment
  - name: paymentRequest
  - name: mtoServiceItem
x-tagGroups:
  - name: Endpoints
    tags:
    - moveTaskOrder
    - mtoShipment
    - paymentRequest
    - mtoServiceItem
paths:
  /move-task-orders:
    get:
      summary: fetchMTOUpdates
      description: >
        Gets all move task orders where `availableToPrimeAt` has been set.
        This prevents viewing any move task orders that have not been made available to the Prime.
      operationId: fetchMTOUpdates
      tags:
        - moveTaskOrder
      produces:
        - application/json
      parameters:
        - in: query
          name: since
          type: integer
          format: timestamp
          description: Only return move task orders updated since this time.
      responses:
        '200':
          description: Successfully retrieved move task orders where `availableToPrimeAt` has been set.
          schema:
            $ref: '#/definitions/MoveTaskOrders'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/move-task-orders/{moveTaskOrderID}/post-counseling-info':
    parameters:
      - description: ID of move task order to use.
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    patch:
      summary: updateMTOPostCounselingInformation
      description: |
        ### Functionality
        This endpoint **updates** the MoveTaskOrder after the Prime has completed Counseling.

        PPM related information is updated here. Most other fields will be found on the specific MTOShipment and updated using [updateMTOShipment](#operation/updateMTOShipment).

      operationId: updateMTOPostCounselingInformation
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - moveTaskOrder
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              moveTaskOrderID:
                description: UUID for the move task order to use.
                type: string
              ppmType:
                description: Sets a ppmType to an allowed value.
                type: string
                enum:
                  - FULL
                  - PARTIAL
              ppmEstimatedWeight:
                description: The estimated weight determined post counseling.
                type: integer
              pointOfContact:
                type: string
                description: Email or id of a contact person for this update.
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated move task order with post counseling information.
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments':
    post:
      summary: createMTOShipment
      description: |
        Creates a MTO shipment for the specified Move Task Order.
        Required fields include:
        * Shipment Type
        * Customer requested pick-up date
        * Pick-up Address
        * Delivery Address
        * Releasing / Receiving agents

        Optional fields include:
        * Customer Remarks
        * Releasing / Receiving agents
        * An array of optional accessorial service item codes
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createMTOShipment
      tags:
        - mtoShipment
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateMTOShipment'
      responses:
        '200':
          description: Successfully created a MTO shipment.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}':
    put:
      summary: updateMTOShipment
      description: |
        Updates an existing shipment for a Move Task Order (MTO). Only the following fields can be updated using this endpoint:

        * `scheduledPickupDate`
        * `actualPickupDate`
        * `firstAvailableDeliveryDate`
        * `destinationAddress`
        * `pickupAddress`
        * `secondaryDeliveryAddress`
        * `secondaryPickupAddress`
        * `primeEstimatedWeight`
        * `primeActualWeight`
        * `shipmentType`
        * `agents` - all subfields except `mtoShipmentID`, `createdAt`, `updatedAt`. You cannot add new agents to a shipment.

        Note that some fields cannot be manually changed but will still be updated automatically, such as `primeEstimatedWeightRecordedDate` and `requiredDeliveryDate`.
      operationId: updateMTOShipment
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment being updated.
          required: true
          format: uuid
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MTOShipment'
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the MTO shipment.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/addresses/{addressID}':
    put:
      summary: updateMTOShipmentAddress
      description: |
        ### Functionality
        This endpoint is used to **update** the addresses on an MTO Shipment. The address details completely replace the original, except for the UUID.
        Therefore a complete address should be sent in the request.

        This endpoint **cannot create** an address.
        To create an address on an MTO shipment, the caller must use [updateMTOShipment](#operation/updateMTOShipment) as the parent shipment has to be updated with the appropriate link to the address.

        ### Errors
        The address must be associated with the mtoShipment passed in the url.
        In other words, it should be listed as pickupAddress, destinationAddress, secondaryPickupAddress or secondaryDeliveryAddress on the mtoShipment provided.
        If it is not, caller will receive a **Conflict** Error.

        The mtoShipment should be associated with an MTO that is available to prime.
        If the caller requests an update to an address, and the shipment is not on an available MTO, the caller will receive a **NotFound** Error.

      operationId: updateMTOShipmentAddress
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment associated with the address
          required: true
          format: uuid
          type: string
        - in: path
          name: addressID
          description: UUID of the address being updated
          required: true
          format: uuid
          type: string
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/Address'
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the address.
          schema:
            $ref: '#/definitions/Address'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/agents':
    post:
      summary: createMTOAgent
      description: |
        ### Functionality
        This endpoint is used to **create** and add agents for an existing MTO Shipment. Only the fields being modified need to be sent in the request body.

        ### Errors
        The agent must always have a name and at least one method of contact (either `email` or `phone`).

        The agent must be associated with the MTO shipment passed in the url.

        The shipment should be associated with an MTO that is available to the Pime.
        If the caller requests a new agent, and the shipment is not on an available MTO, the caller will receive a **NotFound** response.
      operationId: createMTOAgent
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment associated with the agent
          required: true
          format: uuid
          type: string
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/MTOAgent'
      responses:
        '200':
          description: Successfully added the agent.
          schema:
            $ref: '#/definitions/MTOAgent'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/agents/{agentID}':
    put:
      summary: updateMTOAgent
      description: |
        ### Functionality
        This endpoint is used to **update** the agents for an MTO Shipment. Only the fields being modified need to be sent in the request body.

        ### Errors:
        The agent must always have a name and at least one method of contact (either `email` or `phone`).

        The agent must be associated with the MTO shipment passed in the url.

        The shipment should be associated with an MTO that is available to the Prime.
        If the caller requests an update to an agent, and the shipment is not on an available MTO, the caller will receive a **NotFound** response.

      operationId: updateMTOAgent
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment associated with the agent
          required: true
          format: uuid
          type: string
        - in: path
          name: agentID
          description: UUID of the agent being updated
          required: true
          format: uuid
          type: string
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/MTOAgent'
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the agent.
          schema:
            $ref: '#/definitions/MTOAgent'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-service-items':
    post:
      summary: createMTOServiceItem
      description: |
        Creates one or more MTOServiceItems. Not all service items may be created, please see details below.

        This endpoint supports different body definitions. In the modelType field below, select the modelType corresponding
         to the service item you wish to create and the documentation will update with the new definition.

        Upon creation these items are associated with a Move Task Order and an MTO Shipment.
        The request must include UUIDs for the MTO and MTO Shipment connected to this service item. Some service item types require
        additional service items to be autogenerated when added - all created service items, autogenerated included,
        will be returned in the response.

        To update a service item, please use [updateMTOServiceItem](#operation/updateMTOServiceItem) endpoint.

        ---

        **`MTOServiceItemOriginSIT`**

        MTOServiceItemOriginSIT is a subtype of MTOServiceItem.

        This model type describes a domestic origin SIT service item. Items can be created using this
        model type with the following codes:

        **DOFSIT**

        **1st day origin SIT service item**. When a DOFSIT is requested, the API will auto-create the following group of service items:
          * DOFSIT - Domestic origin 1st day SIT
          * DOASIT - Domestic origin Additional day SIT
          * DOPSIT - Domestic origin SIT pickup

        **DOASIT**

        **Addt'l days origin SIT service item**. This represents an additional day of storage for the same item.
        Additional DOASIT service items can be created and added to an existing shipment that **includes a DOFSIT service item**.

        ---

        **`MTOServiceItemDestSIT`**

        MTOServiceItemDestSIT is a subtype of MTOServiceItem.

        This model type describes a domestic destination SIT service item. Items can be created using this
        model type with the following codes:

        **DDFSIT**

        **1st day origin SIT service item**. When a DOFSIT is requested, the API will auto-create the following group of service items:
          * DDFSIT - Domestic destination 1st day SIT
          * DDASIT - Domestic destination Additional day SIT
          * DDDSIT - Domestic destination SIT delivery

        **DDASIT**

        **Addt'l days destination SIT service item**. This represents an additional day of storage for the same item.
        Additional DDASIT service items can be created and added to an existing shipment that **includes a DDFSIT service item**.

      operationId: createMTOServiceItem
      tags:
        - mtoServiceItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/MTOServiceItem'
      responses:
        '200':
          description: Successfully created an MTO service item.
          schema:
            type: array
            items:
              $ref: '#/definitions/MTOServiceItem'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-service-items/{mtoServiceItemID}':
    patch:
      summary: updateMTOServiceItem
      description: |
        Updates MTOServiceItems after creation. Not all service items or fields may be updated, please see details below.

        This endpoint supports different body definitions. In the modelType field below, select the modelType corresponding
         to the service item you wish to update and the documentation will update with the new definition.

        To create a service item, please use [createMTOServiceItem](#operation/createMTOServiceItem)) endpoint.

        ### Errors

        Currently this is not implemented and will generated the NotImplemented error.
      operationId: updateMTOServiceItem
      tags:
        - mtoServiceItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema: # we use an update specific definition for the request
            $ref: '#/definitions/UpdateMTOServiceItem'
          required: true
        - in: path
          name: mtoServiceItemID
          type: string
          description: UUID of service item to update.
          required: true
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the MTO service item.
          schema:
            $ref: '#/definitions/MTOServiceItem'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  /payment-requests:
    post:
      summary: createPaymentRequest
      description: |
        Creates a new instance of a paymentRequest.
        A newly created payment request is assigned the status `PENDING`.
        A move task order can have multiple payment requests, and
        a final payment request can be marked using boolean `isFinal`.
      operationId: createPaymentRequest
      tags:
        - paymentRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreatePaymentRequest'
      responses:
        '201':
          description: Successfully created a paymentRequest object.
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: Request payload is invalid.
          schema:
            $ref: '#/definitions/ClientError'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found.
          schema:
            $ref: '#/definitions/ClientError'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  /payment-requests/{paymentRequestID}/uploads:
    post:
      summary: createUpload
      description: |
        ### Functionality
        This endpoint **uploads** a Proof of Service document for a PaymentRequest.

        The PaymentRequest should already exist.

        PaymentRequests are created with the [createPaymentRequest](#operation/createPaymentRequest) endpoint.

      operationId: createUpload
      tags:
        - paymentRequest
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: paymentRequestID
          type: string
          description: UUID of payment request to use.
          required: true
        - in: formData
          name: file
          type: file
          description: The file to upload.
          required: true
      responses:
        '201':
          description: Successfully created upload of digital file.
          schema:
            $ref: '#/definitions/Upload'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
definitions:
  Address:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      streetAddress1:
        type: string
        example: 123 Main Ave
        title: Street address 1
      streetAddress2:
        type: string
        example: Apartment 9000
        x-nullable: true
        title: Street address 2
      streetAddress3:
        type: string
        example: Montmârtre
        x-nullable: true
        title: Address Line 3
      city:
        type: string
        example: Anytown
        title: City
      state:
        title: State
        type: string
        x-display-value:
          AL: AL
          AK: AK
          AR: AR
          AZ: AZ
          CA: CA
          CO: CO
          CT: CT
          DC: DC
          DE: DE
          FL: FL
          GA: GA
          HI: HI
          IA: IA
          ID: ID
          IL: IL
          IN: IN
          KS: KS
          KY: KY
          LA: LA
          MA: MA
          MD: MD
          ME: ME
          MI: MI
          MN: MN
          MO: MO
          MS: MS
          MT: MT
          NC: NC
          ND: ND
          NE: NE
          NH: NH
          NJ: NJ
          NM: NM
          NV: NV
          NY: NY
          OH: OH
          OK: OK
          OR: OR
          PA: PA
          RI: RI
          SC: SC
          SD: SD
          TN: TN
          TX: TX
          UT: UT
          VA: VA
          VT: VT
          WA: WA
          WI: WI
          WV: WV
          WY: WY
        enum:
          - AL
          - AK
          - AR
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MI
          - MN
          - MO
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VT
          - WA
          - WI
          - WV
          - WY
      postalCode:
        type: string
        format: zip
        title: ZIP
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
      country:
        type: string
        title: Country
        x-nullable: true
        example: 'USA'
        default: USA
      eTag:
        type: string
        readOnly: true
    required:
      - streetAddress1
      - city
      - state
      - postalCode
  ClientError:
    type: object
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
      - instance
  CreateMTOShipment:
    type: object
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      requestedPickupDate:
        format: date
        type: string
        description: The date the customer requested that this shipment be picked up.
      primeEstimatedWeight:
        type: integer
        example: 4500
      customerRemarks:
        type: string
        example: handle with care
        x-nullable: true
      pickupAddress:
        $ref: '#/definitions/Address'
      destinationAddress:
        $ref: '#/definitions/Address'
      agents:
        $ref: '#/definitions/MTOAgents'
      pointOfContact:
        type: string
        description: Email or id of a contact person for this update
      mtoServiceItems:
        type: array
        items:
          $ref: '#/definitions/MTOServiceItem'
    required:
      - moveTaskOrderID
      - pickupAddress
      - destinationAddress
      - shipmentType
      - requestedPickupDate
  CreatePaymentRequest:
    type: object
    properties:
      isFinal:
        default: false
        type: boolean
      moveTaskOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      serviceItems:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/ServiceItem'
      pointOfContact:
        type: string
        description: Email or id of a contact person for this update.
    required:
      - moveTaskOrderID
      - serviceItems
  Customer:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      dodID:
        type: string
      userID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      currentAddress:
        $ref: '#/definitions/Address'
      firstName:
        type: string
        example: Vanya
      lastName:
        type: string
        example: Petrovna
      branch:
        type: string
        example: 'COAST_GUARD'
      phone:
        type: string
        format: telephone
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: fake@example.com
      eTag:
        type: string
        readOnly: true
  DimensionType:
    description: Describes a dimension type for a MTOServiceItemDimension.
    type: string
    enum:
      - ITEM
      - CRATE
  DutyStation:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Fort Bragg North Station
      addressID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      address:
        $ref: '#/definitions/Address'
      eTag:
        type: string
        readOnly: true
  Entitlements:
    properties:
      id:
        example: 571008b1-b0de-454d-b843-d71be9f02c04
        format: uuid
        type: string
      authorizedWeight:
        example: 2000
        type: integer
        x-formatting: weight
        x-nullable: true
      dependentsAuthorized:
        example: true
        type: boolean
        x-nullable: true
      nonTemporaryStorage:
        example: false
        type: boolean
        x-nullable: true
      privatelyOwnedVehicle:
        example: false
        type: boolean
        x-nullable: true
      proGearWeight:
        example: 2000
        type: integer
        x-formatting: weight
      proGearWeightSpouse:
        example: 500
        type: integer
        x-formatting: weight
      storageInTransit:
        example: 90
        type: integer
      totalWeight:
        example: 500
        type: integer
        x-formatting: weight
      totalDependents:
        example: 2
        type: integer
      eTag:
        type: string
        readOnly: true
    type: object
  Error:
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
    type: object
  MoveTaskOrder:
    type: object
    required:
      - mtoShipments
      - mtoServiceItems
      - paymentRequests
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      moveCode:
        type: string
        example: 'HYXFJF'
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      orderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      order:
        $ref: '#/definitions/Order'
      referenceId:
        example: 1001-3456
        type: string
      availableToPrimeAt:
        format: date-time
        type: string
        x-nullable: true
        readOnly: true
      isCanceled:
        type: boolean
        x-nullable: true
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      paymentRequests:
        $ref: '#/definitions/PaymentRequests'
      mtoServiceItems:
        type: array
        items:
          $ref: '#/definitions/MTOServiceItem'
      mtoShipments:
        $ref: '#/definitions/MTOShipments'
      ppmType:
        type: string
        enum:
          - FULL
          - PARTIAL
      ppmEstimatedWeight:
        type: integer
      eTag:
        type: string
        readOnly: true
  MoveTaskOrders:
    items:
      $ref: '#/definitions/MoveTaskOrder'
    type: array
  MTOAgent:
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        readOnly: true
        type: string
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      firstName:
        type: string
        x-nullable: true
      lastName:
        type: string
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})?$'
        x-nullable: true
      phone:
        type: string
        format: telephone
        pattern: '^([2-9]\d{2}-\d{3}-\d{4})?$'
        x-nullable: true
      agentType:
        $ref: '#/definitions/MTOAgentType'
      eTag:
        type: string
        readOnly: true
    type: object
  MTOAgents:
    items:
      $ref: '#/definitions/MTOAgent'
    type: array
    maxItems: 2
  MTOAgentType:
    type: string
    title: MTO Agent Type
    example: RELEASING_AGENT
    enum:
      - RELEASING_AGENT
      - RECEIVING_AGENT
  MTOServiceItem:
    description: MTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.
    type: object
    discriminator: modelType
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the service item
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the associated moveTaskOrder
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the associated mtoShipment
      reServiceName:
        type: string
        readOnly: true
        description: Full descriptive name of the service
      status:
        $ref: '#/definitions/MTOServiceItemStatus'
      rejectionReason:
        example: item was too heavy
        type: string
        x-nullable: true
        readOnly: true
        description: Reason the service item was rejected by the TOO
      modelType: # Base type and sub-types of MTOServiceItem
        $ref: '#/definitions/MTOServiceItemModelType'
      eTag:
        type: string
        readOnly: true
        description: ETag identifier required to update this object
    required:
      - modelType
      - moveTaskOrderID
  MTOServiceItemBasic: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a basic service item subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            $ref: '#/definitions/ReServiceCode'
        required:
          - reServiceCode
  MTOServiceItemDestSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic destination SIT service item. Subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DDFSIT # Domestic Destination First Day SIT
              - DDASIT # Domestic Destination Additional SIT
          timeMilitary1:
            type: string
            example: 1400Z
            description: Time of delivery corresponding to `firstAvailableDeliveryDate1`, in military format.
            pattern: '\d{4}Z'
          firstAvailableDeliveryDate1:
            format: date
            type: string
            description: First available date that Prime can deliver SIT service item.
          timeMilitary2:
            type: string
            example: 1400Z
            description: Time of delivery corresponding to `firstAvailableDeliveryDate2`, in military format.
            pattern: '\d{4}Z'
          firstAvailableDeliveryDate2:
            format: date
            type: string
            description: Second available date that Prime can deliver SIT service item.
          sitEntryDate:
            format: date
            type: string
            description: Entry date for the SIT
          sitDepartureDate:
            format: date
            type: string
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.
            x-nullable: true
          sitDestinationFinalAddress:
            $ref: '#/definitions/Address'
        required:
          - reServiceCode
          - timeMilitary1
          - firstAvailableDeliveryDate1
          - timeMilitary2
          - firstAvailableDeliveryDate2
          - sitEntryDate
  MTOServiceItemDimension:
    description: Describes a dimension object for the MTOServiceItem.
    type: object
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      type:
        $ref: '#/definitions/DimensionType'
      length:
        description: Length in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      width:
        description: Width in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      height:
        description: Height in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
    required:
      - length
      - width
      - height
  MTOServiceItemDomesticCrating: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic crating/uncrating service item subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service codes allowed for this model type.
            enum:
              - DCRT # Domestic Crating
              - DCRTSA # Domestic Crating - Standalone
              - DUCRT # Domestic Uncrating
          item:
            $ref: '#/definitions/MTOServiceItemDimension'
          crate:
            $ref: '#/definitions/MTOServiceItemDimension'
          description:
            type: string
            example: Decorated horse head to be crated.
        required:
          - reServiceCode
          - item
          - crate
          - description
  MTOServiceItemModelType:
    description: |
      Describes all model sub-types for a MTOServiceItem model.

      Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.
        * DOFSIT, DOASIT - MTOServiceItemOriginSIT
        * DDFSIT, DDASIT - MTOServiceItemDestSIT
        * DOSHUT, DDSHUT - MTOServiceItemShuttle
        * DCRT, DCRTSA, DUCRT - MTOServiceItemDomesticCrating

      The documentation will then update with the supported fields.

    type: string
    enum:
      - MTOServiceItemBasic
      - MTOServiceItemOriginSIT
      - MTOServiceItemDestSIT
      - MTOServiceItemShuttle
      - MTOServiceItemDomesticCrating
  MTOServiceItemOriginSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic origin SIT service item. Subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DOFSIT # Domestic Origin First Day SIT
              - DOASIT # Domestic Origin Additional SIT
          reason:
            type: string
            example: Storage items need to be picked up
            description: Explanation of why Prime is picking up SIT item.
          sitPostalCode:
            type: string
            format: zip
            example: '90210'
            pattern: '^(\d{5}([\-]\d{4})?)$'
          sitEntryDate:
            format: date
            type: string
            description: Entry date for the SIT
          sitDepartureDate:
            format: date
            type: string
            x-nullable: true
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.
          sitHHGActualOrigin:
            $ref: '#/definitions/Address'
        required:
          - reServiceCode
          - reason
          - sitPostalCode
          - sitEntryDate
  MTOServiceItemShuttle: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a shuttle service item.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service codes allowed for this model type.
            enum:
              - DOSHUT # Domestic Origin Shuttle Service
              - DDSHUT # Domestic Destination Shuttle Service
          reason:
            type: string
            example: Storage items need to be picked up.
            description: Explanation of why a shuttle service is required.
          description:
            type: string
            example: Things to be moved to the place by shuttle.
            description: Further details about the shuttle service.
        required:
          - reason
          - reServiceCode
          - description
  MTOServiceItemStatus:
    description: Describes all statuses for a MTOServiceItem.
    type: string
    readOnly: true
    enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
  MTOShipment:
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      approvedDate:
        description: date when the shipment was given the status "APPROVED"
        format: date
        type: string
        readOnly: true
      scheduledPickupDate:
        format: date
        type: string
      requestedPickupDate:
        format: date
        type: string
        readOnly: true
      firstAvailableDeliveryDate:
        format: date
        type: string
      primeActualWeight:
        type: integer
        example: 4500
      primeEstimatedWeight:
        type: integer
        example: 4500
      primeEstimatedWeightRecordedDate:
        format: date
        type: string
        readOnly: true
      actualPickupDate:
        format: date
        type: string
      requiredDeliveryDate:
        format: date
        type: string
        readOnly: true
      agents:
        $ref: '#/definitions/MTOAgents'
      mtoServiceItems:
        items:
          $ref: '#/definitions/MTOServiceItem'
        type: array
      customerRemarks:
        type: string
        readOnly: true
        example: handle with care
        x-nullable: true
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      pickupAddress:
        $ref: '#/definitions/Address'
      destinationAddress:
        $ref: '#/definitions/Address'
      secondaryPickupAddress:
        $ref: '#/definitions/Address'
      secondaryDeliveryAddress:
        $ref: '#/definitions/Address'
      eTag:
        type: string
        readOnly: true
      status:
        type: string
        readOnly: true
        enum:
          - APPROVED
          - SUBMITTED
          - REJECTED
          - CANCELLATION_REQUESTED
      rejectionReason:
        type: string
        readOnly: true
        example: MTO Shipment not good enough
        x-nullable: true
      pointOfContact:
        type: string
        description: Email or id of a contact person for this update.
  MTOShipments:
    items:
      $ref: '#/definitions/MTOShipment'
    type: array
  MTOShipmentType:
    type: string
    title: Shipment Type
    example: HHG
    enum:
      - HHG
      - INTERNATIONAL_HHG
      - INTERNATIONAL_UB
    x-display-value:
      HHG: HHG
      INTERNATIONAL_HHG: International HHG
      INTERNATIONAL_UB: International UB
  Order:
    required:
      - orderNumber
      - rank
      - linesOfAccounting
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      customer:
        $ref: '#/definitions/Customer'
      customerID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      entitlement:
        $ref: '#/definitions/Entitlements'
      destinationDutyStation:
        $ref: '#/definitions/DutyStation'
      originDutyStation:
        $ref: '#/definitions/DutyStation'
      rank:
        type: string
        example: 'E_5'
      reportByDate:
        type: string
        format: date
      orderNumber:
        type: string
      linesOfAccounting:
        type: string
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentRequest:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      isFinal:
        default: false
        type: boolean
      moveTaskOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      paymentRequestNumber:
        example: '1234-5678-1'
        readOnly: true
        type: string
      proofOfServiceDocs:
        $ref: '#/definitions/ProofOfServiceDocs'
      paymentServiceItems:
        $ref: '#/definitions/PaymentServiceItems'
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentRequests:
    type: array
    items:
      $ref: '#/definitions/PaymentRequest'
  PaymentRequestStatus:
    enum:
      - PENDING
      - REVIEWED
      - REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED
      - SENT_TO_GEX
      - RECEIVED_BY_GEX
      - PAID
      - EDI_ERROR
    title: Payment Request Status
    type: string
  PaymentServiceItem:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      paymentRequestID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      mtoServiceItemID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      status:
        $ref: '#/definitions/PaymentServiceItemStatus'
      priceCents:
        type: integer
        format: cents
        title: Price of the service item in cents
        x-nullable: true
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      referenceID:
        example: 1234-5678-c56a4180
        readOnly: true
        format: string
      paymentServiceItemParams:
        $ref: '#/definitions/PaymentServiceItemParams'
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentServiceItemParam:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      paymentServiceItemID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      key:
        $ref: '#/definitions/ServiceItemParamName'
      value:
        example: '3025'
        type: string
      type:
        $ref: '#/definitions/ServiceItemParamType'
      origin:
        $ref: '#/definitions/ServiceItemParamOrigin'
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentServiceItemParams:
    type: array
    items:
      $ref: '#/definitions/PaymentServiceItemParam'
  PaymentServiceItems:
    type: array
    items:
      $ref: '#/definitions/PaymentServiceItem'
  PaymentServiceItemStatus:
    enum:
      - REQUESTED
      - APPROVED
      - DENIED
      - SENT_TO_GEX
      - PAID
      - EDI_ERROR
    title: Payment Service Item Status
    type: string
  ProofOfServiceDocs:
    properties:
      uploads:
        items:
          $ref: '#/definitions/Upload'
        type: array
    type: object
  ReServiceCode:
    type: string
    description: |
      This is the full list of service items that can be found on a shipment. Not all service items
      may be requested by the Prime, but may be returned in a response.

      Documentation of all the service items will be provided.
    enum:
      - CS
      - DBHF
      - DBTF
      - DCRT
      - DCRTSA
      - DDASIT
      - DDDSIT
      - DDFSIT
      - DDP
      - DDSHUT
      - DLH
      - DMHF
      - DNPKF
      - DOASIT
      - DOFSIT
      - DOP
      - DOPSIT
      - DOSHUT
      - DPK
      - DSH
      - DUCRT
      - DUPK
      - FSC
      - IBHF
      - IBTF
      - ICOLH
      - ICOUB
      - ICRT
      - ICRTSA
      - IDASIT
      - IDDSIT
      - IDFSIT
      - IDSHUT
      - IHPK
      - IHUPK
      - INPKF
      - IOASIT
      - IOCLH
      - IOCUB
      - IOFSIT
      - IOOLH
      - IOOUB
      - IOPSIT
      - IOSHUT
      - IUBPK
      - IUBUPK
      - IUCRT
      - MS
      - NSTH
      - NSTUB
  ServiceItem:
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      params:
        type: array
        readOnly: true
        items:
          properties:
            key:
              type: string
              example: Service Item Parameter Name
            value:
              type: string
              example: Service Item Parameter Value
          type: object
      eTag:
        type: string
        readOnly: true
    type: object
  ServiceItemParamName:
    type: string
    enum:
      - ActualPickupDate
      - CanStandAlone
      - ContractCode
      - ContractYearName
      - CubicFeetBilled
      - CubicFeetCrating
      - DistanceZip3
      - DistanceZip5
      - DistanceZipSITDest
      - DistanceZipSITOrigin
      - EIAFuelPrice
      - EscalationCompounded
      - FSCWeightBasedDistanceMultiplier
      - IsPeak
      - MarketDest
      - MarketOrigin
      - MTOAvailableToPrimeAt
      - NumberDaysSIT
      - PriceAreaDest
      - PriceAreaIntlDest
      - PriceAreaIntlOrigin
      - PriceAreaOrigin
      - PriceRateOrFactor
      - PSI_LinehaulDom
      - PSI_LinehaulDomPrice
      - PSI_LinehaulShort
      - PSI_LinehaulShortPrice
      - PSI_PackingDom
      - PSI_PackingDomPrice
      - PSI_PackingHHGIntl
      - PSI_PackingHHGIntlPrice
      - PSI_PriceDomDest
      - PSI_PriceDomDestPrice
      - PSI_PriceDomOrigin
      - PSI_PriceDomOriginPrice
      - PSI_ShippingLinehaulIntlCO
      - PSI_ShippingLinehaulIntlCOPrice
      - PSI_ShippingLinehaulIntlOC
      - PSI_ShippingLinehaulIntlOCPrice
      - PSI_ShippingLinehaulIntlOO
      - PSI_ShippingLinehaulIntlOOPrice
      - RateAreaNonStdDest
      - RateAreaNonStdOrigin
      - RequestedPickupDate
      - ServiceAreaDest
      - ServiceAreaOrigin
      - ServicesScheduleDest
      - ServicesScheduleOrigin
      - SITScheduleDest
      - SITScheduleOrigin
      - WeightActual
      - WeightBilledActual
      - WeightEstimated
      - ZipDestAddress
      - ZipPickupAddress
      - ZipSITDestHHGFinalAddress
  ServiceItemParamOrigin:
    type: string
    enum:
      - PRIME
      - SYSTEM
      - PRICER
  ServiceItemParamType:
    type: string
    enum:
      - STRING
      - DATE
      - INTEGER
      - DECIMAL
      - TIMESTAMP
      - PaymentServiceItemUUID
  UpdateMTOServiceItem:
    description: UpdateMTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.
    type: object
    discriminator: modelType
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the service item. Must match path.
      modelType: # Base type and sub-types of MTOServiceItem
        $ref: '#/definitions/UpdateMTOServiceItemModelType'
    required:
      - modelType
  UpdateMTOServiceItemModelType:
    description: |
      Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.
        * DDDSIT - UpdateMTOServiceItemSIT
        * DOPSIT - UpdateMTOServiceItemSIT

      The documentation will then update with the supported fields.
    type: string
    enum:
      - UpdateMTOServiceItemSIT
  UpdateMTOServiceItemSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: |
      Subtype used to provide the departure date for origin or destination SIT. This is not creating a new service item but rather updating and existing service item.
    allOf:
      - $ref: '#/definitions/UpdateMTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DDDSIT # Domestic Destination SIT Delivery
              - DOPSIT # Domestic Origin SIT Pickup
          sitDepartureDate:
            format: date
            type: string
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination.
          sitDestinationFinalAddress:
            $ref: '#/definitions/Address'
  Upload:
    type: object
    properties:
      bytes:
        type: integer
      contentType:
        type: string
        format: mime-type
        example: application/pdf
      filename:
        example: filename.pdf
        type: string
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
    required:
      - filename
      - contentType
      - bytes
  ValidationError:
    allOf:
      - $ref: '#/definitions/ClientError'
      - type: object
    properties:
      invalidFields:
        type: object
        additionalProperties:
          description: List of errors for the field
          type: array
          items:
            type: string
    required:
      - invalidFields
responses:
  InvalidRequest:
    description: The request payload is invalid.
    schema:
      $ref: '#/definitions/ClientError'
  NotFound:
    description: The requested resource wasn't found.
    schema:
      $ref: '#/definitions/ClientError'
  Conflict:
    description: 'The request could not be processed because of conflict in the current state of the resource.'
    schema:
      $ref: '#/definitions/ClientError'
  PermissionDenied:
    description: The request was denied.
    schema:
      $ref: '#/definitions/ClientError'
  ServerError:
    description: A server error occurred.
    schema:
      $ref: '#/definitions/Error'
  NotImplemented:
    description: The requested feature is still in development.
    schema:
      $ref: '#/definitions/Error'
  PreconditionFailed:
    description: Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.
    schema:
      $ref: '#/definitions/ClientError'
  UnprocessableEntity:
    description: The payload was unprocessable.
    schema:
      $ref: '#/definitions/ValidationError'
