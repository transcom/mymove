swagger: '2.0'
info:
  contact:
    email: dp3@truss.works
  description: |
    The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.

    All endpoints are located at `primelocal/prime/v1/`.

  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  title: Milmove Prime API
  version: 0.0.1
basePath: /prime/v1
schemes:
  - http
tags:
  - name: moveTaskOrder
    description: >
      The **moveTaskOrder** represents a military move that has been sent to a contractor. It contains all the
      information about shipments, including service items, estimated weights, actual weights, requested and scheduled
      move dates, etc.
  - name: mtoShipment
    description: |
      A shipment is some (or all) of a customer's belongings picked up in one location and delivered to another
      location. All of the items in a shipment are weighed and transported as a discrete unit. One move may include
      multiple shipments. An **mtoShipment**, in particular, is a shipment that belongs to a
      [moveTaskOrder](#tag/moveTaskOrder).

      The weights for all of the shipments in a move are combined and compared to the customer's weight allowance. If
      the sum of the shipments is greater, the customer is liable for paying excess weight cost. Both the customer and
      the contractor should keep this potential cost in mind when planning a move and the shipments within it.
  - name: mtoServiceItem
    description: |
      A service item is a service that the contractor can bill for. For example, if the movers pack and/or unpack a
      customer's belongings, those are billable services (packing and unpacking). All **mtoServiceItems** must be
      approved by the TOO before payment can be requested.

      There are three types of service items: accessorial, MTO-level, and standard.

      **WIP:** Add an external link to an article that explains the different types of service items in more detail.
  - name: paymentRequest
x-tagGroups:
  - name: Endpoints
    tags:
    - moveTaskOrder
    - mtoShipment
    - mtoServiceItem
    - paymentRequest
paths:
  /moves:
    get:
      summary: listMoves
      description: |
        Gets all moves that have been reviewed and approved by the TOO. The `since` parameter can be used to filter this
        list down to only the moves that have been updated since the provided timestamp. A move will be considered
        updated if the `updatedAt` timestamp on the move or on its orders, shipments, service items, or payment requests,
        is later than the provided date and time.

        **WIP**: Include what causes moves to leave this list. Currently, once the `availableToPrimeAt` timestamp has
        been set, that move will always appear in this list.
      operationId: listMoves
      tags:
        - moveTaskOrder
      produces:
        - application/json
      parameters:
        - in: query
          name: since
          type: string
          format: date-time
          description: Only return moves updated since this time. Formatted like "2021-07-23T18:30:47.116Z"
      responses:
        '200':
          description: Successfully retrieved moves. A successful fetch might still return zero moves.
          schema:
            $ref: '#/definitions/ListMoves'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '500':
          $ref: '#/responses/ServerError'
  /move-task-orders:
    get:
      summary: fetchMTOUpdates
      deprecated: true
      description: |
        _[Deprecated: sunset on August 31, 2021]_ This endpoint is deprecated. Please use `listMoves`.

        Gets all moves that have been reviewed and approved by the TOO. The `since` parameter can be used to filter this
        list down to only the moves that have been updated since the provided timestamp. A move will be considered
        updated if the `updatedAt` timestamp on the move is later than the provided date and time.

        **WIP**: The original goal was to also look at the `updateAt` timestamps of the nested objects - such as the
        shipments, service items, etc. This has not been implemented.

        **WIP**: Include what causes moves to leave this list. Currently, once the `availableToPrimeAt` timestamp has
        been set, that move will always appear in this list.
      operationId: fetchMTOUpdates
      tags:
        - moveTaskOrder
      produces:
        - application/json
      parameters:
        - in: query
          name: since
          type: integer
          format: timestamp
          description: Only return move task orders updated since this time.
      responses:
        '200':
          description: Successfully retrieved move task orders where `availableToPrimeAt` has been set.
          schema:
            $ref: '#/definitions/MoveTaskOrders'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  /move-task-orders/{moveID}:
    get:
      summary: getMoveTaskOrder
      description: |
        ### Functionality
        This endpoint gets an individual MoveTaskOrder by ID.

        It will provide information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.
      operationId: getMoveTaskOrder
      tags:
        - moveTaskOrder
      produces:
        - application/json
      parameters:
        - description: UUID or MoveCode of move task order to use.
          in: path
          name: moveID
          required: true
          type: string
      responses:
        '200':
          description: Successfully retrieve an individual move task order.
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/move-task-orders/{moveTaskOrderID}/post-counseling-info':
    parameters:
      - description: ID of move task order to use.
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    patch:
      summary: updateMTOPostCounselingInformation
      description: |
        ### Functionality
        This endpoint **updates** the MoveTaskOrder after the Prime has completed Counseling.

        PPM related information is updated here. Most other fields will be found on the specific MTOShipment and updated using [updateMTOShipment](#operation/updateMTOShipment).

      operationId: updateMTOPostCounselingInformation
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - moveTaskOrder
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              moveTaskOrderID:
                description: UUID for the move task order to use.
                type: string
              ppmType:
                description: Sets a ppmType to an allowed value.
                type: string
                enum:
                  - FULL
                  - PARTIAL
              ppmEstimatedWeight:
                description: The estimated weight determined post counseling.
                type: integer
              pointOfContact:
                type: string
                description: Email or id of a contact person for this update.
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated move task order with post counseling information.
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments':
    post:
      summary: createMTOShipment
      description: |
        Creates a new shipment within the specified move. This endpoint should be used whenever the movers identify a
        need for an additional shipment. The new shipment will be submitted to the TOO for review, and the TOO must
        approve it before the contractor can proceed with billing.

        **WIP**: The Prime should be notified by a push notification whenever the TOO approves a shipment connected to
        one of their moves. Otherwise, the Prime can fetch the related move using the
        [getMoveTaskOrder](#operation/getMoveTaskOrder) endpoint and see if this shipment has the status `"APPROVED"`.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createMTOShipment
      tags:
        - mtoShipment
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateMTOShipment'
      responses:
        '200':
          description: Successfully created a MTO shipment.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}':
    patch:
      summary: updateMTOShipment
      description: |
        Updates an existing shipment for a move.

        Note that there are some restrictions on nested objects:

        * Service items: You cannot add or update service items using this endpoint. Please use [createMTOServiceItem](#operation/createMTOServiceItem) and [updateMTOServiceItem](#operation/updateMTOServiceItem) instead.
        * Agents: You cannot add or update agents using this endpoint. Please use [createMTOAgent](#operation/createMTOAgent) and [updateMTOAgent](#operation/updateMTOAgent) instead.
        * Addresses: You can add new addresses using this endpoint (and must use this endpoint to do so), but you cannot update existing ones. Please use [updateMTOShipmentAddress](#operation/updateMTOShipmentAddress) instead.

        These restrictions are due to our [optimistic locking/concurrency control](https://github.com/transcom/mymove/wiki/use-optimistic-locking) mechanism.

        Note that some fields cannot be manually changed but will still be updated automatically, such as `primeEstimatedWeightRecordedDate` and `requiredDeliveryDate`.
      operationId: updateMTOShipment
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment being updated.
          required: true
          format: uuid
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMTOShipment'
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the MTO shipment.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/addresses/{addressID}':
    put:
      summary: updateMTOShipmentAddress
      description: |
        ### Functionality
        This endpoint is used to **update** the addresses on an MTO Shipment. The address details completely replace the original, except for the UUID.
        Therefore a complete address should be sent in the request.

        This endpoint **cannot create** an address.
        To create an address on an MTO shipment, the caller must use [updateMTOShipment](#operation/updateMTOShipment) as the parent shipment has to be updated with the appropriate link to the address.

        ### Errors
        The address must be associated with the mtoShipment passed in the url.
        In other words, it should be listed as pickupAddress, destinationAddress, secondaryPickupAddress or secondaryDeliveryAddress on the mtoShipment provided.
        If it is not, caller will receive a **Conflict** Error.

        The mtoShipment should be associated with an MTO that is available to prime.
        If the caller requests an update to an address, and the shipment is not on an available MTO, the caller will receive a **NotFound** Error.

      operationId: updateMTOShipmentAddress
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment associated with the address
          required: true
          format: uuid
          type: string
        - in: path
          name: addressID
          description: UUID of the address being updated
          required: true
          format: uuid
          type: string
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/Address'
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the address.
          schema:
            $ref: '#/definitions/Address'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/agents':
    post:
      summary: createMTOAgent
      description: |
        ### Functionality
        This endpoint is used to **create** and add agents for an existing MTO Shipment. Only the fields being modified need to be sent in the request body.

        ### Errors
        The agent must always have a name and at least one method of contact (either `email` or `phone`).

        The agent must be associated with the MTO shipment passed in the url.

        The shipment should be associated with an MTO that is available to the Pime.
        If the caller requests a new agent, and the shipment is not on an available MTO, the caller will receive a **NotFound** response.
      operationId: createMTOAgent
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment associated with the agent
          required: true
          format: uuid
          type: string
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/MTOAgent'
      responses:
        '200':
          description: Successfully added the agent.
          schema:
            $ref: '#/definitions/MTOAgent'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/agents/{agentID}':
    put:
      summary: updateMTOAgent
      description: |
        ### Functionality
        This endpoint is used to **update** the agents for an MTO Shipment. Only the fields being modified need to be sent in the request body.

        ### Errors:
        The agent must always have a name and at least one method of contact (either `email` or `phone`).

        The agent must be associated with the MTO shipment passed in the url.

        The shipment should be associated with an MTO that is available to the Prime.
        If the caller requests an update to an agent, and the shipment is not on an available MTO, the caller will receive a **NotFound** response.

      operationId: updateMTOAgent
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment associated with the agent
          required: true
          format: uuid
          type: string
        - in: path
          name: agentID
          description: UUID of the agent being updated
          required: true
          format: uuid
          type: string
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/MTOAgent'
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the agent.
          schema:
            $ref: '#/definitions/MTOAgent'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/status':
    patch:
      summary: updateMTOShipmentStatus
      description: |
        ### Functionality
        This endpoint should be used by the Prime to confirm the cancellation of a shipment. It allows the shipment
        status to be changed to "CANCELED." Currently, the Prime cannot update the shipment to any other status.
      operationId: updateMTOShipmentStatus
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mtoShipmentID
          description: UUID of the shipment associated with the agent
          required: true
          format: uuid
          type: string
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMTOShipmentStatus'
      responses:
        '200':
          description: Successfully updated the shipment's status.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-service-items':
    post:
      summary: createMTOServiceItem
      description: |
        Creates one or more MTOServiceItems. Not all service items may be created, please see details below.

        This endpoint supports different body definitions. In the modelType field below, select the modelType corresponding
         to the service item you wish to create and the documentation will update with the new definition.

        Upon creation these items are associated with a Move Task Order and an MTO Shipment.
        The request must include UUIDs for the MTO and MTO Shipment connected to this service item. Some service item types require
        additional service items to be autogenerated when added - all created service items, autogenerated included,
        will be returned in the response.

        To update a service item, please use [updateMTOServiceItem](#operation/updateMTOServiceItem) endpoint.

        ---

        **`MTOServiceItemOriginSIT`**

        MTOServiceItemOriginSIT is a subtype of MTOServiceItem.

        This model type describes a domestic origin SIT service item. Items can be created using this
        model type with the following codes:

        **DOFSIT**

        **1st day origin SIT service item**. When a DOFSIT is requested, the API will auto-create the following group of service items:
          * DOFSIT - Domestic origin 1st day SIT
          * DOASIT - Domestic origin Additional day SIT
          * DOPSIT - Domestic origin SIT pickup

        **DOASIT**

        **Addt'l days origin SIT service item**. This represents an additional day of storage for the same item.
        Additional DOASIT service items can be created and added to an existing shipment that **includes a DOFSIT service item**.

        ---

        **`MTOServiceItemDestSIT`**

        MTOServiceItemDestSIT is a subtype of MTOServiceItem.

        This model type describes a domestic destination SIT service item. Items can be created using this
        model type with the following codes:

        **DDFSIT**

        **1st day origin SIT service item**. The additional fields are required for creating a DDFSIT:
          * `firstAvailableDeliveryDate1`
            * string <date>
            * First available date that Prime can deliver SIT service item.
          * `firstAvailableDeliveryDate2`
            * string <date>
            * Second available date that Prime can deliver SIT service item.
          * `timeMilitary1`
            * string\d{4}Z
            * Time of delivery corresponding to `firstAvailableDeliveryDate1`, in military format.
          * `timeMilitary2`
            * string\d{4}Z
            * Time of delivery corresponding to `firstAvailableDeliveryDate2`, in military format.

        When a DDFSIT is requested, the API will auto-create the following group of service items:
          * DDFSIT - Domestic destination 1st day SIT
          * DDASIT - Domestic destination Additional day SIT
          * DDDSIT - Domestic destination SIT delivery

        **DDASIT**

        **Addt'l days destination SIT service item**. This represents an additional day of storage for the same item.
        Additional DDASIT service items can be created and added to an existing shipment that **includes a DDFSIT service item**.


      operationId: createMTOServiceItem
      tags:
        - mtoServiceItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/MTOServiceItem'
      responses:
        '200':
          description: Successfully created an MTO service item.
          schema:
            type: array
            items:
              $ref: '#/definitions/MTOServiceItem'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-service-items/{mtoServiceItemID}':
    patch:
      summary: updateMTOServiceItem
      description: |
        Updates MTOServiceItems after creation. Not all service items or fields may be updated, please see details below.

        This endpoint supports different body definitions. In the modelType field below, select the modelType corresponding
         to the service item you wish to update and the documentation will update with the new definition.

        To create a service item, please use [createMTOServiceItem](#operation/createMTOServiceItem)) endpoint.

        ### Errors

        Currently this is not implemented and will generated the NotImplemented error.
      operationId: updateMTOServiceItem
      tags:
        - mtoServiceItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema: # we use an update specific definition for the request
            $ref: '#/definitions/UpdateMTOServiceItem'
          required: true
        - in: path
          name: mtoServiceItemID
          type: string
          description: UUID of service item to update.
          required: true
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully updated the MTO service item.
          schema:
            $ref: '#/definitions/MTOServiceItem'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  /payment-requests:
    post:
      summary: createPaymentRequest
      description: |
        Creates a new instance of a paymentRequest.
        A newly created payment request is assigned the status `PENDING`.
        A move task order can have multiple payment requests, and
        a final payment request can be marked using boolean `isFinal`.
      operationId: createPaymentRequest
      tags:
        - paymentRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreatePaymentRequest'
      responses:
        '201':
          description: Successfully created a paymentRequest object.
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: Request payload is invalid.
          schema:
            $ref: '#/definitions/ClientError'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found.
          schema:
            $ref: '#/definitions/ClientError'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  /payment-requests/{paymentRequestID}/uploads:
    post:
      summary: createUpload
      description: |
        ### Functionality
        This endpoint **uploads** a Proof of Service document for a PaymentRequest.

        The PaymentRequest should already exist.

        PaymentRequests are created with the [createPaymentRequest](#operation/createPaymentRequest) endpoint.

      operationId: createUpload
      tags:
        - paymentRequest
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: paymentRequestID
          type: string
          description: UUID of payment request to use.
          required: true
        - in: formData
          name: file
          type: file
          description: The file to upload.
          required: true
      responses:
        '201':
          description: Successfully created upload of digital file.
          schema:
            $ref: '#/definitions/Upload'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
definitions:
  Address:
    description: A postal address.
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      streetAddress1:
        type: string
        example: 123 Main Ave
        title: Street address 1
      streetAddress2:
        type: string
        example: Apartment 9000
        x-nullable: true
        title: Street address 2
      streetAddress3:
        type: string
        example: Montmârtre
        x-nullable: true
        title: Address Line 3
      city:
        type: string
        example: Anytown
        title: City
      state:
        title: State
        type: string
        x-display-value:
          AL: AL
          AK: AK
          AR: AR
          AZ: AZ
          CA: CA
          CO: CO
          CT: CT
          DC: DC
          DE: DE
          FL: FL
          GA: GA
          HI: HI
          IA: IA
          ID: ID
          IL: IL
          IN: IN
          KS: KS
          KY: KY
          LA: LA
          MA: MA
          MD: MD
          ME: ME
          MI: MI
          MN: MN
          MO: MO
          MS: MS
          MT: MT
          NC: NC
          ND: ND
          NE: NE
          NH: NH
          NJ: NJ
          NM: NM
          NV: NV
          NY: NY
          OH: OH
          OK: OK
          OR: OR
          PA: PA
          RI: RI
          SC: SC
          SD: SD
          TN: TN
          TX: TX
          UT: UT
          VA: VA
          VT: VT
          WA: WA
          WI: WI
          WV: WV
          WY: WY
        enum:
          - AL
          - AK
          - AR
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MI
          - MN
          - MO
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VT
          - WA
          - WI
          - WV
          - WY
      postalCode:
        type: string
        format: zip
        title: ZIP
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
      country:
        type: string
        title: Country
        x-nullable: true
        example: 'USA'
        default: USA
      eTag:
        type: string
        readOnly: true
    required:
      - streetAddress1
      - city
      - state
      - postalCode
  ClientError:
    type: object
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
      - instance
  CreateMTOShipment:
    type: object
    properties:
      moveTaskOrderID:
        description: The ID of the move this new shipment is for.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      requestedPickupDate:
        description: >
          The customer's preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the
          pack date, are derived from this date.
        format: date
        type: string
      primeEstimatedWeight:
        description: >
          The estimated weight of this shipment, determined by the movers during the pre-move survey.
          This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made,
          the Prime contracter will need to contact the TOO to change it.
        type: integer
        example: 4500
      customerRemarks:
        description: |
          The customer can use the customer remarks field to inform the services counselor and the movers about any
          special circumstances for this shipment. Typical examples:
            * bulky or fragile items,
            * weapons,
            * access info for their address.

          Customer enters this information during onboarding. Optional field.
        type: string
        example: handle with care
        x-nullable: true
      agents:
        $ref: '#/definitions/MTOAgents'
      mtoServiceItems:
        description: A list of service items connected to this shipment.
        type: array
        items:
          $ref: '#/definitions/MTOServiceItem'
      pickupAddress:
        description: The address where the movers should pick up this shipment.
        allOf:
            - $ref: '#/definitions/Address'
      destinationAddress:
        description: Where the movers should deliver this shipment.
        allOf:
          - $ref: '#/definitions/Address'
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      diversion:
        description: >
          This value indicates whether or not this shipment is part of a diversion.
          If yes, the shipment can be either the starting or ending segment of the diversion.
        type: boolean
      pointOfContact:
        type: string
        description: >
          Email or ID of the person who will be contacted in the event of questions or concerns about this update.
          May be the person performing the update, or someone else working with the Prime contractor.
    required:
      - moveTaskOrderID
      - requestedPickupDate
      - pickupAddress
      - destinationAddress
      - shipmentType
  CreatePaymentRequest:
    type: object
    properties:
      isFinal:
        default: false
        type: boolean
      moveTaskOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      serviceItems:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/ServiceItem'
      pointOfContact:
        type: string
        description: Email or id of a contact person for this update.
    required:
      - moveTaskOrderID
      - serviceItems
  Customer:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      dodID:
        type: string
      userID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      currentAddress:
        $ref: '#/definitions/Address'
      firstName:
        type: string
        example: Vanya
      lastName:
        type: string
        example: Petrovna
      branch:
        type: string
        example: 'COAST_GUARD'
      phone:
        type: string
        format: telephone
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: fake@example.com
      eTag:
        type: string
        readOnly: true
  DimensionType:
    description: Describes a dimension type for a MTOServiceItemDimension.
    type: string
    enum:
      - ITEM
      - CRATE
  DutyStation:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Fort Bragg North Station
      addressID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      address:
        $ref: '#/definitions/Address'
      eTag:
        type: string
        readOnly: true
  Entitlements:
    properties:
      id:
        example: 571008b1-b0de-454d-b843-d71be9f02c04
        format: uuid
        type: string
      authorizedWeight:
        example: 2000
        type: integer
        x-formatting: weight
        x-nullable: true
      dependentsAuthorized:
        example: true
        type: boolean
        x-nullable: true
      nonTemporaryStorage:
        example: false
        type: boolean
        x-nullable: true
      privatelyOwnedVehicle:
        example: false
        type: boolean
        x-nullable: true
      proGearWeight:
        example: 2000
        type: integer
        x-formatting: weight
      proGearWeightSpouse:
        example: 500
        type: integer
        x-formatting: weight
      requiredMedicalEquipmentWeight:
        example: 500
        type: integer
        x-formatting: weight
      organizationalClothingAndIndividualEquipment:
        type: boolean
        example: false
      storageInTransit:
        example: 90
        type: integer
      totalWeight:
        example: 500
        type: integer
        x-formatting: weight
      totalDependents:
        example: 2
        type: integer
      eTag:
        type: string
        readOnly: true
    type: object
  Error:
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
    type: object
  ListMove:
    description: >
      An abbreviated definition for a move, without all the nested information (shipments, service items, etc). Used to
      fetch a list of moves more efficiently.
    type: object
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      moveCode:
        type: string
        example: 'HYXFJF'
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      orderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      referenceId:
        example: 1001-3456
        type: string
      availableToPrimeAt:
        format: date-time
        type: string
        x-nullable: true
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      ppmType:
        type: string
        enum:
          - FULL
          - PARTIAL
      ppmEstimatedWeight:
        type: integer
      eTag:
        type: string
        readOnly: true
  ListMoves:
    items:
      $ref: '#/definitions/ListMove'
    type: array
  MoveTaskOrder:
    type: object
    required:
      - mtoShipments
      - mtoServiceItems
      - paymentRequests
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      moveCode:
        type: string
        example: 'HYXFJF'
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      orderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      order:
        $ref: '#/definitions/Order'
      referenceId:
        example: 1001-3456
        type: string
      availableToPrimeAt:
        format: date-time
        type: string
        x-nullable: true
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      paymentRequests:
        $ref: '#/definitions/PaymentRequests'
      mtoServiceItems:
        type: array
        items:
          $ref: '#/definitions/MTOServiceItem'
      mtoShipments:
        $ref: '#/definitions/MTOShipments'
      ppmType:
        type: string
        enum:
          - FULL
          - PARTIAL
      ppmEstimatedWeight:
        type: integer
      eTag:
        type: string
        readOnly: true
  MoveTaskOrders:
    items:
      $ref: '#/definitions/MoveTaskOrder'
    type: array
  MTOAgent:
    properties:
      id:
        description: The ID of the agent.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        readOnly: true
        type: string
      mtoShipmentID:
        description: The ID of the shipment this agent is permitted to release/receive.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      firstName:
        type: string
        x-nullable: true
      lastName:
        type: string
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})?$'
        x-nullable: true
      phone:
        type: string
        format: telephone
        pattern: '^([2-9]\d{2}-\d{3}-\d{4})?$'
        x-nullable: true
      agentType:
        $ref: '#/definitions/MTOAgentType'
      eTag:
        type: string
        readOnly: true
    type: object
  MTOAgents:
    description: >
      A list of the agents for a shipment. Agents are the people who the Prime contractor recognize as permitted to
      release (in the case of pickup) or receive (on delivery) a shipment.
    items:
      $ref: '#/definitions/MTOAgent'
    type: array
    maxItems: 2
  MTOAgentType:
    title: Agent Type
    description: >
      The type for this agent. `RELEASING` means they have authority on pickup, `RECEIVING` means they can receive the
      shipment on delivery.
    type: string
    example: RELEASING_AGENT
    enum:
      - RELEASING_AGENT
      - RECEIVING_AGENT
  MTOServiceItem:
    description: MTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.
    type: object
    discriminator: modelType
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: The ID of the service item.
        readOnly: true
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: The ID of the move for this service item.
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: The ID of the shipment this service is for, if any. Optional.
      reServiceName:
        type: string
        readOnly: true
        description: The full descriptive name of the service.
      status:
        $ref: '#/definitions/MTOServiceItemStatus'
      rejectionReason:
        example: item was too heavy
        type: string
        x-nullable: true
        readOnly: true
        description: The reason why this service item was rejected by the TOO.
      modelType: # Base type and sub-types of MTOServiceItem
        $ref: '#/definitions/MTOServiceItemModelType'
      eTag:
        type: string
        readOnly: true
        description: A hash unique to this service item that should be used as the "If-Match" header for any updates.
    required:
      - modelType
      - moveTaskOrderID
  MTOServiceItemBasic: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a basic service item subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            $ref: '#/definitions/ReServiceCode'
        required:
          - reServiceCode
  MTOServiceItemDestSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic destination SIT service item. Subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DDFSIT # Domestic Destination First Day SIT
              - DDASIT # Domestic Destination Additional SIT
          timeMilitary1:
            type: string
            example: 1400Z
            description: Time of delivery corresponding to `firstAvailableDeliveryDate1`, in military format.
            pattern: '\d{4}Z'
            x-nullable: true
          firstAvailableDeliveryDate1:
            format: date
            type: string
            description: First available date that Prime can deliver SIT service item.
            x-nullable: true
          timeMilitary2:
            type: string
            example: 1400Z
            description: Time of delivery corresponding to `firstAvailableDeliveryDate2`, in military format.
            pattern: '\d{4}Z'
            x-nullable: true
          firstAvailableDeliveryDate2:
            format: date
            type: string
            description: Second available date that Prime can deliver SIT service item.
            x-nullable: true
          sitEntryDate:
            format: date
            type: string
            description: Entry date for the SIT
          sitDepartureDate:
            format: date
            type: string
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.
            x-nullable: true
          sitDestinationFinalAddress:
            $ref: '#/definitions/Address'
        required:
          - reServiceCode
          - sitEntryDate
  MTOServiceItemDimension:
    description: The dimensions for either the item or the crate associated with a crating service item.
    type: object
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      type:
        $ref: '#/definitions/DimensionType'
      length:
        description: Length in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      width:
        description: Width in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      height:
        description: Height in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
    required:
      - length
      - width
      - height
  MTOServiceItemDomesticCrating: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic crating/uncrating service item subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: A unique code for the service item. Indicates if the service is for crating (DCRT) or uncrating (DUCRT).
            enum:
              - DCRT # Domestic Crating
              - DCRTSA # Domestic Crating - Standalone
              - DUCRT # Domestic Uncrating
          item:
            description: The dimensions of the item being crated.
            allOf:
              - $ref: '#/definitions/MTOServiceItemDimension'
          crate:
            description: The dimensions for the crate the item will be shipped in.
            allOf:
              - $ref: '#/definitions/MTOServiceItemDimension'
          description:
            type: string
            example: Decorated horse head to be crated.
            description: A description of the item being crated.
          reason:
            type: string
            example: Storage items need to be picked up
            description: >
              The contractor's explanation for why an item needed to be crated or uncrated. Used by the TOO while
              deciding to approve or reject the service item.
            x-nullable: true
            x-omitempty: false
        required:
          - reServiceCode
          - item
          - crate
          - description
  MTOServiceItemModelType:
    description: |
      Describes all model sub-types for a MTOServiceItem model.

      Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.
        * DOFSIT, DOASIT - MTOServiceItemOriginSIT
        * DDFSIT, DDASIT - MTOServiceItemDestSIT
        * DOSHUT, DDSHUT - MTOServiceItemShuttle
        * DCRT, DCRTSA, DUCRT - MTOServiceItemDomesticCrating

      The documentation will then update with the supported fields.

    type: string
    enum:
      - MTOServiceItemBasic
      - MTOServiceItemOriginSIT
      - MTOServiceItemDestSIT
      - MTOServiceItemShuttle
      - MTOServiceItemDomesticCrating
  MTOServiceItemOriginSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic origin SIT service item. Subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DOFSIT # Domestic Origin First Day SIT
              - DOASIT # Domestic Origin Additional SIT
          reason:
            type: string
            example: Storage items need to be picked up
            description: Explanation of why Prime is picking up SIT item.
          sitPostalCode:
            type: string
            format: zip
            example: '90210'
            pattern: '^(\d{5}([\-]\d{4})?)$'
          sitEntryDate:
            format: date
            type: string
            description: Entry date for the SIT
          sitDepartureDate:
            format: date
            type: string
            x-nullable: true
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.
          sitHHGActualOrigin:
            $ref: '#/definitions/Address'
        required:
          - reServiceCode
          - reason
          - sitPostalCode
          - sitEntryDate
  MTOServiceItemShuttle: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a shuttle service item.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: >
              A unique code for the service item. Indicates if shuttling is requested for the shipment origin (`DOSHUT`)
              or destination (`DDSHUT`).
            enum:
              - DOSHUT # Domestic Origin Shuttle Service
              - DDSHUT # Domestic Destination Shuttle Service
          reason:
            type: string
            example: Storage items need to be picked up.
            description: >
              The contractor's explanation for why a shuttle service is requested. Used by the TOO while deciding to
              approve or reject the service item.
          description:
            type: string
            example: Things to be moved to the place by shuttle.
            description: Details about the shuttle service.
          estimatedWeight:
            type: integer
            example: 4200
            description: An estimate of how much weight from a shipment will be included in the shuttling service.
            x-nullable: true
            x-omitempty: false
          actualWeight:
            type: integer
            example: 4000
            description: A record of the actual weight that was shuttled. Provided by the movers, based on weight tickets.
            x-nullable: true
            x-omitempty: false
        required:
          - reason
          - reServiceCode
          - description
  MTOServiceItemStatus:
    description: The status of a service item, indicating where it is in the TOO's approval process.
    type: string
    readOnly: true
    enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
  MTOShipment:
    properties:
      id:
        description: The ID of the shipment.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      moveTaskOrderID:
        description: The ID of the move for this shipment.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      approvedDate:
        description: The date when the Transportation Ordering Officer first approved this shipment for the move.
        format: date
        type: string
        readOnly: true
        x-omitempty: false
        x-nullable: true
      requestedPickupDate:
        description: >
          The date the customer selects during onboarding as their preferred pickup date. Other dates, such as
          required delivery date and (outside MilMove) the pack date, are derived from this date.
        format: date
        type: string
        readOnly: true
        x-omitempty: false
        x-nullable: true
      scheduledPickupDate:
        description: The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.
        format: date
        type: string
        x-omitempty: false
        x-nullable: true
      actualPickupDate:
        description: The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.
        format: date
        type: string
        x-omitempty: false
        x-nullable: true
      firstAvailableDeliveryDate:
        description: >
          The date the Prime provides to the customer as the first possible delivery date so that they can plan their
          travel accordingly.
        format: date
        type: string
        x-omitempty: false
        x-nullable: true
      requiredDeliveryDate:
        description: >
          The latest date by which the Prime can deliver a customer's shipment without violating the contract. This is
          calculated based on weight, distance, and the scheduled pickup date. It cannot be modified.
        format: date
        type: string
        readOnly: true
        x-omitempty: false
        x-nullable: true
      primeEstimatedWeight:
        description: >
          The estimated weight of this shipment, determined by the movers during the pre-move survey.
          This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made,
          the Prime contracter will need to contact the TOO to change it.
        type: integer
        example: 4500
      primeEstimatedWeightRecordedDate:
        description: The date when the Prime contractor recorded the shipment's estimated weight.
        format: date
        type: string
        readOnly: true
        x-omitempty: false
        x-nullable: true
      primeActualWeight:
        description: The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.
        type: integer
        example: 4500
      customerRemarks:
        description: |
          The customer can use the customer remarks field to inform the services counselor and the movers about any
          special circumstances for this shipment. Typical examples:
            * bulky or fragile items,
            * weapons,
            * access info for their address.

          Customer enters this information during onboarding. Optional field.
        type: string
        example: handle with care
        x-nullable: true
        readOnly: true
      counselorRemarks:
        description: |
          The counselor can use the counselor remarks field to inform the movers about any
          special circumstances for this shipment. Typical examples:
            * bulky or fragile items,
            * weapons,
            * access info for their address.

          Counselors enters this information when creating or editing an MTO Shipment. Optional field.
        type: string
        example: handle with care
        x-nullable: true
        readOnly: true
      agents:
        $ref: '#/definitions/MTOAgents'
      mtoServiceItems:
        description: A list of service items connected to this shipment.
        items:
          $ref: '#/definitions/MTOServiceItem'
        type: array
        readOnly: true
      pickupAddress:
        description: >
          The address where the movers should pick up this shipment, entered by the customer during onboarding
          when they enter shipment details.
        allOf:
          - $ref: '#/definitions/Address'
      destinationAddress:
        description: |
          Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details
          during onboarding, if they know their new address already.

          May be blank when entered by the customer, required when entered by the Prime. May not represent the true
          final destination due to the shipment being diverted or placed in SIT.
        allOf:
            - $ref: '#/definitions/Address'
      secondaryPickupAddress:
        description: A second pickup address for this shipment, if the customer entered one. An optional field.
        allOf:
            - $ref: '#/definitions/Address'
      secondaryDeliveryAddress:
        description: A second delivery address for this shipment, if the customer entered one. An optional field.
        allOf:
          - $ref: '#/definitions/Address'
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      diversion:
        description: >
          This value indicates whether or not this shipment is part of a diversion.
          If yes, the shipment can be either the starting or ending segment of the diversion.
        type: boolean
      status:
        description: >
          The status of a shipment, indicating where it is in the TOO's approval process.
          Can only be updated by the contractor in special circumstances.
        type: string
        readOnly: true
        enum:
          - SUBMITTED
          - APPROVED
          - REJECTED
          - CANCELLATION_REQUESTED
          - CANCELED
          - DIVERSION_REQUESTED
      rejectionReason:
        description: The reason why this shipment was rejected by the TOO.
        type: string
        readOnly: true
        example: MTO Shipment not good enough
        x-nullable: true
      eTag:
        description: A hash unique to this shipment that should be used as the "If-Match" header for any updates.
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      pointOfContact:
        type: string
        description: >
          Email or ID of the person who will be contacted in the event of questions or concerns about this update.
          May be the person performing the update, or someone else working with the Prime contractor.
  MTOShipments:
    description: A list of shipments.
    items:
      $ref: '#/definitions/MTOShipment'
    type: array
  MTOShipmentType:
    title: Shipment Type
    description: |
      The type of shipment.
        * `HHG` = Household goods move
        * `NTS` = Non-temporary storage
        * `UB` = Unaccompanied baggage
    type: string
    example: HHG
    enum:
      - HHG
      - HHG_LONGHAUL_DOMESTIC
      - HHG_SHORTHAUL_DOMESTIC
      - HHG_INTO_NTS_DOMESTIC
      - HHG_OUTOF_NTS_DOMESTIC
      - INTERNATIONAL_HHG
      - INTERNATIONAL_UB
      - MOTORHOME
      - BOAT_HAUL_AWAY
      - BOAT_TOW_AWAY
    x-display-value:
      HHG: Household goods move (HHG)
      HHG_LONGHAUL_DOMESTIC: Domestic Longhaul HHG
      HHG_SHORTHAUL_DOMESTIC: Domestic Shorthaul HHG
      HHG_INTO_NTS_DOMESTIC: HHG into Non-temporary storage (NTS)
      HHG_OUTOF_NTS_DOMESTIC: HHG out of Non-temporary storage (NTS)
  Order:
    required:
      - orderNumber
      - rank
      - linesOfAccounting
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      customer:
        $ref: '#/definitions/Customer'
      customerID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      entitlement:
        $ref: '#/definitions/Entitlements'
      destinationDutyStation:
        $ref: '#/definitions/DutyStation'
      originDutyStation:
        $ref: '#/definitions/DutyStation'
      rank:
        type: string
        example: 'E_5'
      reportByDate:
        type: string
        format: date
      orderNumber:
        type: string
      linesOfAccounting:
        type: string
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentRequest:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      isFinal:
        default: false
        type: boolean
      moveTaskOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      paymentRequestNumber:
        example: '1234-5678-1'
        readOnly: true
        type: string
      proofOfServiceDocs:
        $ref: '#/definitions/ProofOfServiceDocs'
      paymentServiceItems:
        $ref: '#/definitions/PaymentServiceItems'
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentRequests:
    type: array
    items:
      $ref: '#/definitions/PaymentRequest'
  PaymentRequestStatus:
    enum:
      - PENDING
      - REVIEWED
      - REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED
      - SENT_TO_GEX
      - RECEIVED_BY_GEX
      - PAID
      - EDI_ERROR
    title: Payment Request Status
    type: string
  PaymentServiceItem:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      paymentRequestID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      mtoServiceItemID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      status:
        $ref: '#/definitions/PaymentServiceItemStatus'
      priceCents:
        type: integer
        format: cents
        title: Price of the service item in cents
        x-nullable: true
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      referenceID:
        example: 1234-5678-c56a4180
        readOnly: true
        format: string
      paymentServiceItemParams:
        $ref: '#/definitions/PaymentServiceItemParams'
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentServiceItemParam:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      paymentServiceItemID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      key:
        $ref: '#/definitions/ServiceItemParamName'
      value:
        example: '3025'
        type: string
      type:
        $ref: '#/definitions/ServiceItemParamType'
      origin:
        $ref: '#/definitions/ServiceItemParamOrigin'
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentServiceItemParams:
    type: array
    items:
      $ref: '#/definitions/PaymentServiceItemParam'
  PaymentServiceItems:
    type: array
    items:
      $ref: '#/definitions/PaymentServiceItem'
  PaymentServiceItemStatus:
    enum:
      - REQUESTED
      - APPROVED
      - DENIED
      - SENT_TO_GEX
      - PAID
      - EDI_ERROR
    title: Payment Service Item Status
    type: string
  ProofOfServiceDocs:
    properties:
      uploads:
        items:
          $ref: '#/definitions/Upload'
        type: array
    type: object
  ReServiceCode:
    type: string
    description: |
      This is the full list of service items that can be found on a shipment. Not all service items
      may be requested by the Prime, but may be returned in a response.

      Documentation of all the service items will be provided.
    enum:
      - CS
      - DBHF
      - DBTF
      - DCRT
      - DCRTSA
      - DDASIT
      - DDDSIT
      - DDFSIT
      - DDP
      - DDSHUT
      - DLH
      - DMHF
      - DNPKF
      - DOASIT
      - DOFSIT
      - DOP
      - DOPSIT
      - DOSHUT
      - DPK
      - DSH
      - DUCRT
      - DUPK
      - FSC
      - IBHF
      - IBTF
      - ICOLH
      - ICOUB
      - ICRT
      - ICRTSA
      - IDASIT
      - IDDSIT
      - IDFSIT
      - IDSHUT
      - IHPK
      - IHUPK
      - INPKF
      - IOASIT
      - IOCLH
      - IOCUB
      - IOFSIT
      - IOOLH
      - IOOUB
      - IOPSIT
      - IOSHUT
      - IUBPK
      - IUBUPK
      - IUCRT
      - MS
      - NSTH
      - NSTUB
  ServiceItem:
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      params:
        type: array
        readOnly: true
        items:
          properties:
            key:
              type: string
              example: Service Item Parameter Name
            value:
              type: string
              example: Service Item Parameter Value
          type: object
      eTag:
        type: string
        readOnly: true
    type: object
  ServiceItemParamName:
    type: string
    enum:
      - ActualPickupDate
      - ContractCode
      - ContractYearName
      - CubicFeetBilled
      - CubicFeetCrating
      - DistanceZip3
      - DistanceZip5
      - DistanceZipSITDest
      - DistanceZipSITOrigin
      - EIAFuelPrice
      - EscalationCompounded
      - FSCMultiplier
      - FSCPriceDifferenceInCents
      - FSCWeightBasedDistanceMultiplier
      - IsPeak
      - MarketDest
      - MarketOrigin
      - MTOAvailableToPrimeAt
      - NumberDaysSIT
      - PriceAreaDest
      - PriceAreaIntlDest
      - PriceAreaIntlOrigin
      - PriceAreaOrigin
      - PriceRateOrFactor
      - PSI_LinehaulDom
      - PSI_LinehaulDomPrice
      - PSI_LinehaulShort
      - PSI_LinehaulShortPrice
      - PSI_PackingDom
      - PSI_PackingDomPrice
      - PSI_PackingHHGIntl
      - PSI_PackingHHGIntlPrice
      - PSI_PriceDomDest
      - PSI_PriceDomDestPrice
      - PSI_PriceDomOrigin
      - PSI_PriceDomOriginPrice
      - PSI_ShippingLinehaulIntlCO
      - PSI_ShippingLinehaulIntlCOPrice
      - PSI_ShippingLinehaulIntlOC
      - PSI_ShippingLinehaulIntlOCPrice
      - PSI_ShippingLinehaulIntlOO
      - PSI_ShippingLinehaulIntlOOPrice
      - RateAreaNonStdDest
      - RateAreaNonStdOrigin
      - RequestedPickupDate
      - ServiceAreaDest
      - ServiceAreaOrigin
      - ServicesScheduleDest
      - ServicesScheduleOrigin
      - SITScheduleDest
      - SITScheduleOrigin
      - WeightActual
      - WeightBilledActual
      - WeightEstimated
      - ZipDestAddress
      - ZipPickupAddress
      - ZipSITDestHHGFinalAddress
      - ZipSITOriginHHGActualAddress
      - ZipSITOriginHHGOriginalAddress
  ServiceItemParamOrigin:
    type: string
    enum:
      - PRIME
      - SYSTEM
      - PRICER
  ServiceItemParamType:
    type: string
    enum:
      - STRING
      - DATE
      - INTEGER
      - DECIMAL
      - TIMESTAMP
      - PaymentServiceItemUUID
  UpdateMTOServiceItem:
    description: UpdateMTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.
    type: object
    discriminator: modelType
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the service item. Must match path.
      modelType: # Base type and sub-types of MTOServiceItem
        $ref: '#/definitions/UpdateMTOServiceItemModelType'
    required:
      - modelType
  UpdateMTOServiceItemModelType:
    description: |
      Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.
        * DDDSIT - UpdateMTOServiceItemSIT
        * DOPSIT - UpdateMTOServiceItemSIT
        * DDSHUT - UpdateMTOServiceItemShuttle
        * DOSHUT - UpdateMTOServiceItemShuttle

      The documentation will then update with the supported fields.
    type: string
    enum:
      - UpdateMTOServiceItemSIT
      - UpdateMTOServiceItemShuttle
  UpdateMTOServiceItemShuttle: # spectral oas2-unused-definition is OK here due to polymorphism
    description: |
      Subtype used to provide the estimated weight and actual weight for shuttle. This is not creating a new service item but rather updating an existing service item.
    allOf:
      - $ref: '#/definitions/UpdateMTOServiceItem'
      - type: object
        properties:
          actualWeight:
            type: integer
            example: 4000
            description: Provided by the movers, based on weight tickets. Relevant for shuttling (DDSHUT & DOSHUT) service items.
            x-nullable: true
            x-omitempty: false
          estimatedWeight:
            type: integer
            example: 4200
            description: An estimate of how much weight from a shipment will be included in a shuttling (DDSHUT & DOSHUT) service item.
            x-nullable: true
            x-omitempty: false
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DDSHUT # Domestic Destination Shuttle
              - DOSHUT # Domestic Origin Shuttle
  UpdateMTOServiceItemSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: |
      Subtype used to provide the departure date for origin or destination SIT. This is not creating a new service item but rather updating an existing service item.
    allOf:
      - $ref: '#/definitions/UpdateMTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DDDSIT # Domestic Destination SIT Delivery
              - DOPSIT # Domestic Origin SIT Pickup
          sitDepartureDate:
            format: date
            type: string
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination.
          sitDestinationFinalAddress:
            $ref: '#/definitions/Address'
  UpdateMTOShipment:
    properties:
      scheduledPickupDate:
        description: The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.
        format: date
        type: string
        x-omitempty: false
        x-nullable: true
      actualPickupDate:
        description: The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.
        format: date
        type: string
        x-omitempty: false
        x-nullable: true
      firstAvailableDeliveryDate:
        description: >
          The date the Prime provides to the customer as the first possible delivery date so that they can plan their
          travel accordingly.
        format: date
        type: string
        x-omitempty: false
        x-nullable: true
      primeEstimatedWeight:
        description: >
          The estimated weight of this shipment, determined by the movers during the pre-move survey.
          This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made,
          the Prime contracter will need to contact the TOO to change it.
        type: integer
        example: 4500
      primeActualWeight:
        description: The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.
        type: integer
        example: 4500
      pickupAddress:
        description: >
          The address where the movers should pick up this shipment, entered by the customer during onboarding
          when they enter shipment details.
        allOf:
          - $ref: '#/definitions/Address'
      destinationAddress:
        description: |
          Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details
          during onboarding, if they know their new address already.

          May be blank when entered by the customer, required when entered by the Prime. May not represent the true
          final destination due to the shipment being diverted or placed in SIT.
        allOf:
          - $ref: '#/definitions/Address'
      secondaryPickupAddress:
        description: A second pickup address for this shipment, if the customer entered one. An optional field.
        allOf:
          - $ref: '#/definitions/Address'
      secondaryDeliveryAddress:
        description: A second delivery address for this shipment, if the customer entered one. An optional field.
        allOf:
          - $ref: '#/definitions/Address'
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      diversion:
        description: >
          This value indicates whether or not this shipment is part of a diversion.
          If yes, the shipment can be either the starting or ending segment of the diversion.
        type: boolean
      pointOfContact:
        type: string
        description: >
          Email or ID of the person who will be contacted in the event of questions or concerns about this update.
          May be the person performing the update, or someone else working with the Prime contractor.
  UpdateMTOShipmentStatus:
    description: Contains the statuses available to the Prime when updating the state of a shipment.
    type: object
    properties:
      status:
        type: string
        enum:
          - CANCELED
  Upload:
    type: object
    properties:
      bytes:
        type: integer
      contentType:
        type: string
        format: mime-type
        example: application/pdf
      filename:
        example: filename.pdf
        type: string
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
    required:
      - filename
      - contentType
      - bytes
  ValidationError:
    allOf:
      - $ref: '#/definitions/ClientError'
      - type: object
    properties:
      invalidFields:
        type: object
        additionalProperties:
          description: List of errors for the field
          type: array
          items:
            type: string
    required:
      - invalidFields
responses:
  InvalidRequest:
    description: The request payload is invalid.
    schema:
      $ref: '#/definitions/ClientError'
  NotFound:
    description: The requested resource wasn't found.
    schema:
      $ref: '#/definitions/ClientError'
  Conflict:
    description: 'The request could not be processed because of conflict in the current state of the resource.'
    schema:
      $ref: '#/definitions/ClientError'
  PermissionDenied:
    description: The request was denied.
    schema:
      $ref: '#/definitions/ClientError'
  ServerError:
    description: A server error occurred.
    schema:
      $ref: '#/definitions/Error'
  NotImplemented:
    description: The requested feature is still in development.
    schema:
      $ref: '#/definitions/Error'
  PreconditionFailed:
    description: Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.
    schema:
      $ref: '#/definitions/ClientError'
  UnprocessableEntity:
    description: The payload was unprocessable.
    schema:
      $ref: '#/definitions/ValidationError'
