swagger: '2.0'
info:
  contact:
    email: dp3@truss.works
  description: |
    The Milmove Support API gives you programmatic access to support functionality useful for testing and debug.

    This API is not available in production.

    All endpoints are located at `primelocal/support/v1/`.
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  title: Milmove Support API
  version: 0.0.1
basePath: /support/v1
schemes:
  - http
tags:
  - name: moveTaskOrder
  - name: paymentRequest
  - name: mtoServiceItem
  - name: mtoShipment
  - name: webhook
paths:
  '/move-task-orders':
    get:
      summary: listMTOs
      description: |
        ### Functionality
        This endpoint lists all MoveTaskOrders regardless of whether or not they have been made available to Prime.

        It will provide nested information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.

      operationId: listMTOs
      tags:
        - moveTaskOrder
      produces:
        - application/json
      parameters:
        - in: query
          name: since
          type: integer
          format: timestamp
          description: Only return move task orders updated since this time.
      responses:
        '200':
          description: Successfully retrieved all move task orders.
          schema:
            $ref: '#/definitions/MoveTaskOrders'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
    post:
      summary: createMoveTaskOrder
      description: |
        Creates an instance of moveTaskOrder.
        Currently this will also create a number of nested objects but not all.
        It will currently create
        * MoveTaskOrder
        * Order
        * Customer
        * User
        * Entitlement

        It will not create addresses, duty stations, shipments, payment requests or service items. It requires an existing contractor ID, destination duty station ID,
        origin duty station ID, and an uploaded orders ID to be passed into the request.

        This is a support endpoint and will not be available in production.
      operationId: createMoveTaskOrder
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - moveTaskOrder
      parameters:
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/MoveTaskOrder'
      responses:
        '201':
          description: Successfully created MoveTaskOrder object.
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/move-task-orders/{moveTaskOrderID}':
    parameters:
      - description: UUID of move task order to use.
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    get:
      summary: getMoveTaskOrder
      description: |
        ### Functionality
        This endpoint gets an individual MoveTaskOrder by ID.

        It will provide nested information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.

        This is a support endpoint and is not available in production.
      operationId: getMoveTaskOrder
      tags:
        - moveTaskOrder
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieve an individual move task order.
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/move-task-orders/{moveTaskOrderID}/available-to-prime':
    parameters:
      - description: UUID of move task order.
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    patch:
      summary: makeMoveTaskOrderAvailable
      description: |
        Updates move task order `availableToPrimeAt` to make it available to prime. No request body required. <br />
        <br />
        This is a support endpoint and will not be available in production.
      operationId: makeMoveTaskOrderAvailable
      tags:
        - moveTaskOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      responses:
        '200':
          description: Successfully made MTO available to Prime.
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/move-task-orders/hide':
    parameters: []
    patch:
      summary: hideNonFakeMoveTaskOrders
      description: |
        Updates move task order without fake user data `show` to false. No request body required. <br />
        <br />
        This is a support endpoint and will not be available in production.
      operationId: hideNonFakeMoveTaskOrders
      tags:
        - moveTaskOrder
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successfully hid MTOs.
          schema:
            $ref: '#/definitions/MTOHideMovesResponse'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  /move-task-orders/{moveTaskOrderID}/payment-requests:
    get:
      summary: listMTOPaymentRequests
      description: |
        ### Functionality

        This endpoint lists all PaymentRequests associated with a given MoveTaskOrder.

        This is a support endpoint and is not available in production.

      operationId: listMTOPaymentRequests
      tags:
        - paymentRequest
      produces:
        - application/json
      parameters:
        - description: Only return move task orders updated since this time.
          format: uuid
          in: path
          name: moveTaskOrderID
          required: true
          type: string
      responses:
        '200':
          description: Successfully retrieved payment requests associated with a given move task order
          schema:
            $ref: '#/definitions/PaymentRequests'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/payment-requests/{paymentRequestID}/status':
    parameters:
      - description: UUID of payment request.
        format: uuid
        in: path
        name: paymentRequestID
        required: true
        type: string
    patch:
      summary: updatePaymentRequestStatus
      description: |
        Updates status of a payment request to REVIEWED, SENT_TO_GEX, RECEIVED_BY_GEX, REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED, or PAID.

        A status of REVIEWED can optionally have a `rejectionReason`.

        This is a support endpoint and is not available in production.
      operationId: updatePaymentRequestStatus
      tags:
        - paymentRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePaymentRequestStatus'
      responses:
        '200':
          description: Successfully updated payment request status.
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-service-items/{mtoServiceItemID}/status':
    parameters:
      - description: UUID of mto service item to use.
        in: path
        name: mtoServiceItemID
        required: true
        type: string
    patch:
      summary: updateMTOServiceItemStatus
      description: |
        Updates the status of a service item for a move to APPROVED or REJECTED. <br />
        <br />
        This is a support endpoint and will not be available in production.
      operationId: updateMTOServiceItemStatus
      tags:
        - mtoServiceItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMTOServiceItemStatus'
      responses:
        '200':
          description: Successfully updated service item status for a move task order.
          schema:
            $ref: '#/definitions/MTOServiceItem'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentID}/status':
    parameters:
      - description: UUID of the shipment being updated.
        in: path
        name: mtoShipmentID
        required: true
        format: uuid
        type: string
    patch:
      summary: updateMTOShipmentStatus
      description: >
        Updates a shipment's status to APPROVED or REJECTED for the purpose of testing the Prime API. If APPROVED,
        `rejectionReason` should be blank and any value passed through the body will be ignored. If REJECTED, a value in
        `rejectionReason` is required. <br />
        <br />
        This is a support endpoint and will not be available in production.
      operationId: updateMTOShipmentStatus
      tags:
        - mtoShipment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMTOShipmentStatus'
      responses:
        '200':
          description: Successfully updated the shipment's status.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/webhook-notifications':
    post:
      summary: Test endpoint for creating webhook notifications
      description: >
        This endpoint creates a webhook notification in the database.
        If the webhook client is running, it may send the notification soon after creation.
      operationId: createWebhookNotification
      tags:
        - webhook
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: The notification sent by webhook-client.
          schema:
            $ref: '#/definitions/WebhookNotification'
      responses:
        '201':
          description: Successful creation
          schema:
            $ref: '#/definitions/WebhookNotification'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/webhook-notify':
    post:
      summary: Test endpoint for receiving messages from our own webhook-client
      description: >
        This endpoint receives a notification that matches the webhook notification model.
        This is a test endpoint that represents a receiving server. In production, the Prime will set up a receiving endpoint.
        In testing, this server accepts notifications at this endpoint and simply responds with success and logs them.
        The `webhook-client` is responsible for retrieving messages from the webhook_notifications table and
        sending them to the Prime (this endpoint in our testing case) via an mTLS connection.
      operationId: receiveWebhookNotification
      tags:
        - webhook
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          required: true
          name: body
          description: The webhook notification being sent
          schema:
            $ref: '#/definitions/WebhookNotification'
      responses:
        '200':
          description: Received notification
          schema:
            $ref: '#/definitions/WebhookNotification'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '500':
          $ref: '#/responses/ServerError'
  '/payment-requests/{paymentRequestID}/edi':
    parameters:
      - description: UUID of the payment request for which EDI should be generated.
        format: uuid
        in: path
        name: paymentRequestID
        required: true
        type: string
    get:
      summary: getPaymentRequestEDI
      description: |
        Returns the EDI (Electronic Data Interchange) message for the payment request identified
        by the given payment request ID. Note that the EDI returned in the JSON payload will have \n where there
        would normally be line breaks (due to JSON not allowing line breaks in a string).

        This is a support endpoint and will not be available in production.
      operationId: getPaymentRequestEDI
      tags:
        - paymentRequest
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved payment requests associated with a given move task order
          schema:
            $ref: '#/definitions/PaymentRequestEDI'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/payment-requests/process-reviewed':
    patch:
      summary: processReviewedPaymentRequests
      description: |
        Updates the status of reviewed payment requests and sends PRs to Syncada if
        the SendToSyncada flag is set

        This is a support endpoint and will not be available in production.
      operationId: processReviewedPaymentRequests
      tags:
        - paymentRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProcessReviewedPaymentRequests'
      responses:
        '200':
          description: Successfully updated status of reviewed payment request and sent to Syncada if that flag is set
          schema:
            $ref: '#/definitions/PaymentRequests'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
definitions:
  Address:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      streetAddress1:
        type: string
        example: 123 Main Ave
        title: Street address 1
      streetAddress2:
        type: string
        example: Apartment 9000
        x-nullable: true
        title: Street address 2
      streetAddress3:
        type: string
        example: Montmârtre
        x-nullable: true
        title: Address Line 3
      city:
        type: string
        example: Anytown
        title: City
      eTag:
        type: string
        readOnly: true
      state:
        title: State
        type: string
        x-display-value:
          AL: AL
          AK: AK
          AR: AR
          AZ: AZ
          CA: CA
          CO: CO
          CT: CT
          DC: DC
          DE: DE
          FL: FL
          GA: GA
          HI: HI
          IA: IA
          ID: ID
          IL: IL
          IN: IN
          KS: KS
          KY: KY
          LA: LA
          MA: MA
          MD: MD
          ME: ME
          MI: MI
          MN: MN
          MO: MO
          MS: MS
          MT: MT
          NC: NC
          ND: ND
          NE: NE
          NH: NH
          NJ: NJ
          NM: NM
          NV: NV
          NY: NY
          OH: OH
          OK: OK
          OR: OR
          PA: PA
          RI: RI
          SC: SC
          SD: SD
          TN: TN
          TX: TX
          UT: UT
          VA: VA
          VT: VT
          WA: WA
          WI: WI
          WV: WV
          WY: WY
        enum:
          - AL
          - AK
          - AR
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MI
          - MN
          - MO
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VT
          - WA
          - WI
          - WV
          - WY
      postalCode:
        type: string
        format: zip
        title: ZIP
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
      country:
        type: string
        title: Country
        x-nullable: true
        example: 'USA'
        default: USA
    required:
      - streetAddress1
      - city
      - state
      - postalCode
  ClientError:
    type: object
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
      - instance
  Customer:
    type: object
    properties:
      agency:
        type: string
        title: Agency customer is affilated with
      firstName:
        type: string
        example: Vanya
      lastName:
        type: string
        example: Petrovna
      phone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        x-nullable: true
      currentAddress:
        $ref: '#/definitions/Address'
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        readOnly: true
      dodID:
        type: string
      userID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      rank:
        $ref: '#/definitions/Rank'
      eTag:
        type: string
        readOnly: true
    required:
      - firstName
      - lastName
      - dodID
      - rank
      - agency
  DeptIndicator:
    type: string
    x-nullable: true
    title: Dept. indicator
    enum:
      - NAVY_AND_MARINES
      - ARMY
      - AIR_FORCE
      - COAST_GUARD
    x-display-value:
      NAVY_AND_MARINES: 17 Navy and Marine Corps
      ARMY: 21 Army
      AIR_FORCE: 57 Air Force
      COAST_GUARD: 70 Coast Guard
  DimensionType:
    description: Describes a dimension type for a MTOServiceItemDimension.
    type: string
    enum:
      - ITEM
      - CRATE
  Document:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      serviceMemberID:
        type: string
        format: uuid
        title: The service member this document belongs to
      uploads:
        type: array
        items:
          $ref: '#/definitions/Upload'
    required:
      - id
      - serviceMemberID
      - uploads
  DutyStation:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Fort Bragg North Station
  Entitlement:
    properties:
      id:
        example: 571008b1-b0de-454d-b843-d71be9f02c04
        format: uuid
        type: string
      authorizedWeight:
        example: 2000
        type: integer
        x-formatting: weight
        x-nullable: true
      dependentsAuthorized:
        example: true
        type: boolean
        x-nullable: true
      nonTemporaryStorage:
        example: false
        type: boolean
        x-nullable: true
      privatelyOwnedVehicle:
        example: false
        type: boolean
        x-nullable: true
      proGearWeight:
        example: 2000
        type: integer
        x-formatting: weight
        readOnly: true
      proGearWeightSpouse:
        example: 500
        type: integer
        x-formatting: weight
        readOnly: true
      storageInTransit:
        example: 90
        type: integer
      totalWeight:
        example: 500
        type: integer
        x-formatting: weight
      totalDependents:
        example: 2
        type: integer
      eTag:
        type: string
        readOnly: true
    type: object
  Error:
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
    type: object
  MoveStatus:
    type: string
    description: Current status of this MoveTaskOrder
    enum:
      - DRAFT
      - SUBMITTED
      - APPROVED
      - CANCELED
    x-display-value:
      DRAFT: Draft
      SUBMITTED: Submitted
      APPROVED: Approved
      CANCELED: Canceled
  MoveTaskOrder:
    type: object
    required:
      - order
      - contractorID
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
        description: ID of the MoveTaskOrder object.
      createdAt:
        format: date-time
        type: string
        readOnly: true
        description: Date the MoveTaskOrder was created on.
      orderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
        description: ID of the Order object
      order:
        $ref: '#/definitions/Order'
      referenceId:
        example: 1001-3456
        type: string
        readOnly: true
        description: |
          Unique ID associated with this Order.

          No two MoveTaskOrders may have the same ID.
          Attempting to create a MoveTaskOrder may fail if this referenceId has been used already.
      availableToPrimeAt:
        format: date-time
        type: string
        x-nullable: true
        description: |
          Indicates this MoveTaskOrder is available for Prime API handling.

          In production, only MoveTaskOrders for which this is set will be available to the API.
      isCanceled:
        type: boolean
        x-nullable: true
        readOnly: true
        description: Indicated this MoveTaskOrder has been canceled.
      contractorID:
        type: string
        format: uuid
        description: |
          ID associated with the contractor, in this case Prime
        example: 5db13bb4-6d29-4bdb-bc81-262f4513ecf6
      updatedAt:
        format: date-time
        type: string
        readOnly: true
        description: Date on which this MoveTaskOrder was last updated.
      paymentRequests:
        $ref: '#/definitions/PaymentRequests'
      mtoServiceItems:
        description: Array of MTOServiceItems associated with this MoveTaskOrder.
        type: array
        items:
          $ref: '#/definitions/MTOServiceItem'
      mtoShipments:
        $ref: '#/definitions/MTOShipments'
      selectedMoveType:
        $ref: '#/definitions/SelectedMoveType'
      ppmType:
        description: If the move is a PPM, indicates whether it is full or partial.
        type: string
        enum:
          - FULL
          - PARTIAL
      ppmEstimatedWeight:
        description: If the move is a PPM, this is the estimated weight in lbs.
        type: integer
      eTag:
        description: |
          Uniquely identifies the state of the MoveTaskOrder object (but not the nested objects)

          It will change everytime the object is updated. Client should store the value.
          Updates to this MoveTaskOrder will require that this eTag be passed in with the If-Match header.
        type: string
        readOnly: true
      status:
        $ref: '#/definitions/MoveStatus'
      moveCode:
        description: Unique 6-character code the customer can use to refer to their move
        type: string
        example: ABC123
        readOnly: true
  MoveTaskOrders:
    items:
      $ref: '#/definitions/MoveTaskOrder'
    type: array
  MTOAgent:
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        readOnly: true
        type: string
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      firstName:
        type: string
        x-nullable: true
      lastName:
        type: string
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})?$'
        x-nullable: true
      phone:
        type: string
        format: telephone
        pattern: '^([2-9]\d{2}-\d{3}-\d{4})?$'
        x-nullable: true
      agentType:
        $ref: '#/definitions/MTOAgentType'
      eTag:
        type: string
        readOnly: true
    type: object
  MTOAgents:
    items:
      $ref: '#/definitions/MTOAgent'
    type: array
    maxItems: 2
  MTOAgentType:
    type: string
    title: MTO Agent Type
    example: RELEASING_AGENT
    enum:
      - RELEASING_AGENT
      - RECEIVING_AGENT
  MTOHideMove:
    description: describes the MTO ID and a description reason why the move was hidden.
    type: object
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the associated moveTaskOrder
      hideReason:
        example: invalid name
        type: string
        x-nullable: true
        description: Reason the move was selected to be hidden
  MTOHideMovesResponse:
    description: describes the moves that were hidden that contained non-approved fake data to use in the MilMove system.
    type: object
    properties:
      numberMovesHidden:
        type: integer
        description: Number of moves that were hidden
      moves:
        description: Array of moves that were hidden.
        type: array
        items:
          $ref: '#/definitions/MTOHideMove'
  MTOServiceItem:
    description: MTOServiceItem describes a base type of a service item. Polymorphic type. Both Move Task Orders and MTO Shipments will have MTO Service Items.
    type: object
    discriminator: modelType
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the service item
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the associated moveTaskOrder
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        description: ID of the associated mtoShipment
      reServiceName:
        type: string
        readOnly: true
        description: Full descriptive name of the service
      status:
        $ref: '#/definitions/MTOServiceItemStatus'
      rejectionReason:
        example: item was too heavy
        type: string
        x-nullable: true
        description: Reason the service item was rejected by the TOO
      modelType: # Base type and sub-types of MTOServiceItem
        $ref: '#/definitions/MTOServiceItemModelType'
      eTag:
        type: string
        readOnly: true
        description: ETag identifier required to update this object
    required:
      - modelType
      - moveTaskOrderID
  MTOServiceItemBasic: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a basic service item subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            $ref: '#/definitions/ReServiceCode'
        required:
          - reServiceCode
  MTOServiceItemDestSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic destination SIT service item. Subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DDFSIT # Domestic Destination First Day SIT
              - DDASIT # Domestic Destination Additional SIT
          timeMilitary1:
            type: string
            example: 1400Z
            description: Time of delivery corresponding to `firstAvailableDeliveryDate1`, in military format.
            pattern: '\d{4}Z'
          firstAvailableDeliveryDate1:
            format: date
            type: string
            description: First available date that Prime can deliver SIT service item.
          timeMilitary2:
            type: string
            example: 1400Z
            description: Time of delivery corresponding to `firstAvailableDeliveryDate2`, in military format.
            pattern: '\d{4}Z'
          firstAvailableDeliveryDate2:
            format: date
            type: string
            description: Second available date that Prime can deliver SIT service item.
          sitEntryDate:
            format: date
            type: string
            description: Entry date for the SIT
          sitDepartureDate:
            format: date
            type: string
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.
            x-nullable: true
        required:
          - reServiceCode
          - timeMilitary1
          - firstAvailableDeliveryDate1
          - timeMilitary2
          - firstAvailableDeliveryDate2
          - sitEntryDate
  MTOServiceItemDimension:
    description: Describes a dimension object for the MTOServiceItem.
    type: object
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      type:
        $ref: '#/definitions/DimensionType'
      length:
        description: Length in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      width:
        description: Width in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      height:
        description: Height in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
    required:
      - length
      - width
      - height
  MTOServiceItemDomesticCrating: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic crating/uncrating service item subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service codes allowed for this model type.
            enum:
              - DCRT # Domestic Crating
              - DCRTSA # Domestic Crating - Standalone
              - DUCRT # Domestic Uncrating
          item:
            $ref: '#/definitions/MTOServiceItemDimension'
          crate:
            $ref: '#/definitions/MTOServiceItemDimension'
          description:
            type: string
            example: Decorated horse head to be crated.
        required:
          - reServiceCode
          - item
          - crate
          - description
  MTOServiceItemModelType:
    description: |
      Describes all model sub-types for a MTOServiceItem model.

      Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.
        * DOFSIT, DOASIT - MTOServiceItemOriginSIT
        * DDFSIT, DDASIT - MTOServiceItemDestSIT
        * DOSHUT, DDSHUT - MTOServiceItemShuttle
        * DCRT, DCRTSA, DUCRT - MTOServiceItemDomesticCrating

      The documentation will then update with the supported fields.

    type: string
    enum:
      - MTOServiceItemBasic
      - MTOServiceItemOriginSIT
      - MTOServiceItemDestSIT
      - MTOServiceItemShuttle
      - MTOServiceItemDomesticCrating
  MTOServiceItemOriginSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a domestic origin SIT service item. Subtype of a MTOServiceItem.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service code allowed for this model type.
            enum:
              - DOFSIT # Domestic Origin First Day SIT
              - DOASIT # Domestic Origin Additional SIT
          reason:
            type: string
            example: Storage items need to be picked up
            description: Explanation of why Prime is picking up SIT item.
          sitPostalCode:
            type: string
            format: zip
            example: '90210'
            pattern: '^(\d{5}([\-]\d{4})?)$'
          sitEntryDate:
            format: date
            type: string
            description: Entry date for the SIT
          sitDepartureDate:
            format: date
            type: string
            x-nullable: true
            description: Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.
        required:
          - reServiceCode
          - reason
          - sitPostalCode
          - sitEntryDate
  MTOServiceItemShuttle: # spectral oas2-unused-definition is OK here due to polymorphism
    description: Describes a shuttle service item.
    allOf:
      - $ref: '#/definitions/MTOServiceItem'
      - type: object
        properties:
          reServiceCode:
            type: string
            description: Service codes allowed for this model type.
            enum:
              - DOSHUT # Domestic Origin Shuttle Service
              - DDSHUT # Domestic Destination Shuttle Service
          reason:
            type: string
            example: Storage items need to be picked up.
            description: Explanation of why a shuttle service is required.
          description:
            type: string
            example: Things to be moved to the place by shuttle.
            description: Further details about the shuttle service.
        required:
          - reason
          - reServiceCode
          - description
  MTOServiceItemStatus:
    description: Describes all statuses for a MTOServiceItem.
    type: string
    enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
  MTOShipment:
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      approvedDate:
        description: date when the shipment was given the status "APPROVED"
        format: date
        type: string
        readOnly: true
      scheduledPickupDate:
        format: date
        type: string
      requestedPickupDate:
        format: date
        type: string
        readOnly: true
      firstAvailableDeliveryDate:
        format: date
        type: string
      primeActualWeight:
        type: integer
        example: 4500
      primeEstimatedWeight:
        type: integer
        example: 4500
      primeEstimatedWeightRecordedDate:
        format: date
        type: string
        readOnly: true
      actualPickupDate:
        format: date
        type: string
      requiredDeliveryDate:
        format: date
        type: string
        readOnly: true
      agents:
        $ref: '#/definitions/MTOAgents'
      mtoServiceItems:
        items:
          $ref: '#/definitions/MTOServiceItem'
        type: array
      customerRemarks:
        type: string
        readOnly: true
        example: handle with care
        x-nullable: true
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      pickupAddress:
        $ref: '#/definitions/Address'
      destinationAddress:
        $ref: '#/definitions/Address'
      secondaryPickupAddress:
        $ref: '#/definitions/Address'
      secondaryDeliveryAddress:
        $ref: '#/definitions/Address'
      eTag:
        type: string
        readOnly: true
      status:
        type: string
        readOnly: true
        enum:
          - APPROVED
          - SUBMITTED
          - REJECTED
      rejectionReason:
        type: string
        readOnly: true
        example: MTO Shipment not good enough
        x-nullable: true
      pointOfContact:
        type: string
        description: Email or id of a contact person for this update.
  MTOShipments:
    items:
      $ref: '#/definitions/MTOShipment'
    type: array
  MTOShipmentType:
    type: string
    title: Shipment Type
    example: HHG
    enum:
      - HHG
      - INTERNATIONAL_HHG
      - INTERNATIONAL_UB
    x-display-value:
      HHG: HHG
      INTERNATIONAL_HHG: International HHG
      INTERNATIONAL_UB: International UB
  Order:
    properties:
      id:
        description: ID of the Order object.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      customer:
        $ref: '#/definitions/Customer'
      customerID:
        description: |
          ID of the Customer this Order belongs to.

          If creating a MoveTaskOrder. either an existing customerID should be provided or the nested customer object should be populated for creation.
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
        x-nullable: true
      entitlement:
        $ref: '#/definitions/Entitlement'
      destinationDutyStation:
        $ref: '#/definitions/DutyStation'
      destinationDutyStationID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
        description: |
          ID of the destination duty station.

          If creating a MoveTaskOrder, this should match an existing duty station.
      ordersType:
        $ref: '#/definitions/OrdersType'
      ordersTypeDetail:
        $ref: '#/definitions/OrdersTypeDetail'
      originDutyStation:
        $ref: '#/definitions/DutyStation'
      originDutyStationID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
        description: |
          ID of the origin duty station.

          If creating a MoveTaskOrder, this should match an existing duty station.
      rank:
        $ref: '#/definitions/Rank'
      reportByDate:
        description: Date that the service member must report to the new DutyStation by.
        type: string
        format: date
      status:
        $ref: '#/definitions/OrdersStatus'
      tac:
        type: string
        title: TAC
        example: 'F8J1'
      departmentIndicator:
        $ref: '#/definitions/DeptIndicator'
      uploadedOrders:
        $ref: '#/definitions/Document'
      uploadedOrdersID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
        description: ID of the uploaded document.
      orderNumber:
        description: ID of the military orders associated with this move.
        type: string
        x-nullable: true
        example: '030-00362'
      issueDate:
        description: The date the orders were issued.
        type: string
        format: date
      eTag:
        description: |
          Uniquely identifies the state of the Order object (but not the nested objects)

          It will change everytime the object is updated. Client should store the value.
          Updates to this Order will require that this eTag be passed in with the If-Match header.
        type: string
        readOnly: true
    type: object
    required:
      - orderNumber
      - ordersType
      - ordersTypeDetail
      - rank
      - reportByDate
      - issueDate
      - status
      - uploadedOrdersID
      - tac
      - originDutyStationID
      - destinationDutyStationID
      - departmentIndicator
  OrdersStatus:
    type: string
    title: Move status
    enum:
      - DRAFT
      - SUBMITTED
      - APPROVED
      - CANCELED
    x-display-value:
      DRAFT: Draft
      SUBMITTED: Submitted
      APPROVED: Approved
      CANCELED: Canceled
  OrdersType:
    type: string
    title: Orders type
    enum:
      - PERMANENT_CHANGE_OF_STATION
      - RETIREMENT
      - SEPARATION
      - GHC
      - NTS
    x-display-value:
      PERMANENT_CHANGE_OF_STATION: Permanent Change Of Station (PCS)
      RETIREMENT: Retirement
      SEPARATION: Separation
      GHC: GHC
      NTS: NTS
  OrdersTypeDetail:
    type: string
    title: Orders type detail
    enum:
      - HHG_PERMITTED
      - PCS_TDY
      - HHG_RESTRICTED_PROHIBITED
      - HHG_RESTRICTED_AREA
      - INSTRUCTION_20_WEEKS
      - HHG_PROHIBITED_20_WEEKS
      - DELAYED_APPROVAL
    x-display-value:
      HHG_PERMITTED: Shipment of HHG Permitted
      PCS_TDY: PCS with TDY Enroute
      HHG_RESTRICTED_PROHIBITED: Shipment of HHG Restricted or Prohibited
      HHG_RESTRICTED_AREA: HHG Restricted Area-HHG Prohibited
      INSTRUCTION_20_WEEKS: Course of Instruction 20 Weeks or More
      HHG_PROHIBITED_20_WEEKS: Shipment of HHG Prohibited but Authorized within 20 weeks
      DELAYED_APPROVAL: Delayed Approval 20 Weeks or More
    x-nullable: true
  PaymentRequest:
    properties:
      documentPackage:
        $ref: '#/definitions/ProofOfServicePackage'
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      isFinal:
        default: false
        type: boolean
      moveTaskOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      paymentRequestNumber:
        example: 1234-5678-1
        readOnly: true
        type: string
      eTag:
        type: string
        readOnly: true
    type: object
  PaymentRequestEDI:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
        readOnly: true
      edi:
        type: string
        readOnly: true
    type: object
  PaymentRequests:
    items:
      $ref: '#/definitions/PaymentRequest'
    type: array
  PaymentRequestStatus:
    enum:
      - PENDING
      - REVIEWED
      - REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED
      - SENT_TO_GEX
      - RECEIVED_BY_GEX
      - PAID
    title: Payment Request Status
    type: string
  ProcessReviewedPaymentRequests:
    type: object
    properties:
      paymentRequestID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      sendToSyncada:
        example: true
        type: boolean
        x-nullable: true
      readFromSyncada:
        example: true
        type: boolean
        x-nullable: true
      deleteFromSyncada:
        example: true
        type: boolean
        x-nullable: true
    required:
      - sendToSyncada
      - readFromSyncada
      - deleteFromSyncada
  ProofOfServicePackage:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      uploads:
        items:
          $ref: '#/definitions/Upload'
        type: array
    type: object
  Rank:
    description: Rank of the service member, must match specific list of available ranks.
    type: string
    enum:
      - E_1
      - E_2
      - E_3
      - E_4
      - E_5
      - E_6
      - E_7
      - E_8
      - E_9
      - O_1_ACADEMY_GRADUATE
      - O_2
      - O_3
      - O_4
      - O_5
      - O_6
      - O_7
      - O_8
      - O_9
      - O_10
      - W_1
      - W_2
      - W_3
      - W_4
      - W_5
      - AVIATION_CADET
      - CIVILIAN_EMPLOYEE
      - ACADEMY_CADET
      - MIDSHIPMAN
  ReServiceCode:
    type: string
    description: |
      This is the full list of service items that can be found on a shipment. Not all service items
      may be requested by the Prime, but may be returned in a response.

      Documentation of all the service items will be provided.
    enum:
      - CS
      - DBHF
      - DBTF
      - DCRT
      - DCRTSA
      - DDASIT
      - DDDSIT
      - DDFSIT
      - DDP
      - DDSHUT
      - DLH
      - DMHF
      - DNPKF
      - DOASIT
      - DOFSIT
      - DOP
      - DOPSIT
      - DOSHUT
      - DPK
      - DSH
      - DUCRT
      - DUPK
      - FSC
      - IBHF
      - IBTF
      - ICOLH
      - ICOUB
      - ICRT
      - ICRTSA
      - IDASIT
      - IDDSIT
      - IDFSIT
      - IDSHUT
      - IHPK
      - IHUPK
      - INPKF
      - IOASIT
      - IOCLH
      - IOCUB
      - IOFSIT
      - IOOLH
      - IOOUB
      - IOPSIT
      - IOSHUT
      - IUBPK
      - IUBUPK
      - IUCRT
      - MS
      - NSTH
      - NSTUB
  SelectedMoveType:
    type: string
    title: Selected Move Type
    enum:
      - HHG
      - PPM
      - UB
      - POV
      - HHG_INTO_NTS_DOMESTIC
      - HHG_OUTOF_NTS_DOMESTIC
      - HHG_PPM
    x-nullable: true
  UpdateMTOServiceItemStatus:
    properties:
      status:
        $ref: '#/definitions/MTOServiceItemStatus'
      rejectionReason:
        example: item was too heavy
        type: string
        x-nullable: true
        description: Reason the service item was rejected by the TOO""
  UpdateMTOShipmentStatus:
    properties:
      status:
        type: string
        enum:
          - REJECTED
          - APPROVED
          - SUBMITTED
          - CANCELLATION_REQUESTED
      rejectionReason:
        type: string
        example: MTO Shipment not good enough
        x-nullable: true
  UpdatePaymentRequestStatus:
    properties:
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
        description: A written reason to provide context for the status.
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      eTag:
        type: string
        readOnly: true
        description: Attribute of the payment request object that automatically changes when the request is updated. This matches the value passed in the header for `If-Match`. Required when sending PUT or PATCH requests to prevent updating stale data.
    type: object
  Upload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      url:
        type: string
        format: uri
        example: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
      filename:
        type: string
        example: filename.pdf
      contentType:
        type: string
        format: mime-type
        example: application/pdf
      bytes:
        type: integer
      status:
        type: string
        enum:
          - INFECTED
          - CLEAN
          - PROCESSING
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
    required:
      - id
      - url
      - filename
      - contentType
      - bytes
  ValidationError:
    allOf:
      - $ref: '#/definitions/ClientError'
      - type: object
    properties:
      invalidFields:
        type: object
        additionalProperties:
          description: List of errors for the field
          type: array
          items:
            type: string
    required:
      - invalidFields
  WebhookNotification:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        readOnly: true
      eventKey:
        type: string
        description: Name of event triggered
        example: 'PaymentRequest.Update'
      createdAt:
        type: string
        format: date-time
        description: Time representing when the event was triggered
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        description: Time representing when the notification was last updated
        readOnly: true
      firstAttemptedAt:
        type: string
        format: date-time
        description: Time representing when the system firstAttempted to send this notification
        readOnly: true
        x-nullable: true
      traceID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        readOnly: true
      moveTaskOrderID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      objectID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      object:
        type: string
        format: JSON
        x-nullable: true
      status:
        $ref: '#/definitions/WebhookNotificationStatus'
  WebhookNotificationStatus:
    description: Statuses available for a Webhook Notification
    type: string
    enum:
      - PENDING
      - SENT
      - SKIPPED
      - FAILING
      - FAILED
responses:
  InvalidRequest:
    description: The request payload is invalid.
    schema:
      $ref: '#/definitions/ClientError'
  NotFound:
    description: The requested resource wasn't found.
    schema:
      $ref: '#/definitions/ClientError'
  PermissionDenied:
    description: The request was denied.
    schema:
      $ref: '#/definitions/ClientError'
  ServerError:
    description: A server error occurred.
    schema:
      $ref: '#/definitions/Error'
  UnprocessableEntity:
    description: The payload was unprocessable.
    schema:
      $ref: '#/definitions/ValidationError'
  PreconditionFailed:
    description: Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.
    schema:
      $ref: '#/definitions/ClientError'
  Conflict:
    description: There was a conflict with the request.
    schema:
      $ref: '#/definitions/ClientError'
