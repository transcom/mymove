swagger: '2.0'
info:
  contact:
    email: dp3@truss.works
  description: The API for move.mil
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  title: move.mil API
  version: 0.0.1
basePath: /ghc/v1
schemes:
  - http
paths:
  '/customer':
    get:
      tags:
        - Customer
      operationId: getAllCustomerMoves
      description: Gets all customers
      summary: Gets all customers
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved information on all customer
          schema:
            $ref: '#/definitions/CustomerMoveItems'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
  '/customer/{customerID}':
    parameters:
      - description: ID of customer to use
        in: path
        name: customerID
        required: true
        type: string
        format: uuid
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved information on an individual customer
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - Customer
      description: Returns a given customer
      operationId: getCustomerInfo
      summary: Returns a given customer
  /move-task-orders:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all move task orders
          schema:
            $ref: '#/definitions/MoveTaskOrders'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Gets all move orders
      operationId: listMoveTaskOrders
      summary: Gets all move orders
  '/move-task-orders/{moveTaskOrderID}':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully deleted move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Deletes a move order by ID
      operationId: deleteMoveTaskOrder
      summary: Deletes a move order by ID
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Gets a move order
      operationId: getMoveTaskOrder
      summary: Gets a move order by ID
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MoveTaskOrder'
      responses:
        '200':
          description: Successfully retrieved move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Updates a move order by ID
      operationId: updateMoveTaskOrder
      summary: Updates a move order by ID
  '/move_task_orders/{moveTaskOrderID}/service_items':
    parameters:
      - description: ID of move order for service item to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all line items for a move task order
          schema:
            $ref: '#/definitions/ServiceItems'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - serviceItem
      description: Gets all line items for a move orders
      operationId: listServiceItems
      summary: Gets all line items for a move order
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '201':
          description: Successfully created service item for move task order
          schema:
            $ref: '#/definitions/ServiceItem'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - serviceItem
      description: Creates a service item for a move order by id
      operationId: createServiceItem
      summary: Creates a service item for a move order by id
  '/move-task-orders/{moveTaskOrderID}/service-items/{serviceItemID}':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
      - description: ID of line item to use
        in: path
        name: serviceItemID
        required: true
        type: string
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully deleted move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - serviceItem
      description: Deletes a line item by ID for a move order by ID
      operationId: deleteServiceItem
      summary: Deletes a line item by ID for a move order by ID
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved a line item for a move task order by ID
          schema:
            $ref: '#/definitions/ServiceItem'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - serviceItem
      description: Gets a line item by ID for a move order by ID
      operationId: getServiceItem
      summary: Gets a line item by ID for a move order by ID
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceItem'
      responses:
        '200':
          description: Successfully updated move task order status
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - serviceItem
      description: Updates a service item by ID for a move order by ID
      operationId: updateServiceItem
      summary: Updates a service item by ID for a move order by ID
  '/move-task-orders/{moveTaskOrderID}/service-items/{serviceItemID}/status':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
      - description: ID of line item to use
        in: path
        name: serviceItemID
        required: true
        type: string
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceItemStatus'
      responses:
        '200':
          description: >-
            Successfully updated status for a line item for a move task order by
            ID
          schema:
            $ref: '#/definitions/ServiceItem'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - serviceItem
      description: Changes the status of a line item for a move order by ID
      operationId: updateServiceItemStatus
      summary: Change the status of a line item for a move order by ID
  '/move-task-orders/{moveTaskOrderID}/status':
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ID of move order to use
          in: path
          name: moveTaskOrderID
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MoveTaskOrderStatus'
      responses:
        '200':
          description: Successfully updated move task order status
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Changes move order status
      operationId: updateMoveTaskOrderStatus
      summary: Change the status of a move order
  '/move-task-orders/{moveTaskOrderID}/entitlements':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      tags:
        - moveTaskOrder
      responses:
        '200':
          description: Successfully retrieved entitlements
          schema:
            $ref: '#/definitions/Entitlements'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      description: Gets entitlements
      operationId: getEntitlements
      summary: Gets entitlements for a move order by ID
  /payment-requests:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: fetched list of payment requests
          schema:
            type: object
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request was denied
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The request was denied
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/definitions/Error'
      tags:
        - paymentRequests
        - prime
        - gov
      description: Gets a list of payment requests
      operationId: listPaymentRequests
      summary: Gets payment requests
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreatePaymentRequestPayload'
      responses:
        '201':
          description: created instance of payment request
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentRequests
        - prime
      description: Creates a payment request
      operationId: createPaymentRequest
      summary: Creates a payment request
  '/payment-requests/{paymentRequestID}':
    parameters:
      - description: UUID of payment request
        format: uuid
        in: path
        name: paymentRequestID
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: fetched instance of payment request
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentRequests
        - prime
        - gov
      description: Fetches an instance of a payment request by id
      operationId: getPaymentRequest
      summary: Fetches a payment request by id
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePaymentRequestPayload'
      responses:
        '200':
          description: updated payment request
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentRequests
        - prime
      description: Updates a payment request by id
      operationId: updatePaymentRequest
      summary: Updates a payment request by id
  '/payment-requests/{paymentRequestID}/status':
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: UUID of payment request
          format: uuid
          in: path
          name: paymentRequestID
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePaymentRequestStatusPayload'
      responses:
        '200':
          description: updated payment request
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentRequests
        - gov
      description: Updates status of a payment request by id
      operationId: updatePaymentRequestStatus
      summary: Updates status of a payment request by id
definitions:
  Address:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      street_address_1:
        type: string
        example: 123 Main Ave
        title: Street address 1
      street_address_2:
        type: string
        example: Apartment 9000
        x-nullable: true
        title: Street address 2
      street_address_3:
        type: string
        example: Montmârtre
        x-nullable: true
        title: Address Line 3
      city:
        type: string
        example: Anytown
        title: City
      state:
        title: State
        type: string
        x-display-value:
          AL: AL
          AK: AK
          AR: AR
          AZ: AZ
          CA: CA
          CO: CO
          CT: CT
          DC: DC
          DE: DE
          FL: FL
          GA: GA
          HI: HI
          IA: IA
          ID: ID
          IL: IL
          IN: IN
          KS: KS
          KY: KY
          LA: LA
          MA: MA
          MD: MD
          ME: ME
          MI: MI
          MN: MN
          MO: MO
          MS: MS
          MT: MT
          NC: NC
          ND: ND
          NE: NE
          NH: NH
          NJ: NJ
          NM: NM
          NV: NV
          NY: NY
          OH: OH
          OK: OK
          OR: OR
          PA: PA
          RI: RI
          SC: SC
          SD: SD
          TN: TN
          TX: TX
          UT: UT
          VA: VA
          VT: VT
          WA: WA
          WI: WI
          WV: WV
          WY: WY
        enum:
          - AL
          - AK
          - AR
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MI
          - MN
          - MO
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VT
          - WA
          - WI
          - WV
          - WY
      postal_code:
        type: string
        format: zip
        title: ZIP
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
      country:
        type: string
        title: Country
        x-nullable: true
        example: 'USA'
        default: USA
    required:
      - street_address_1
      - city
      - state
      - postal_code
  CreatePaymentRequestPayload:
    properties:
      isFinal:
        default: false
        type: boolean
      moveOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      proofOfServicePackage:
        $ref: '#/definitions/ProofOfServicePackage'
      serviceItemIDs:
        items:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        type: array
    type: object
  CustomerMoveItem:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      reference_id:
        type: string
        x-nullable: true
        example: 1234-5678
      customer_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      created_at:
        type: string
        format: datetime
        example: 2018-04-12T23:20:50.52Z
        description: when the access code was created
      customer_name:
        type: string
        example: Mickey Mouse
        x-nullable: true
        title: Customer Name
      branch_of_service:
        type: string
        example: Agency
        x-nullable:
        title: Branch of service / Agency
      confirmation_number:
        type: string
        example: '12432'
      origin_duty_station_name:
        type: string
        example: Fort Knox
        title: Origin Duty Station Name
        x-nullable: true
  CustomerMoveItems:
    type: array
    items:
      $ref: '#/definitions/CustomerMoveItem'
  Customer:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      customer_name:
        type: string
        example: George Washington
        x-nullable: true
        title: Customer Name
      agency:
        type: string
        example: Some Agency
        x-nullable: true
        title: Agency
      grade:
        type: string
        example: Some Grade
        x-nullable: true
        title: Grade
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Email Address
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Best Contact Phone
      origin_duty_station:
        type: string
        example: Dover AFB
        title: Origin
        x-nullable: true
      destination_duty_station:
        type: string
        example: Dover AFB
        title: Destination
        x-nullable: true
      pickup_address:
        $ref: '#/definitions/Address'
  Entitlements:
    properties:
      id:
        example: 571008b1-b0de-454d-b843-d71be9f02c04
        format: uuid
        type: string
      dependentsAuthorized:
        example: true
        type: boolean
      nonTemporaryStorage:
        example: false
        type: boolean
        x-nullable: true
      privatelyOwnedVehicle:
        example: false
        type: boolean
        x-nullable: true
      proGearWeight:
        example: 2000
        type: integer
        x-formatting: weight
      proGearWeightSpouse:
        example: 500
        type: integer
        x-formatting: weight
      storageInTransit:
        example: 90
        type: integer
      totalDependents:
        example: 2
        type: integer
      totalWeightSelf:
        example: 18000
        type: integer
        x-formatting: weight
    type: object
  Error:
    properties:
      message:
        type: string
    required:
      - message
    type: object
  MoveTaskOrder:
    properties:
      code:
        example: USMC-0001
        type: string
      createdAt:
        format: date
        type: string
      customerId:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      deletedAt:
        format: date
        type: string
      destinationAddress:
        $ref: '#/definitions/Address'
      destinationDutyStation:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      destinationPPSO:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      entitlements:
        $ref: '#/definitions/Entitlements'
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      moveDate:
        format: date
        type: string
      moveID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      moveTaskOrdersType:
        enum:
          - NON_TEMPORARY_STORAGE
          - PRIME
        type: string
      originDutyStation:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      originPPSO:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      pickupAddress:
        $ref: '#/definitions/Address'
      remarks:
        example: Requires more gentle care
        type: string
      requestedPickupDate:
        format: date
        type: string
      serviceItems:
        items:
          $ref: '#/definitions/ServiceItem'
        type: array
      status:
        enum:
          - APPROVED
          - REJECTED
          - DRAFT
        type: string
      updatedAt:
        format: date
        type: string
    type: object
  MoveTaskOrderStatus:
    properties:
      status:
        enum:
          - APPROVED
          - DRAFT
          - REJECTED
        type: string
    type: object
  MoveTaskOrders:
    items:
      $ref: '#/definitions/MoveTaskOrder'
    type: array
  PaymentRequest:
    properties:
      documentPackage:
        $ref: '#/definitions/ProofOfServicePackage'
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      isFinal:
        default: false
        type: boolean
      moveOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      serviceItemIDs:
        items:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        type: array
      status:
        $ref: '#/definitions/PaymentRequestStatus'
    type: object
  PaymentRequestStatus:
    enum:
      - PAYMENT_SUBMITTED
      - APPROVED
      - REJECTED
    title: Payment Request Status
    type: string
  ProofOfServicePackage:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      uploads:
        items:
          $ref: '#/definitions/Upload'
        type: array
    type: object
  ServiceItem:
    properties:
      MoveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      approvedAt:
        format: date
        type: string
      createdAt:
        format: date
        type: string
      deletedAt:
        format: date
        type: string
      description:
        type: string
      feeType:
        enum:
          - COUNSELING
          - CRATING
          - TRUCKING
          - SHUTTLE
        type: string
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      quantity:
        type: integer
      rate:
        type: integer
      rejectedAt:
        format: date
        type: string
      status:
        enum:
          - APPROVED
          - SUBMITTED
          - REJECTED
        type: string
      submittedAt:
        format: date
        type: string
      total:
        format: cents
        type: integer
      updatedAt:
        format: date
        type: string
    required:
      - id
    type: object
  ServiceItems:
    type: array
    items:
      $ref: '#/definitions/ServiceItem'
  ServiceItemStatus:
    properties:
      status:
        enum:
          - APPROVED
          - SUBMITTED
          - REJECTED
        type: string
    type: object
  UpdatePaymentRequestPayload:
    properties:
      proofOfServicePackage:
        $ref: '#/definitions/ProofOfServicePackage'
      serviceItemIDs:
        items:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        type: array
    type: object
  UpdatePaymentRequestStatusPayload:
    properties:
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      status:
        $ref: '#/definitions/PaymentRequestStatus'
    type: object
  Upload:
    properties:
      bytes:
        type: integer
      contentType:
        example: application/pdf
        format: mime-type
        type: string
      createdAt:
        format: date-time
        type: string
      filename:
        example: filename.pdf
        format: binary
        type: string
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      updatedAt:
        format: date-time
        type: string
      url:
        example: 'https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538'
        format: uri
        type: string
    required:
      - id
      - url
      - filename
      - contentType
      - bytes
      - createdAt
      - updatedAt
    type: object
responses:
  InvalidRequest:
    description: The request payload is invalid
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: The requested resource wasn't found
    schema:
      $ref: '#/definitions/Error'
  PermissionDenied:
    description: The request was denied
    schema:
      $ref: '#/definitions/Error'
  ServerError:
    description: A server error occurred
    schema:
      $ref: '#/definitions/Error'
