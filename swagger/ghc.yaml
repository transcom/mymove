swagger: '2.0'
info:
  contact:
    email: dp3@truss.works
  description: The API for move.mil
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  title: move.mil API
  version: 0.0.1
basePath: /ghc/v1
schemes:
  - http
tags:
  - name: queues
  - name: move
  - name: order
  - name: moveTaskOrder
  - name: customer
  - name: mtoServiceItem
  - name: mtoShipment
  - name: mtoAgent
  - name: paymentServiceItem
  - name: tac
paths:
  '/customer/{customerID}':
    parameters:
      - description: ID of customer to use
        in: path
        name: customerID
        required: true
        type: string
        format: uuid
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved information on an individual customer
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - customer
      description: Returns a given customer
      operationId: getCustomer
      summary: Returns a given customer
  '/move/{locator}':
    parameters:
      - description: Code used to identify a move in the system
        in: path
        name: locator
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved the individual move
          schema:
            $ref: '#/definitions/Move'
        '400':
          description: The locator provided is invalid
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - move
      description: Returns a given move for a unique alphanumeric locator string
      summary: Returns a given move
      operationId: getMove
  '/move-orders/{orderID}':
    parameters:
      - description: ID of order to use
        in: path
        name: orderID
        required: true
        type: string
        format: uuid
    patch:
      summary: Updates an order
      description: All fields sent in this request will be set on the order referenced
      operationId: updateMoveOrder
      tags:
        - order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMoveOrderPayload'
        - in: header
          name: If-Match
          type: string
          required: true
      responses:
        '200':
          description: updated instance of orders
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was unauthenticated
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was unauthorized
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '412':
          description: Precondition failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '500':
          description: internal server error
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved order
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - order
      description: Gets an order
      operationId: getOrder
      summary: Gets an order by ID
  '/move-orders/{orderID}/move-task-orders':
    parameters:
      - description: ID of order to use
        in: path
        name: orderID
        required: true
        type: string
        format: uuid
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all move task orders associated with an order
          schema:
            $ref: '#/definitions/MoveTaskOrders'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - order
      description: Gets move task orders associated with an order
      operationId: listMoveTaskOrders
      summary: Gets move task orders associated with an order
  '/move-task-orders/{moveTaskOrderID}':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully deleted move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Deletes a move order by ID
      operationId: deleteMoveTaskOrder
      summary: Deletes a move order by ID
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Gets a move order
      operationId: getMoveTaskOrder
      summary: Gets a move order by ID
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        - in: header
          name: If-Match
          type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '412':
          description: Precondition failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Updates a move order by ID
      operationId: updateMoveTaskOrder
      summary: Updates a move order by ID
  '/move_task_orders/{moveTaskOrderID}/mto_service_items':
    parameters:
      - description: ID of move order for mto service item to use
        in: path
        name: moveTaskOrderID
        required: true
        format: uuid
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all line items for a move task order
          schema:
            $ref: '#/definitions/MTOServiceItems'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoServiceItem
      description: Gets all line items for a move orders
      operationId: listMTOServiceItems
      summary: Gets all line items for a move order
  '/move_task_orders/{moveTaskOrderID}/mto_shipments':
    parameters:
      - description: ID of move task order for mto shipment to use
        in: path
        name: moveTaskOrderID
        required: true
        format: uuid
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all mto shipments for a move task order
          schema:
            $ref: '#/definitions/MTOShipments'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoShipment
      description: Gets all shipments for a move task order
      operationId: listMTOShipments
      summary: Gets all shipments for a move task order
  '/move_task_orders/{moveTaskOrderID}/mto_shipments/{shipmentID}/status':
    parameters:
      - description: ID of move task order for mto shipment to use
        in: path
        name: moveTaskOrderID
        required: true
        format: uuid
        type: string
      - description: ID of the shipment
        in: path
        name: shipmentID
        required: true
        format: uuid
        type: string
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PatchMTOShipmentStatus'
        - in: header
          name: If-Match
          type: string
          required: true
      responses:
        '200':
          description: Successfully updated shipment
          schema:
            $ref: '#/definitions/MTOShipment'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '409':
          description: Conflict error
          schema:
            $ref: '#/responses/Conflict'
        '412':
          description: Precondition failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoShipment
      description: Updates a shipment's status
      operationId: patchMTOShipmentStatus
      summary: Updates a shipment's status
  '/move_task_orders/{moveTaskOrderID}/mto_shipments/{shipmentID}/mto-agents':
    parameters:
      - description: ID of move task order
        in: path
        name: moveTaskOrderID
        required: true
        format: uuid
        type: string
      - description: ID of the shipment
        in: path
        name: shipmentID
        required: true
        format: uuid
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all agents for a move task order
          schema:
            $ref: '#/definitions/MTOAgents'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoAgent
      description: Fetches a list of agents associated with a move task order.
      operationId: fetchMTOAgentList
      summary: Fetch move task order agents.
  '/move-task-orders/{moveTaskOrderID}/service-items/{mtoServiceItemID}':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
      - description: ID of line item to use
        in: path
        name: mtoServiceItemID
        required: true
        type: string
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully deleted move task order
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoServiceItem
      description: Deletes a line item by ID for a move order by ID
      operationId: deleteMTOServiceItem
      summary: Deletes a line item by ID for a move order by ID
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved a line item for a move task order by ID
          schema:
            $ref: '#/definitions/MTOServiceItem'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoServiceItem
      description: Gets a line item by ID for a move order by ID
      operationId: getMTOServiceItem
      summary: Gets a line item by ID for a move order by ID
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MTOServiceItem'
        - in: header
          name: If-Match
          type: string
          required: true
      responses:
        '200':
          description: Successfully updated move task order status
          schema:
            $ref: '#/definitions/MoveTaskOrder'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '412':
          description: Precondition failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoServiceItem
      description: Updates a service item by ID for a move order by ID
      operationId: updateMTOServiceItem
      summary: Updates a service item by ID for a move order by ID
  '/move-task-orders/{moveTaskOrderID}/service-items/{mtoServiceItemID}/status':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
      - description: ID of line item to use
        in: path
        name: mtoServiceItemID
        required: true
        type: string
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PatchMTOServiceItemStatusPayload'
        - in: header
          name: If-Match
          type: string
          required: true
      responses:
        '200':
          description: >-
            Successfully updated status for a line item for a move task order by
            ID
          schema:
            $ref: '#/definitions/MTOServiceItem'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - mtoServiceItem
      description: Changes the status of a line item for a move order by ID
      operationId: updateMTOServiceItemStatus
      summary: Change the status of a line item for a move order by ID
  '/move-task-orders/{moveTaskOrderID}/status':
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ID of move order to use
          in: path
          name: moveTaskOrderID
          required: true
          type: string
        - in: header
          name: If-Match
          type: string
          required: true
        - in: body
          name: serviceItemCodes
          schema:
            $ref: '#/definitions/MTOApprovalServiceItemCodes'
          required: true
      responses:
        '200':
          description: Successfully updated move task order status
          schema:
            $ref: '#/definitions/Move'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '409':
          description: Conflict error
          schema:
            $ref: '#/responses/Conflict'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - moveTaskOrder
      description: Changes move task order status to make it available to prime
      operationId: updateMoveTaskOrderStatus
      summary: Change the status of a move task order to make it available to prime
  '/move-task-orders/{moveTaskOrderID}/payment-service-items/{paymentServiceItemID}/status':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
      - description: ID of payment service item to use
        in: path
        name: paymentServiceItemID
        required: true
        type: string
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentServiceItem'
        - in: header
          name: If-Match
          type: string
          required: true
      responses:
        '200':
          description: >-
            Successfully updated status for a line item for a move task order by
            ID
          schema:
            $ref: '#/definitions/PaymentServiceItem'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentServiceItem
      description: Changes the status of a line item for a move order by ID
      operationId: updatePaymentServiceItemStatus
      summary: Change the status of a payment service item for a move order by ID
  '/move-task-orders/{moveTaskOrderID}/entitlements':
    parameters:
      - description: ID of move order to use
        in: path
        name: moveTaskOrderID
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      tags:
        - moveTaskOrder
      responses:
        '200':
          description: Successfully retrieved entitlements
          schema:
            $ref: '#/definitions/Entitlements'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      description: Gets entitlements
      operationId: getEntitlements
      summary: Gets entitlements for a move order by ID
  '/payment-requests/{paymentRequestID}':
    parameters:
      - description: UUID of payment request
        format: uuid
        in: path
        name: paymentRequestID
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: fetched instance of payment request
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentRequests
      description: Fetches an instance of a payment request by id
      operationId: getPaymentRequest
      summary: Fetches a payment request by id
  '/moves/{locator}/payment-requests':
    parameters:
      - description: move code to identify a move for payment requests
        format: string
        in: path
        name: locator
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all line items for a move task order
          schema:
            $ref: '#/definitions/PaymentRequests'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentRequests
      description: Fetches payment requests for a move
      operationId: getPaymentRequestsForMove
      summary: Fetches payment requests using the move code (locator).
  '/payment-requests/{paymentRequestID}/status':
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: UUID of payment request
          format: uuid
          in: path
          name: paymentRequestID
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePaymentRequestStatusPayload'
        - in: header
          name: If-Match
          type: string
          required: true
      responses:
        '200':
          description: updated payment request
          schema:
            $ref: '#/definitions/PaymentRequest'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
      tags:
        - paymentRequests
      description: Updates status of a payment request by id
      operationId: updatePaymentRequestStatus
      summary: Updates status of a payment request by id
  /documents/{documentId}:
    get:
      summary: Returns a document
      description: Returns a document and its uploads
      operationId: getDocument
      tags:
        - ghcDocuments
      parameters:
        - in: path
          name: documentId
          type: string
          format: uuid
          required: true
          description: UUID of the document to return
      responses:
        200:
          description: the requested document
          schema:
            $ref: '#/definitions/DocumentPayload'
        '400':
          description: The request payload is invalid
          schema:
            $ref: '#/responses/InvalidRequest'
        '401':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '404':
          description: The requested resource wasn't found
          schema:
            $ref: '#/responses/NotFound'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/responses/PreconditionFailed'
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
  /queues/moves:
    get:
      produces:
        - application/json
      summary: Gets queued list of all customer moves by GBLOC origin
      description: >
        An office TOO user will be assigned a transportation office that will determine which moves are displayed in their queue based on the origin duty station.  GHC moves will show up here onced they have reached the submitted status sent by the customer and have move task orders, shipments, and service items to approve.
      operationId: getMovesQueue
      tags:
        - queues
      parameters:
        - in: query
          name: page
          type: integer
          description: requested page of results
        - in: query
          name: perPage
          type: integer
          description: results per page
        - in: query
          name: sort
          type: string
          enum: [lastName, dodID, branch, locator, status, destinationDutyStation]
          description: field that results should be sorted by
        - in: query
          name: order
          type: string
          enum: [asc, desc]
          description: direction of sort order if applied
        - in: query
          name: branch
          type: string
        - in: query
          name: locator
          type: string
        - in: query
          name: lastName
          type: string
        - in: query
          name: dodID
          type: string
        - in: query
          name: destinationDutyStation
          type: string
        - in: query
          name: status
          type: array
          description: Filtering for the status.
          uniqueItems: true
          items:
            type: string
            enum:
              - SUBMITTED
              - APPROVALS REQUESTED
              - APPROVED
      responses:
        '200':
          description: Successfully returned all moves matching the criteria
          schema:
            $ref: '#/definitions/QueueMovesResult'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
  /queues/payment-requests:
    get:
      produces:
        - application/json
      summary: Gets queued list of all payment requests by GBLOC origin
      description: >
        An office TIO user will be assigned a transportation office that will determine which payment requests are displayed in their queue based on the origin duty station.
      operationId: getPaymentRequestsQueue
      tags:
        - queues
      parameters:
        - in: query
          name: sort
          type: string
          enum: [lastName, locator, submittedAt, branch, status, dodID, age]
          description: field that results should be sorted by
        - in: query
          name: order
          type: string
          enum: [asc, desc]
          description: direction of sort order if applied
        - in: query
          name: page
          type: integer
          description: requested page of results
        - in: query
          name: perPage
          type: integer
          description: number of records to include per page
        - in: query
          name: submittedAt
          type: string
          format: date
          description: limit results to those matching submitted at date
        - in: query
          name: branch
          type: string
        - in: query
          name: locator
          type: string
        - in: query
          name: lastName
          type: string
        - in: query
          name: dodID
          type: string
        - in: query
          name: destinationDutyStation
          type: string
        - in: query
          name: status
          type: array
          description: Filtering for the status.
          uniqueItems: true
          items:
            type: string
            enum:
              - Payment requested
              - Reviewed
              - Rejected
              - Paid
      responses:
        '200':
          description: Successfully returned all moves matching the criteria
          schema:
            $ref: '#/definitions/QueuePaymentRequestsResult'
        '403':
          description: The request was denied
          schema:
            $ref: '#/responses/PermissionDenied'
        '500':
          description: A server error occurred
          schema:
            $ref: '#/responses/ServerError'
  '/tac/valid':
      get:
        summary: Validation of a TAC value
        description: Returns a boolean based on whether a tac value is valid or not
        operationId: tacValidation
        tags:
          - tac
          - order
        parameters:
          - in: query
            name: tac
            type: string
            required: true
            description: The tac value to validate
        responses:
          '200':
            description: Successfully retrieved validation status
            schema:
              $ref: '#/definitions/TacValid'
          '400':
            description: The request payload is invalid
            schema:
              $ref: '#/responses/InvalidRequest'
          '401':
            description: The request was denied
            schema:
              $ref: '#/responses/PermissionDenied'
          '403':
            description: The request was denied
            schema:
              $ref: '#/responses/PermissionDenied'
          '404':
            description: The requested resource wasn't found
            schema:
              $ref: '#/responses/NotFound'
          '500':
            description: A server error occurred
            schema:
              $ref: '#/responses/ServerError'
definitions:
  ClientError:
    type: object
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
      - instance
  ValidationError:
    allOf:
      - $ref: '#/definitions/ClientError'
      - type: object
    properties:
      invalid_fields:
        type: object
        additionalProperties:
          type: string
    required:
      - invalid_fields
  Address:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      street_address_1:
        type: string
        example: 123 Main Ave
        title: Street address 1
      street_address_2:
        type: string
        example: Apartment 9000
        x-nullable: true
        title: Street address 2
      street_address_3:
        type: string
        example: Montmârtre
        x-nullable: true
        title: Address Line 3
      city:
        type: string
        example: Anytown
        title: City
      eTag:
        type: string
      state:
        title: State
        type: string
        x-display-value:
          AL: AL
          AK: AK
          AR: AR
          AZ: AZ
          CA: CA
          CO: CO
          CT: CT
          DC: DC
          DE: DE
          FL: FL
          GA: GA
          HI: HI
          IA: IA
          ID: ID
          IL: IL
          IN: IN
          KS: KS
          KY: KY
          LA: LA
          MA: MA
          MD: MD
          ME: ME
          MI: MI
          MN: MN
          MO: MO
          MS: MS
          MT: MT
          NC: NC
          ND: ND
          NE: NE
          NH: NH
          NJ: NJ
          NM: NM
          NV: NV
          NY: NY
          OH: OH
          OK: OK
          OR: OR
          PA: PA
          RI: RI
          SC: SC
          SD: SD
          TN: TN
          TX: TX
          UT: UT
          VA: VA
          VT: VT
          WA: WA
          WI: WI
          WV: WV
          WY: WY
        enum:
          - AL
          - AK
          - AR
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MI
          - MN
          - MO
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VT
          - WA
          - WI
          - WV
          - WY
      postal_code:
        type: string
        format: zip
        title: ZIP
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
      country:
        type: string
        title: Country
        x-nullable: true
        example: 'USA'
        default: USA
    required:
      - street_address_1
      - city
      - state
      - postal_code
  BackupContact:
    type: object
    properties:
      name:
        type: string
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        x-nullable: true
      phone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        x-nullable: true
  Contractor:
    properties:
      contractNumber:
        type: string
      id:
        format: uuid
        type: string
      name:
        type: string
      type:
        type: string
  Customer:
    type: object
    properties:
      agency:
        type: string
        title: Agency customer is affilated with
      first_name:
        type: string
        example: John
      last_name:
        type: string
        example: Doe
      phone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        x-nullable: true
      current_address:
        x-nullable: true
        $ref: '#/definitions/Address'
      backup_contact:
        x-nullable: true
        $ref: '#/definitions/BackupContact'
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      dodID:
        type: string
      userID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      eTag:
        type: string
  DutyStation:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Fort Bragg North Station
      address_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      address:
        $ref: '#/definitions/Address'
      eTag:
        type: string
  Entitlements:
    properties:
      id:
        example: 571008b1-b0de-454d-b843-d71be9f02c04
        format: uuid
        type: string
      authorizedWeight:
        example: 2000
        type: integer
        x-formatting: weight
        x-nullable: true
      dependentsAuthorized:
        example: true
        type: boolean
        x-nullable: true
      nonTemporaryStorage:
        example: false
        type: boolean
        x-nullable: true
      privatelyOwnedVehicle:
        example: false
        type: boolean
        x-nullable: true
      proGearWeight:
        example: 2000
        type: integer
        x-formatting: weight
      proGearWeightSpouse:
        example: 500
        type: integer
        x-formatting: weight
      storageInTransit:
        example: 90
        type: integer
        x-nullable: true
      totalWeight:
        example: 500
        type: integer
        x-formatting: weight
      totalDependents:
        example: 2
        type: integer
      eTag:
        type: string
    type: object
  Error:
    properties:
      message:
        type: string
    required:
      - message
    type: object
  Branch:
    type: string
    title: branch
    enum:
      - ARMY
      - NAVY
      - MARINES
      - AIR_FORCE
      - COAST_GUARD
      - OTHER
    x-display-value:
      ARMY: Army
      NAVY: Navy
      MARINES: Marines
      AIR_FORCE: Air Force
      COAST_GUARD: Coast Guard
      OTHER: OTHER
  Grade:
    type: string
    x-nullable: true
    title: grade
    enum:
      - E_1
      - E_2
      - E_3
      - E_4
      - E_5
      - E_6
      - E_7
      - E_8
      - E_9
      - O_1_ACADEMY_GRADUATE
      - O_2
      - O_3
      - O_4
      - O_5
      - O_6
      - O_7
      - O_8
      - O_9
      - O_10
      - W_1
      - W_2
      - W_3
      - W_4
      - W_5
      - AVIATION_CADET
      - CIVILIAN_EMPLOYEE
      - ACADEMY_CADET
      - MIDSHIPMAN
    x-display-value:
      E_1: E-1
      E_2: E-2
      E_3: E-3
      E_4: E-4
      E_5: E-5
      E_6: E-6
      E_7: E-7
      E_8: E-8
      E_9: E-9
      O_1_ACADEMY_GRADUATE: O-1/Service Academy Graduate
      O_2: O-2
      O_3: O-3
      O_4: O-4
      O_5: O-5
      O_6: O-6
      O_7: O-7
      O_8: O-8
      O_9: O-9
      O_10: O-10
      W_1: W-1
      W_2: W-2
      W_3: W-3
      W_4: W-4
      W_5: W-5
      AVIATION_CADET: Aviation Cadet
      CIVILIAN_EMPLOYEE: Civilian Employee
      ACADEMY_CADET: Service Academy Cadet
      MIDSHIPMAN: Midshipman
  Move:
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      availableToPrimeAt:
        format: date-time
        type: string
        x-nullable: true
      contractorId:
        type: string
        format: uuid
        x-nullable: true
      contractor:
        $ref: '#/definitions/Contractor'
      locator:
        type: string
        example: '1K43AR'
      ordersId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      orders:
        $ref: '#/definitions/Order'
      referenceId:
        example: 1001-3456
        type: string
        x-nullable: true
      status:
        $ref: '#/definitions/MoveStatus'
      createdAt:
        type: string
        format: date-time
      submittedAt:
        type: string
        format: date-time
        x-nullable: true
      updatedAt:
        type: string
        format: date-time
      eTag:
        type: string
  MoveStatus:
    type: string
    enum:
      - DRAFT
      - SUBMITTED
      - APPROVALS REQUESTED
      - APPROVED
      - CANCELED
  DeptIndicator:
    type: string
    title: Dept. indicator
    x-nullable: true
    enum:
      - NAVY_AND_MARINES
      - ARMY
      - AIR_FORCE
      - COAST_GUARD
    x-display-value:
      NAVY_AND_MARINES: 17 Navy and Marine Corps
      ARMY: 21 Army
      AIR_FORCE: 57 Air Force
      COAST_GUARD: 70 Coast Guard
  OrdersType:
    type: string
    title: Orders type
    enum:
      - PERMANENT_CHANGE_OF_STATION
      - RETIREMENT
      - SEPARATION
    x-display-value:
      PERMANENT_CHANGE_OF_STATION: Permanent Change Of Station
      RETIREMENT: Retirement
      SEPARATION: Separation
  OrdersTypeDetail:
    type: string
    title: Orders type detail
    x-nullable: true
    enum:
      - HHG_PERMITTED
      - PCS_TDY
      - HHG_RESTRICTED_PROHIBITED
      - HHG_RESTRICTED_AREA
      - INSTRUCTION_20_WEEKS
      - HHG_PROHIBITED_20_WEEKS
      - DELAYED_APPROVAL
    x-display-value:
      HHG_PERMITTED: Shipment of HHG Permitted
      PCS_TDY: PCS with TDY Enroute
      HHG_RESTRICTED_PROHIBITED: Shipment of HHG Restricted or Prohibited
      HHG_RESTRICTED_AREA: HHG Restricted Area-HHG Prohibited
      INSTRUCTION_20_WEEKS: Course of Instruction 20 Weeks or More
      HHG_PROHIBITED_20_WEEKS: Shipment of HHG Prohibited but Authorized within 20 weeks
      DELAYED_APPROVAL: Delayed Approval 20 Weeks or More
  Order:
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      customerID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      customer:
        $ref: '#/definitions/Customer'
      moveCode:
        type: string
        example: 'H2XFJF'
      first_name:
        type: string
        example: John
        readOnly: true
      last_name:
        type: string
        example: Doe
        readOnly: true
      grade:
        $ref: '#/definitions/Grade'
      agency:
        type: string
        $ref: '#/definitions/Branch'
      entitlement:
        $ref: '#/definitions/Entitlements'
      destinationDutyStation:
        $ref: '#/definitions/DutyStation'
      originDutyStation:
        $ref: '#/definitions/DutyStation'
      moveTaskOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      uploaded_order_id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      order_number:
        type: string
        x-nullable: true
        example: '030-00362'
      order_type:
        $ref: '#/definitions/OrdersType'
      order_type_detail:
        $ref: '#/definitions/OrdersTypeDetail'
        x-nullable: true
      date_issued:
        type: string
        format: date
        example: '2020-01-01'
      report_by_date:
        type: string
        format: date
        example: '2020-01-01'
      department_indicator:
        $ref: '#/definitions/DeptIndicator'
        x-nullable: true
      tac:
        type: string
        title: TAC
        example: 'F8J1'
        x-nullable: true
      sac:
        type: string
        title: SAC
        example: 'N002214CSW32Y9'
        x-nullable: true
      has_dependents:
        type: boolean
        example: false
        title: Are dependents included in your orders?
      spouse_has_pro_gear:
        type: boolean
        example: false
        title: Do you have a spouse who will need to move items related to their occupation (also known as spouse pro-gear)?
      eTag:
        type: string
    type: object
  UpdateMoveOrderPayload:
    type: object
    properties:
      issueDate:
        type: string
        description: The date and time that these orders were cut.
        format: date
        example: '2018-04-26'
        title: Orders date
      reportByDate:
        type: string
        description: Report By Date
        format: date
        example: '2018-04-26'
        title: Report-by date
      ordersType:
        $ref: '#/definitions/OrdersType'
      ordersTypeDetail:
        $ref: '#/definitions/OrdersTypeDetail'
      originDutyStationId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      newDutyStationId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      ordersNumber:
        type: string
        title: Orders Number
        x-nullable: true
        example: '030-00362'
      tac:
        type: string
        title: TAC
        example: 'F8J1'
        x-nullable: true
      sac:
        type: string
        title: SAC
        example: 'N002214CSW32Y9'
        x-nullable: true
      departmentIndicator:
        $ref: '#/definitions/DeptIndicator'
        x-nullable: true
      authorizedWeight:
        minimum: 1
        description: unit is in lbs
        example: 2000
        type: integer
        x-formatting: weight
        x-nullable: true
      grade:
        $ref: '#/definitions/Grade'
      dependentsAuthorized:
        type: boolean
        x-nullable: true
      agency:
        description: the branch that the service member belongs to
        $ref: '#/definitions/Branch'
    required:
      - issueDate
      - reportByDate
      - ordersType
      - newDutyStationId
      - originDutyStationId
      - agency
  MoveTaskOrder:
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      createdAt:
        format: date-time
        type: string
      orderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      locator:
        type: string
        example: '1K43AR'
      referenceId:
        example: 1001-3456
        type: string
      availableToPrimeAt:
        format: date-time
        type: string
        x-nullable: true
      isCanceled:
        type: boolean
        x-nullable: true
      updatedAt:
        format: date-time
        type: string
      destinationAddress:
        $ref: '#/definitions/Address'
      pickupAddress:
        $ref: '#/definitions/Address'
      destinationDutyStation:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      originDutyStation:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      entitlements:
        $ref: '#/definitions/Entitlements'
      requestedPickupDate:
        format: date
        type: string
      eTag:
        type: string
    type: object
  MoveTaskOrders:
    items:
      $ref: '#/definitions/MoveTaskOrder'
    type: array
  MTOAgents:
    items:
      $ref: '#/definitions/MTOAgent'
    type: array
  MTOAgent:
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        readOnly: true
        type: string
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      createdAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
      firstName:
        type: string
        x-nullable: true
      lastName:
        type: string
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        x-nullable: true
      phone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        x-nullable: true
      agentType:
        type: string
        enum:
          - RELEASING_AGENT
          - RECEIVING_AGENT
      eTag:
        type: string
    type: object
  PaymentRequest:
    properties:
      proofOfServiceDocs:
        $ref: '#/definitions/ProofOfServiceDocs'
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      isFinal:
        default: false
        type: boolean
      moveTaskOrder:
        $ref: '#/definitions/Move'
      moveTaskOrderID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      serviceItems:
        $ref: '#/definitions/PaymentServiceItems'
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      paymentRequestNumber:
        example: 1234-5678-1
        readOnly: true
        type: string
      eTag:
        type: string
      reviewedAt:
        format: date-time
        type: string
        x-nullable: true
      createdAt:
        format: date-time
        type: string
    type: object
  PaymentRequests:
    items:
      $ref: '#/definitions/PaymentRequest'
    type: array
  PaymentServiceItems:
    items:
      $ref: '#/definitions/PaymentServiceItem'
    type: array
  PaymentServiceItem:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      createdAt:
        format: date-time
        type: string
      paymentRequestID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      mtoServiceItemID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      mtoServiceItemName:
        example: Move management
        type: string
      mtoShipmentType:
        $ref: '#/definitions/MTOShipmentType'
      mtoShipmentID:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      status:
        $ref: '#/definitions/PaymentServiceItemStatus'
      priceCents:
        type: integer
        format: cents
        title: Price of the service item in cents
        x-nullable: true
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      referenceID:
        example: 1234-5678-c56a4180
        readOnly: true
        format: string
      paymentServiceItemParams:
        $ref: '#/definitions/PaymentServiceItemParams'
      eTag:
        type: string
    type: object
  PaymentServiceItemStatus:
    enum:
      - REQUESTED
      - APPROVED
      - DENIED
      - SENT_TO_GEX
      - PAID
    title: Payment Service Item Status
    type: string
  PaymentServiceItemParam:
    properties:
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        readOnly: true
        type: string
      paymentServiceItemID:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      key:
        $ref: '#/definitions/ServiceItemParamName'
      value:
        example: 3025
        type: string
      type:
        $ref: '#/definitions/ServiceItemParamType'
      origin:
        $ref: '#/definitions/ServiceItemParamOrigin'
      eTag:
        type: string
    type: object
  PaymentServiceItemParams:
    type: array
    items:
      $ref: '#/definitions/PaymentServiceItemParam'
  ServiceItemParamName:
    type: string
    enum:
      - ActualPickupDate
      - CanStandAlone
      - ContractCode
      - CubicFeetBilled
      - CubicFeetCrating
      - DistanceZip3
      - DistanceZip5
      - DistanceZipSITDest
      - DistanceZipSITOrigin
      - EIAFuelPrice
      - FSCWeightBasedDistanceMultiplier
      - MarketDest
      - MarketOrigin
      - MTOAvailableToPrimeAt
      - NumberDaysSIT
      - PriceAreaDest
      - PriceAreaIntlDest
      - PriceAreaIntlOrigin
      - PriceAreaOrigin
      - PSI_LinehaulDom
      - PSI_LinehaulDomPrice
      - PSI_LinehaulShort
      - PSI_LinehaulShortPrice
      - PSI_PackingDom
      - PSI_PackingDomPrice
      - PSI_PackingHHGIntl
      - PSI_PackingHHGIntlPrice
      - PSI_PriceDomDest
      - PSI_PriceDomDestPrice
      - PSI_PriceDomOrigin
      - PSI_PriceDomOriginPrice
      - PSI_ShippingLinehaulIntlCO
      - PSI_ShippingLinehaulIntlCOPrice
      - PSI_ShippingLinehaulIntlOC
      - PSI_ShippingLinehaulIntlOCPrice
      - PSI_ShippingLinehaulIntlOO
      - PSI_ShippingLinehaulIntlOOPrice
      - RateAreaNonStdDest
      - RateAreaNonStdOrigin
      - RequestedPickupDate
      - ServiceAreaDest
      - ServiceAreaOrigin
      - ServicesScheduleDest
      - ServicesScheduleOrigin
      - SITScheduleDest
      - SITScheduleOrigin
      - WeightActual
      - WeightBilledActual
      - WeightEstimated
      - ZipDestAddress
      - ZipPickupAddress
      - ZipSITDestHHGFinalAddress
  ServiceItemParamOrigin:
    type: string
    enum:
      - PRIME
      - SYSTEM
  ServiceItemParamType:
    type: string
    enum:
      - STRING
      - DATE
      - INTEGER
      - DECIMAL
      - TIMESTAMP
      - PaymentServiceItemUUID
  PaymentRequestStatus:
    enum:
      - PENDING
      - REVIEWED
      - REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED
      - SENT_TO_GEX
      - RECEIVED_BY_GEX
      - PAID
    title: Payment Request Status
    type: string
  ProofOfServiceDocs:
    items:
      $ref: '#/definitions/ProofOfServiceDoc'
    type: array
  ProofOfServiceDoc:
    properties:
      uploads:
        items:
          $ref: '#/definitions/Upload'
        type: array
  MTOShipment:
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      createdAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
      primeEstimatedWeight:
        x-nullable: true
        example: 2000
        type: integer
      primeActualWeight:
        x-nullable: true
        example: 2000
        type: integer
      scheduledPickupDate:
        format: date
        type: string
      requestedPickupDate:
        format: date
        type: string
      approvedDate:
        format: date
        type: string
      pickupAddress:
        x-nullable: true
        $ref: '#/definitions/Address'
      destinationAddress:
        x-nullable: true
        $ref: '#/definitions/Address'
      secondaryPickupAddress:
        x-nullable: true
        $ref: '#/definitions/Address'
      secondaryDeliveryAddress:
        x-nullable: true
        $ref: '#/definitions/Address'
      customerRemarks:
        type: string
        example: handle with care
        x-nullable: true
      shipmentType:
        enum:
          - HHG
          - INTERNATIONAL_HHG
          - INTERNATIONAL_UB
      status:
        $ref: '#/definitions/MTOShipmentStatus'
      rejectionReason:
        type: string
        example: MTO Shipment not good enough
        x-nullable: true
      mtoAgents:
        $ref: '#/definitions/MTOAgents'
      mtoServiceItems:
        $ref: '#/definitions/MTOServiceItems'
      eTag:
        type: string
  MTOShipments:
    items:
      $ref: '#/definitions/MTOShipment'
    type: array
  MTOShipmentStatus:
    type: string
    title: Shipment Status
    example: SUBMITTED
    enum:
      - SUBMITTED
      - REJECTED
      - APPROVED
      - CANCELLATION_REQUESTED
  MTOShipmentType:
    type: string
    title: Shipment Type
    example: HHG
    enum:
      - HHG
      - HHG_LONGHAUL_DOMESTIC
      - HHG_SHORTHAUL_DOMESTIC
      - HHG_INTO_NTS_DOMESTIC
      - HHG_OUTOF_NTS_DOMESTIC
      - INTERNATIONAL_HHG
      - INTERNATIONAL_UB
    x-display-value:
      HHG: HHG
      INTERNATIONAL_HHG: International HHG
      INTERNATIONAL_UB: International UB
  PatchMTOShipmentStatus:
    properties:
      status:
        $ref: '#/definitions/MTOShipmentStatus'
      rejectionReason:
        type: string
        example: MTO Shipment not good enough
        x-nullable: true
    required:
      - status
  PatchMTOServiceItemStatusPayload:
    properties:
      status:
        description: Describes all statuses for a MTOServiceItem
        type: string
        enum:
          - SUBMITTED
          - APPROVED
          - REJECTED
      rejectionReason:
        description: Reason the service item was rejected
        type: string
        example: Insufficent details provided
        x-nullable: true
  MTOServiceItemStatus:
    description: Describes all statuses for a MTOServiceItem
    type: string
    enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
  MTOServiceItem:
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      reServiceID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      reServiceCode:
        type: string
      reServiceName:
        type: string
      createdAt:
        format: date-time
        type: string
      customerContacts:
        $ref: '#/definitions/MTOServiceItemCustomerContacts'
      deletedAt:
        format: date
        type: string
      description:
        type: string
      dimensions:
        $ref: '#/definitions/MTOServiceItemDimensions'
      reason:
        type: string
      rejectionReason:
        type: string
        x-nullable: true
      pickupPostalCode:
        type: string
      feeType:
        enum:
          - COUNSELING
          - CRATING
          - TRUCKING
          - SHUTTLE
        type: string
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      quantity:
        type: integer
      rate:
        type: integer
      status:
        $ref: '#/definitions/MTOServiceItemStatus'
      submittedAt:
        format: date
        type: string
      total:
        format: cents
        type: integer
      updatedAt:
        format: date-time
        type: string
      approvedAt:
        format: date-time
        type: string
        x-nullable: true
      rejectedAt:
        format: date-time
        type: string
        x-nullable: true
      eTag:
        type: string
    required:
      - id
      - moveTaskOrderID
      - reServiceID
      - reServiceCode
      - reServiceName
      - mtoShipmentID
      - reason
      - pickupPostalCode
      - description
    type: object
  MTOServiceItems:
    type: array
    items:
      $ref: '#/definitions/MTOServiceItem'
  DimensionType:
    description: Describes a dimension type for a MTOServiceItemDimension.
    type: string
    enum:
      - ITEM
      - CRATE
  MTOServiceItemDimension:
    description: Describes a dimension object for the MTOServiceItem.
    type: object
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      type:
        $ref: '#/definitions/DimensionType'
      length:
        description: Length in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      width:
        description: Width in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
      height:
        description: Height in thousandth inches. 1000 thou = 1 inch.
        example: 1000
        type: integer
        format: int32
  MTOServiceItemDimensions:
    type: array
    items:
      $ref: '#/definitions/MTOServiceItemDimension'
  CustomerContactType:
    description: Describes a customer contact type for a MTOServiceItem of type domestic destination SIT.
    type: string
    enum:
      - FIRST
      - SECOND
  MTOServiceItemCustomerContact:
    description: Customer contact information for a destination SIT service item
    type: object
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      type:
        $ref: '#/definitions/CustomerContactType'
      timeMilitary:
        type: string
        example: 0400Z
        description: Time of delivery corresponding to `firstAvailableDeliveryDate`.
      firstAvailableDeliveryDate:
        format: date
        type: string
        example: '2020-12-31'
        description: First available date that Prime can deliver SIT service item.
  MTOServiceItemCustomerContacts:
    type: array
    items:
      $ref: '#/definitions/MTOServiceItemCustomerContact'
  MTOApprovalServiceItemCodes:
    description: MTO level service items to create when updating MTO status.
    properties:
      serviceCodeCS:
        example: true
        type: boolean
      serviceCodeMS:
        example: true
        type: boolean
    type: object
  TacValid:
    properties:
      isValid:
        example: true
        type: boolean
    required:
      - isValid
    type: object
  UpdatePaymentRequestStatusPayload:
    properties:
      rejectionReason:
        example: documentation was incomplete
        type: string
        x-nullable: true
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      eTag:
        type: string
    type: object
  DocumentPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      service_member_id:
        type: string
        format: uuid
        title: The service member this document belongs to
      uploads:
        type: array
        items:
          $ref: '#/definitions/Upload'
    required:
      - id
      - service_member_id
      - uploads
  Upload:
    properties:
      bytes:
        type: integer
      contentType:
        example: application/pdf
        format: mime-type
        type: string
      createdAt:
        format: date-time
        type: string
      filename:
        example: filename.pdf
        type: string
      id:
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        format: uuid
        type: string
      updatedAt:
        format: date-time
        type: string
      url:
        example: 'https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538'
        format: uri
        type: string
      status:
        type: string
        enum:
          - INFECTED
          - CLEAN
          - PROCESSING
    required:
      - id
      - url
      - filename
      - contentType
      - bytes
      - createdAt
      - updatedAt
    type: object
  QueueMoves:
    type: array
    items:
      $ref: '#/definitions/QueueMove'
  QueueMove:
    type: object
    properties:
      id:
        type: string
        format: uuid
      customer:
        $ref: '#/definitions/Customer'
      status:
        $ref: '#/definitions/QueueMoveStatus'
      locator:
        type: string
      departmentIndicator:
        $ref: '#/definitions/DeptIndicator'
      shipmentsCount:
        type: integer
      destinationDutyStation:
        $ref: '#/definitions/DutyStation'
      originGBLOC:
        $ref: '#/definitions/GBLOC'
  QueueMovesResult:
    type: object
    properties:
      page:
        type: integer
      perPage:
        type: integer
      totalCount:
        type: integer
      queueMoves:
        $ref: '#/definitions/QueueMoves'
  QueueMoveStatus:
    type: string
    enum:
      - New move
      - Move approved
      - Approvals requested
  QueuePaymentRequest:
    type: object
    properties:
      id:
        type: string
        format: uuid
      moveID:
        type: string
        format: uuid
      customer:
        $ref: '#/definitions/Customer'
      status:
        $ref: '#/definitions/PaymentRequestStatus'
      age:
        type: number
        format: integer
        description: Days since the payment request has been requested.  Decimal representation will allow more accurate sorting.
      submittedAt:
        type: string
        format: date-time
      locator:
        type: string
      departmentIndicator:
        $ref: '#/definitions/DeptIndicator'
      originGBLOC:
        $ref: '#/definitions/GBLOC'
  QueuePaymentRequests:
    type: array
    items:
      $ref: '#/definitions/QueuePaymentRequest'
  QueuePaymentRequestsResult:
    type: object
    properties:
      page:
        type: integer
      perPage:
        type: integer
      totalCount:
        type: integer
      queuePaymentRequests:
        $ref: '#/definitions/QueuePaymentRequests'
  GBLOC:
    type: string
    enum:
      - AGFM
      - APAT
      - BGAC
      - BGNC
      - BKAS
      - CFMQ
      - CLPK
      - CNNQ
      - DMAT
      - GSAT
      - HAFC
      - HBAT
      - JEAT
      - JENQ
      - KKFA
      - LHNQ
      - LKNQ
      - MAPK
      - MAPS
      - MBFL
      - MLNQ
      - XXXX
responses:
  InvalidRequest:
    description: The request payload is invalid
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: The requested resource wasn't found
    schema:
      $ref: '#/definitions/Error'
  PermissionDenied:
    description: The request was denied
    schema:
      $ref: '#/definitions/Error'
  ServerError:
    description: A server error occurred
    schema:
      $ref: '#/definitions/Error'
  PreconditionFailed:
    description: Precondition failed
    schema:
      $ref: '#/definitions/Error'
  Conflict:
    description: Conflict error
    schema:
      $ref: '#/definitions/Error'
