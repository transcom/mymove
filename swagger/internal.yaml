swagger: '2.0'
info:
  description: The internal/website API for my.move.mil
  version: 0.0.1
  title: my.move.mil
  contact:
    email: ppp@truss.works
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
basePath: /internal
consumes:
  - application/json
produces:
  - application/json
definitions:
  LoggedInUserPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      service_member:
        $ref: "#/definitions/ServiceMemberPayload"
        x-nullable: true
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - created_at
      - updated_at
  Affiliation:
    type: string
    x-nullable: true
    title: Branch
    enum: &AFFILIATION
      - ARMY
      - NAVY
      - MARINES
      - AIRFORCE
      - COASTGUARD
    x-display-value:
      ARMY: Army
      NAVY: Navy
      MARINES: Marines
      AIRFORCE: Airforce
      COASTGUARD: Coastguard
  DutyStationPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        format: string
        example: Fort Bragg North Station
      address:
        $ref: '#/definitions/Address'
      affiliation:
        $ref: '#/definitions/Affiliation'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - name
      - address
      - affiliation
      - created_at
      - updated_at
  DutyStationsPayload:
    type: array
    items:
      $ref: '#/definitions/DutyStationPayload'
  CreatePersonallyProcuredMovePayload:
    type: object
    properties:
      size:
        $ref: '#/definitions/TShirtSize'
      planned_move_date:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      additional_pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destination_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      days_in_storage:
        type: integer
        title: How many days do you plan to put your stuff in storage?
        minimum: 0
        maximum: 90
        x-nullable: true
      weight_estimate:
        type: integer
        title: Weight Estimate
        x-nullable: true
      estimated_incentive:
        type: string
        title: Estimated Incentive
        x-nullable: true
  UpdatePersonallyProcuredMovePayload:
    type: object
    properties:
      size:
        $ref: '#/definitions/TShirtSize'
      planned_move_date:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      additional_pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destination_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      days_in_storage:
        type: integer
        title: How many days do you plan to put your stuff in storage?
        minimum: 0
        maximum: 90
        x-nullable: true
      weight_estimate:
        type: integer
        title: Weight Estimate
        x-nullable: true
      estimated_incentive:
        type: string
        title: Estimated Incentive
        x-nullable: true
  PatchPersonallyProcuredMovePayload:
    type: object
    properties:
      size:
        $ref: '#/definitions/TShirtSize'
      planned_move_date:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      additional_pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destination_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      days_in_storage:
        type: integer
        title: How many days do you plan to put your stuff in storage?
        minimum: 0
        maximum: 90
        x-nullable: true
      weight_estimate:
        type: integer
        title: Weight Estimate
        x-nullable: true
      estimated_incentive:
        type: string
        title: Estimated Incentive
        x-nullable: true
  PersonallyProcuredMovePayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      size:
        $ref: '#/definitions/TShirtSize'
      planned_move_date:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      additional_pickup_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destination_zip:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      days_in_storage:
        type: integer
        title: How many days do you plan to put your stuff in storage?
        minimum: 0
        maximum: 90
        x-nullable: true
      weight_estimate:
        type: integer
        title: Weight Estimate
        x-nullable: true
      estimated_incentive:
        type: string
        title: Estimated Incentive
        x-nullable: true
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - created_at
      - updated_at
  PPMSitEstimate:
    type: object
    properties:
      estimate:
        type: integer
        title: Value in cents of SIT estimate for PPM
    required:
      - estimate
  PPMEstimateRange:
    type: object
    properties:
      range_min:
        type: integer
        title: Low estimate
      range_max:
        type: integer
        title: High estimate
    required:
      - range_min
      - range_max
  IndexPersonallyProcuredMovePayload:
    type: array
    items:
      $ref: '#/definitions/PersonallyProcuredMovePayload'
  CreateMovePayload:
    type: object
    properties:
      selected_move_type:
        $ref: '#/definitions/SelectedMoveType'
  MovePayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      user_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      selected_move_type:
        $ref: '#/definitions/SelectedMoveType'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - user_id
      - created_at
      - updated_at
  PatchMovePayload:
    type: object
    properties:
      selected_move_type:
        $ref: '#/definitions/SelectedMoveType'
  SelectedMoveType:
    type: string
    title: Selected Move Type
    enum:
      - HHG
      - PPM
      - COMBO
    x-nullable: true
    x-display-value:
      HHG: Household Goods Move
      PPM: Personal Procured Move
      COMBO: Both HHG and PPM
  IndexMovesPayload:
    type: array
    items:
      $ref: '#/definitions/MovePayload'
  ServiceMemberPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      user_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      edipi:
        type: string
        format: edipi
        example: '5789345789'
        pattern: '^[0-9]{10}$'
        x-nullable: true
      affiliation:
        $ref: '#/definitions/Affiliation'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      has_social_security_number:
        type: boolean
      first_name:
        type: string
        example: John
        x-nullable: true
      middle_name:
        type: string
        example: L.
        x-nullable: true
      last_name:
        type: string
        example: Donut
        x-nullable: true
      suffix:
        type: string
        example: Jr.
        x-nullable: true
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
      secondary_telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
      personal_email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: personal email address
      phone_is_preferred:
        type: boolean
        x-nullable: true
      text_message_is_preferred:
        type: boolean
        x-nullable: true
      email_is_preferred:
        type: boolean
        x-nullable: true
      current_station:
        $ref: '#/definitions/DutyStationPayload'
      residential_address:
        $ref: '#/definitions/Address'
      backup_mailing_address:
        $ref: '#/definitions/Address'
      is_profile_complete:
        type: boolean
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - user_id
      - is_profile_complete
      - has_social_security_number
      - created_at
      - updated_at
  CreateServiceMemberPayload:
    type: object
    properties:
      user_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      edipi:
        type: string
        format: edipi
        pattern: '^[0-9]{10}$'
        example: '5789345789'
        x-nullable: true
        title: 'DoD ID #'
      affiliation:
        $ref: '#/definitions/Affiliation'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      social_security_number:
        type: string
        format: ssn
        x-nullable: true
        title: 'Social Security Number'
        example: '555-55-5555'
      first_name:
        type: string
        example: John
        x-nullable: true
        title: First Name
      middle_name:
        type: string
        example: L.
        x-nullable: true
        title: Middle Name
      last_name:
        type: string
        example: Donut
        x-nullable: true
        title: Last Name
      suffix:
        type: string
        example: Jr.
        x-nullable: true
        title: Suffix
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Best contact phone
      secondary_telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Alternate phone
      personal_email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Personal email
      phone_is_preferred:
        type: boolean
        x-nullable: true
        title: Phone
      text_message_is_preferred:
        type: boolean
        x-nullable: true
        title: Text message
      email_is_preferred:
        type: boolean
        x-nullable: true
        title: Email
      current_station_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      residential_address:
        $ref: '#/definitions/Address'
      backup_mailing_address:
        $ref: '#/definitions/Address'
  PatchServiceMemberPayload:
    type: object
    properties:
      user_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      edipi:
        type: string
        format: edipi
        pattern: '^[0-9]{10}$'
        example: '5789345789'
        x-nullable: true
        title: 'DoD ID #'
      affiliation:
        $ref: '#/definitions/Affiliation'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      social_security_number:
        type: string
        format: ssn
        x-nullable: true
        title: 'Social Security Number'
        example: '555-55-5555'
      first_name:
        type: string
        example: John
        x-nullable: true
        title: First Name
      middle_name:
        type: string
        example: L.
        x-nullable: true
        title: Middle Name
      last_name:
        type: string
        example: Donut
        x-nullable: true
        title: Last Name
      suffix:
        type: string
        example: Jr.
        x-nullable: true
        title: Suffix
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Best contact phone
      secondary_telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Alternate phone
      personal_email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Personal email
      phone_is_preferred:
        type: boolean
        x-nullable: true
        title: Phone
      text_message_is_preferred:
        type: boolean
        x-nullable: true
        title: Text message
      email_is_preferred:
        type: boolean
        x-nullable: true
        title: Email
      current_station_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      residential_address:
        $ref: '#/definitions/Address'
      backup_mailing_address:
        $ref: '#/definitions/Address'
  ServiceMemberBackupContactPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Susan Smith
        x-nullable: true
        title: Name
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Phone
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Email
      permission:
        $ref: '#/definitions/BackupContactPermission'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - created_at
      - updated_at
      - name
      - email
      - permission
  BackupContactPermission:
    type: string
    enum:
    - NONE
    - VIEW
    - EDIT
    title: Permissions
    x-display-value:
      NONE: Contact Only
      VIEW: View all move details
      EDIT: View and edit all move details
  CreateServiceMemberBackupContactPayload:
    type: object
    properties:
      name:
        type: string
        example: Susan Smith
        x-nullable: true
        title: Name
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Phone
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@exmaple.com
        x-nullable: true
        title: Email
      permission:
        $ref: '#/definitions/BackupContactPermission'
    required:
      - name
      - email
      - permission
  UpdateServiceMemberBackupContactPayload:
    type: object
    properties:
      name:
        type: string
        example: Susan Smith
        x-nullable: true
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: email address
      permission:
        $ref: '#/definitions/BackupContactPermission'
    required:
      - name
      - email
      - permission
  IndexServiceMemberBackupContactsPayload:
    type: array
    items:
      $ref: '#/definitions/ServiceMemberBackupContactPayload'
  CreateSignedCertificationPayload:
    type: object
    properties:
      date:
        type: string
        format: date
        title: Date
      signature:
        type: string
        title: Signature
      certification_text:
        type: string
    required:
      - date
      - signature
      - certification_text
  DocumentPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        title: Human-understandable name for this document
      service_member_id:
        type: string
        format: uuid
        title: The service member this document belongs to
      uploads:
        type: array
        items:
          $ref: '#/definitions/UploadPayload'
    required:
      - id
      - name
      - service_member_id
      - uploads
  PostDocumentPayload:
    type: object
    properties:
      name:
        type: string
        title: Human-understandable name for this document
      service_member_id:
        type: string
        format: uuid
        title: The service member this document belongs to
  UploadPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      url:
        type: string
        format: uri
        example: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
      filename:
        type: string
        format: string
        example: filename.pdf
    required:
      - id
      - url
      - filename
  CreateIssuePayload:
    type: object
    properties:
      description:
        type: string
        example: This is a test issue
        format: textarea
        minLength: 1
        maxLength: 1024
        title: Description
      reporter_name:
        type: string
        example: Jane Doe
        x-nullable: true
        title: Reporter Name
      due_date:
        type: string
        format: date
        example: 2019-03-15
        x-nullable: true
        title: Due Date
    required:
      - description
  IndexIssuesPayload:
    type: array
    items:
      $ref: '#/definitions/IssuePayload'
  IssuePayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      description:
        type: string
        example: This is a test issue
        minLength: 1
        maxLength: 1024
      reporter_name:
        type: string
        example: Jane Doe
        x-nullable: true
      due_date:
        type: string
        format: date
        example: 2019-03-15
        x-nullable: true
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - description
      - created_at
      - updated_at
  TShirtSize:
    type: string
    x-nullable: true
    title: Size
    enum:
      - S
      - M
      - L
  ServiceMemberRank:
    type: string
    x-nullable: true
    title: Rank
    enum:
      - E_1
      - E_2
      - E_3
      - E_4
      - E_5
      - E_6
      - E_7
      - E_8
      - E_9
      - W_1
      - W_2
      - W_3
      - W_4
      - W_5
      - O_1
      - O_2
      - O_3
      - O_4
      - O_5
      - O_6
      - O_7
      - O_8
      - O_9
      - O_10
      - ACADEMY_CADET
      - ACADEMY_GRADUATE
      - AVIATION_CADET
      - CIVILIAN_EMPLOYEE
      - MIDSHIPMAN
    x-display-value:
      E_1: E-1
      E_2: E-2
      E_3: E-3
      E_4: E-4
      E_5: E-5
      E_6: E-6
      E_7: E-7
      E_8: E-8
      E_9: E-9
      W_1: W-1
      W_2: W-2
      W_3: W-3
      W_4: W-4
      W_5: W-5
      O_1: O-1
      O_2: O-2
      O_3: O-3
      O_4: O-4
      O_5: O-5
      O_6: O-6
      O_7: O-7
      O_8: O-8
      O_9: O-9
      O_10: O-10
      ACADEMY_CADET: Service Academy Cadet
      ACADEMY_GRADUATE: Service Academy Graduate
      AVIATION_CADET: Aviation Cadet
      CIVILIAN_EMPLOYEE: Civilian Employee
      MIDSHIPMAN: Midshipman
  DeptIndicator:
    type: string
    x-nullable: true
    enum:
      - ARMY
      - NAVY_MARINES
      - AIRFORCE
      - COASTGUARD
    x-display-value:
      ARMY: 21 - United States Army
      NAVY_MARINES: 17 - United States Navy/United States Marine Corps
      AIRFORCE: 57 - United States Air Force
      COASTGUARD: 70 - United States Coast Guard
  IndexShipmentsPayload:
    type: array
    items:
      $ref: '#/definitions/ShipmentPayload'
  ShipmentPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      pickup_date:
        type: string
        format: date
      delivery_date:
        type: string
        format: date
      traffic_distribution_list_id:
        type: string
        format: uuid
        example: d56a4180-65aa-42ec-a945-5fd21dec0538
      transportation_service_provider_id:
        type: string
        format: uuid
        example: f56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      administrative_shipment:
        type: boolean
        example: false
        x-nullable: true
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - pickup_date
      - delivery_date
      - traffic_distribution_list_id
      - created_at
      - updated_at
  Address:
    type: object
    properties:
      street_address_1:
        type: string
        example: 123 Main Ave
        title: Address Line 1
      street_address_2:
        type: string
        example: Apartment 9000
        x-nullable: true
        title: Address Line 2
      street_address_3:
        type: string
        example: Montmârtre
        x-nullable: true
        title: Address Line 3
      city:
        type: string
        example: Anytown
        title: City
      state:
        title: State
        type: string
        x-display-value:
          AL: AL
          AK: AK
          AZ: AZ
          AR: AR
          CA: CA
          CO: CO
          CT: CT
          DE: DE
          DC: DC
          FL: FL
          GA: GA
          HI: HI
          ID: ID
          IL: IL
          IN: IN
          IA: IA
          KS: KS
          KY: KY
          LA: LA
          ME: ME
          MD: MD
          MA: MA
          MI: MI
          MN: MN
          MS: MS
          MO: MO
          MT: MT
          NE: NE
          NV: NV
          NH: NH
          NJ: NJ
          NM: NM
          NY: NY
          NC: NC
          ND: ND
          OH: OH
          OK: OK
          OR: OR
          PA: PA
          RI: RI
          SC: SC
          SD: SD
          TN: TN
          TX: TX
          UT: UT
          VT: VT
          VA: VA
          WA: WA
          WV: WV
          WI: WI
          WY: WY
        enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
      postal_code:
        type: string
        format: zip
        title: ZIP/Postal Code
        example: "90210"
        pattern: '^(\d{5}([\-]\d{4})?)$'
      country:
        type: string
        title: Country
        x-nullable: true
        example: "United States"
        default: United States
    required:
      - street_address_1
      - city
      - state
      - postal_code
  OrdersType:
    type: string
    title: Orders type
    enum:
      - accession
      - brac
      - operational
      - rotational
      - separation
      - training
      - unit-move
    x-display-value:
      accession: accession
      brac: brac
      operational: operational
      rotational: rotational
      separation: separation
      training: training
      unit-move: unit-move
  OrdersPayload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      service_member_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      issue_date:
        type: string
        description: The date and time that these orders were cut.
        format: date
        example: "2018-04-26"
        title: Orders date
      report_by_date:
        type: string
        description: Report By Date
        format: date
        example: "2018-04-26"
        title:  Report-by date
      orders_type:
        $ref: "#/definitions/OrdersType"
      has_dependents:
        type: boolean
        title: Are dependents included in your orders?
      new_duty_station:
        $ref: '#/definitions/DutyStationPayload'
      uploaded_orders:
        $ref: '#/definitions/DocumentPayload'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - service_member_id
      - issue_date
      - report_by_date
      - orders_type
      - has_dependents
      - new_duty_station
      - uploaded_orders
      - created_at
      - updated_at
  CreateUpdateOrdersPayload:
    type: object
    properties:
      service_member_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      issue_date:
        type: string
        description: The date and time that these orders were cut.
        format: date
        example: "2018-04-26"
        title: Orders date
      report_by_date:
        type: string
        description: Report By Date
        format: date
        example: "2018-04-26"
        title:  Report-by date
      orders_type:
        $ref: "#/definitions/OrdersType"
      has_dependents:
        type: boolean
        title: Are dependents included in your orders?
      new_duty_station_id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
    required:
      - service_member_id
      - issue_date
      - report_by_date
      - orders_type
      - has_dependents
      - new_duty_station_id
  InvalidRequestResponsePayload:
    type: object
    properties:
      errors:
        type: object
        additionalProperties:
          type: string
  MoveQueueItem:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      status:
        type: string
        example: Booked - Awaiting Review
      locator:
        type: string
        example: "12432"
      customer_name:
        type: string
        example: Thedog, Nino
        title: Customer Name
      edipi:
        type: string
        format: edipi
        pattern: '^[0-9]{10}$'
        example: '5789345789'
        title: 'DoD ID #'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      orders_type:
        type: string
        title: Move Type
        enum:
          - PCS - OCONUS
          - PCS - CONUS
          - PCS + TDY - OCONUS
          - PCS + TDY - CONUS
      move_date:
        type: string
        format: date
        example: 2018-04-25
      customer_deadline:
        type: string
        format: date
        example: 2018-07-20
      last_modified_date:
        type: string
        format: date-time
        example: 2018-04-25 11:25
      last_modified_name:
        type: string
        example: Bollinger, Sam
      created_at:
        type: string
        format: date-time
    required:
      - id
      - status
      - locator
      - customer_name
      - edipi
      - rank
      - orders_type
      - move_date
      - customer_deadline
      - last_modified_date
      - last_modified_name
      - created_at
  Accounting:
    type: object
    properties:
      dept_indicator:
        $ref: '#/definitions/DeptIndicator'
      tac:
        type: string
        example: CAJ8
        title: TAC
  PatchAccounting:
    type: object
    properties:
      dept_indicator:
        $ref: '#/definitions/DeptIndicator'
      tac:
        type: string
        example: CAJ8
        title: TAC
  ShowMoveBackupContact:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Susan Smith
        x-nullable: true
        title: Name
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Phone
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Email
      address:
        $ref: '#/definitions/Address'
      permission:
        $ref: '#/definitions/BackupContactPermission'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - id
      - created_at
      - updated_at
      - name
      - email
      - permission
  UpdateMoveBackupContact:
    type: object
    properties:
      name:
        type: string
        example: Susan Smith
        x-nullable: true
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: email address
      address:
        $ref: '#/definitions/Address'
      permission:
        $ref: '#/definitions/BackupContactPermission'
    required:
      - name
      - email
      - permission
paths:
  /estimates/ppm:
    get:
      summary: Return a PPM cost estimate
      description: Calculates a reimbursement range for a PPM move (excluding SIT)
      operationId: showPPMEstimate
      tags:
        - ppm
      parameters:
        - in: query
          name: planned_move_date
          type: string
          format: date
          required: true
        - in: query
          name: origin_zip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: destination_zip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: weight_estimate
          type: integer
          required: true
      responses:
        200:
          description: created instance of orders
          schema:
            $ref: '#/definitions/PPMEstimateRange'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        500:
          description: internal server error
  /estimates/ppm_sit:
    get:
      summary: Return a PPM move's SIT cost estimate
      description: Calculates a reimbursment for a PPM move's SIT
      operationId: showPPMSitEstimate
      tags:
        - ppm
      parameters:
        - in: query
          name: planned_move_date
          type: string
          format: date
          required: true
        - in: query
          name: days_in_storage
          type: integer
          required: true
        - in: query
          name: origin_zip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: destination_zip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: weight_estimate
          type: integer
          required: true
      responses:
        200:
          description: show PPM SIT estimate
          schema:
            $ref: '#/definitions/PPMSitEstimate'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        500:
          description: internal server error
  /issues:
    post:
      summary: Create a new issue
      description: Issues represent problems or suggestions for the app, this creates a new one.
      operationId: createIssue
      tags:
        - issues
      parameters:
        - in: body
          name: createIssuePayload
          required: true
          schema:
            $ref: '#/definitions/CreateIssuePayload'
      responses:
        201:
          description: created issue
          schema:
            $ref: '#/definitions/IssuePayload'
        400:
          description: invalid request
    get:
      summary: List all issues
      description: List all issues
      operationId: indexIssues
      tags:
        - issues
      responses:
        200:
          description: list of issues
          schema:
            $ref: '#/definitions/IndexIssuesPayload'
        400:
          description: invalid request
  /shipments:
    get:
      summary: List all shipments
      description: List all shipments
      operationId: indexShipments
      tags:
        - shipments
      responses:
        200:
          description: list of all shipments
          schema:
            $ref: '#/definitions/IndexShipmentsPayload'
        400:
          description: invalid request
  /users/logged_in:
    get:
      summary: Returns the user info for the currently logged in user
      description: Returns the user info for the currently logged in user
      operationId: showLoggedInUser
      tags:
        - users
      responses:
        200:
          description: Currently logged in user
          schema:
            $ref: '#/definitions/LoggedInUserPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        500:
          description: server error
  /orders:
    post:
      summary: Creates an orders model for a logged-in user
      description: Creates an instance of orders tied to a service member
      operationId: createOrders
      tags:
        - orders
      parameters:
        - in: body
          name: createOrdersPayload
          required: true
          schema:
            $ref: '#/definitions/CreateUpdateOrdersPayload'
      responses:
        201:
          description: created instance of orders
          schema:
            $ref: '#/definitions/OrdersPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        500:
          description: internal server error
  /orders/{ordersId}:
    put:
      summary: Updates orders
      description: All fields sent in this request will be set on the orders referenced
      operationId: updateOrders
      tags:
        - orders
      parameters:
        - in: path
          name: ordersId
          type: string
          format: uuid
          required: true
          description: UUID of the orders model
        - in: body
          name: updateOrdersPayload
          required: true
          schema:
            $ref: '#/definitions/CreateUpdateOrdersPayload'
      responses:
        200:
          description: updated instance of orders
          schema:
            $ref: '#/definitions/OrdersPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: orders not found
        500:
          description: internal server error
    get:
      summary: Returns the given order
      description: Returns the given order
      operationId: showOrders
      tags:
        - orders
      parameters:
        - in: path
          name: ordersId
          type: string
          format: uuid
          required: true
          description: UUID of the order
      responses:
        200:
          description: the instance of the order
          schema:
            $ref: '#/definitions/OrdersPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: order is not found
        500:
          description: internal server error
  /moves:
    post:
      summary: Submits move for a logged-in user
      description: Creates an instance of a move tied to a user
      operationId: createMove
      tags:
        - moves
      parameters:
        - in: body
          name: createMovePayload
          required: true
          schema:
            $ref: '#/definitions/CreateMovePayload'
      responses:
        201:
          description: created instance of move
          schema:
            $ref: '#/definitions/MovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized to sign for this move
    get:
      summary: List all moves
      description: List all moves
      operationId: indexMoves
      tags:
        - moves
      responses:
        200:
          description: list of moves
          schema:
            $ref: '#/definitions/IndexMovesPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
  /moves/{moveId}:
    patch:
      summary: Patches the move
      description: Any fields sent in this request will be set on the move referenced
      operationId: patchMove
      tags:
        - moves
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: body
          name: patchMovePayload
          required: true
          schema:
            $ref: '#/definitions/PatchMovePayload'
      responses:
        201:
          description: updated instance of move
          schema:
            $ref: '#/definitions/MovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: move is not found
        500:
          description: internal server error
    get:
      summary: Returns the given move
      description: Returns the given move
      operationId: showMove
      tags:
        - moves
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
      responses:
        200:
          description: the instance of the move
          schema:
            $ref: '#/definitions/MovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: move is not found
        500:
          description: internal server error
  /moves/{moveId}/backup_contact:
    get:
      summary: Returns a service member's backup contact, for a move
      description: Returns a service member's backup contact, for a move
      operationId: showMoveBackupContact
      tags:
        - backup_contacts
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the backup contact's associated service member
      responses:
        200:
          description: the instance of the service member backup contact
          schema:
            $ref: '#/definitions/ShowMoveBackupContact'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: backup contact not found
        500:
          description: internal server error
    patch:
      summary: Updates a service member's backup contact, for a move
      description: Any fields sent in this request will be set on the backup contact referenced
      operationId: updateMoveBackupContact
      tags:
        - backup_contacts
      parameters:
        - in: body
          name: updateMoveBackupContact
          required: true
          schema:
            $ref: '#/definitions/UpdateMoveBackupContact'
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the backup contact's associated service member
      responses:
        201:
          description: updated instance of backup contact
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: backup contact not found
        500:
          description: internal server error
  /moves/{moveId}/signed_certification:
    post:
      summary: Submits signed certification for the given move ID
      description: Create an instance of signed_certification tied to the move ID
      operationId: createSignedCertification
      tags:
        - certification
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move being signed for
        - in: body
          name: createSignedCertificationPayload
          required: true
          schema:
            $ref: '#/definitions/CreateSignedCertificationPayload'
      responses:
        201:
          description: created instance of signed_certification
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized to sign for this move
        404:
          description: move not found
        500:
          description: internal server error
  /moves/{moveId}/personally_procured_move:
    post:
      summary: Creates a new PPM for the given move
      description: Create an instance of personally_procured_move tied to the move ID
      operationId: createPersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move this PPM is associated with
        - in: body
          name: createPersonallyProcuredMovePayload
          required: true
          schema:
            $ref: '#/definitions/CreatePersonallyProcuredMovePayload'
      responses:
        201:
          description: created instance of personally_procured_move
          schema:
            $ref: '#/definitions/PersonallyProcuredMovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: move not found
        500:
          description: server error
    get:
      summary: Returns a list of all PPMs associated with this move
      description: Returns a list of all PPMs associated with this move
      operationId: indexPersonallyProcuredMoves
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move these PPMs are associated with
      responses:
        200:
          description: returns list of personally_procured_move
          schema:
            $ref: '#/definitions/IndexPersonallyProcuredMovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
  /moves/{moveId}/personally_procured_move/{personallyProcuredMoveId}:
    post:
      summary: Updates the PPM
      description: This replaces the current version of the PPM with the version sent.
      operationId: updatePersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM being updated
        - in: body
          name: updatePersonallyProcuredMovePayload
          required: true
          schema:
            $ref: '#/definitions/UpdatePersonallyProcuredMovePayload'
      responses:
        201:
          description: updated instance of personally_procured_move
          schema:
            $ref: '#/definitions/PersonallyProcuredMovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        500:
          description: internal server error
    patch:
      summary: Patches the PPM
      description: Any fields sent in this request will be set on the PPM referenced
      operationId: patchPersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM being patched
        - in: body
          name: patchPersonallyProcuredMovePayload
          required: true
          schema:
            $ref: '#/definitions/PatchPersonallyProcuredMovePayload'
      responses:
        201:
          description: updated instance of personally_procured_move
          schema:
            $ref: '#/definitions/PersonallyProcuredMovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: ppm is not found
        500:
          description: internal server error
    get:
      summary: Returns the given PPM
      description: Returns the given PPM
      operationId: showPersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move being signed for
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM
      responses:
        200:
          description: the instance of personally_procured_move
          schema:
            $ref: '#/definitions/IndexPersonallyProcuredMovePayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
  /moves/{moveId}/accounting:
    get:
      summary: Returns accounting information for a move
      description: Returns accounting information for a move
      operationId: showAccounting
      tags:
        - office
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
      responses:
        200:
          description: the accounting information for a move
          schema:
            $ref: '#/definitions/Accounting'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: move not found
        500:
          description: internal server error
    patch:
      summary: Updates accounting information for a move
      description: Any fields sent in this request will be set for accounting info on the referenced move
      operationId: patchAccounting
      tags:
        - office
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the associated move
        - in: body
          name: patchAccounting
          required: true
          schema:
            $ref: '#/definitions/PatchAccounting'
      responses:
        200:
          description: updated accounting information
          schema:
            $ref: '#/definitions/Accounting'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: move not found
        500:
          description: internal server error
  /documents:
    post:
      summary: Create a new document
      description: Documents represent a physical artifact such as a scanned document or a PDF file
      operationId: createDocument
      tags:
        - documents
      parameters:
        - in: body
          name: documentPayload
          required: true
          schema:
            $ref: '#/definitions/PostDocumentPayload'
      responses:
        201:
          description: created document
          schema:
            $ref: '#/definitions/DocumentPayload'
        400:
          description: invalid request
        500:
          description: server error
  /documents/{documentId}/uploads:
    post:
      summary: Create a new upload
      description: Uploads represent a single digital file, such as a JPEG or PDF.
      operationId: createUpload
      tags:
        - uploads
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: documentId
          type: string
          format: uuid
          required: true
          description: UUID of the document to add an upload to
        - in: formData
          name: file
          type: file
          description: The file to upload.
          required: true
      responses:
        201:
          description: created upload
          schema:
            $ref: '#/definitions/UploadPayload'
        400:
          description: invalid request
          schema:
            $ref: '#/definitions/InvalidRequestResponsePayload'
        403:
          description: not authorized
        404:
          description: not found
        500:
          description: server error
  /uploads/{uploadId}:
    delete:
      summary: Deletes an upload
      description: Uploads represent a single digital file, such as a JPEG or PDF.
      operationId: deleteUpload
      tags:
        - uploads
      parameters:
        - in: path
          name: uploadId
          type: string
          format: uuid
          required: true
          description: UUID of the upload to be deleted
      responses:
        201:
          description: deleted upload
        400:
          description: invalid request
          schema:
            $ref: '#/definitions/InvalidRequestResponsePayload'
        403:
          description: not authorized
        404:
          description: not found
        500:
          description: server error
  /service_members:
    post:
      summary: Creates service member for a logged-in user
      description: Creates an instance of a service member tied to a user
      operationId: createServiceMember
      tags:
        - service_members
      parameters:
        - in: body
          name: createServiceMemberPayload
          required: true
          schema:
            $ref: '#/definitions/CreateServiceMemberPayload'
      responses:
        201:
          description: created instance of service member
          schema:
            $ref: '#/definitions/ServiceMemberPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: service member not found
        500:
          description: internal server error
  /service_members/{serviceMemberId}:
    get:
      summary: Returns the given service member
      description: Returns the given service member
      operationId: showServiceMember
      tags:
        - service_members
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        200:
          description: the instance of the service member
          schema:
            $ref: '#/definitions/ServiceMemberPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: service member not found
        500:
          description: internal server error
    patch:
      summary: Patches the service member
      description: Any fields sent in this request will be set on the service member referenced
      operationId: patchServiceMember
      tags:
        - service_members
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
        - in: body
          name: patchServiceMemberPayload
          required: true
          schema:
            $ref: '#/definitions/PatchServiceMemberPayload'
      responses:
        200:
          description: updated instance of service member
          schema:
            $ref: '#/definitions/ServiceMemberPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: service member not found
        500:
          description: internal server error
  /service_members/{serviceMemberId}/current_orders:
    get:
      summary: Returns the latest orders for a given service member
      description: Returns orders
      operationId: showServiceMemberOrders
      tags:
        - service_members
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        200:
          description: the instance of the service member
          schema:
            $ref: '#/definitions/OrdersPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: service member not found
        500:
          description: internal server error
  /service_members/{serviceMemberId}/backup_contacts:
    post:
      summary: Submits backup contact for a logged-in user
      description: Creates an instance of a backup contact tied to a service member user
      operationId: createServiceMemberBackupContact
      tags:
        - backup_contacts
      parameters:
        - in: body
          name: createBackupContactPayload
          required: true
          schema:
            $ref: '#/definitions/CreateServiceMemberBackupContactPayload'
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        201:
          description: created instance of service member backup contact
          schema:
            $ref: '#/definitions/ServiceMemberBackupContactPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized to create this backup contact
        404:
          description: contact not found
        500:
          description: internal server error
    get:
      summary: List all service member backup contacts
      description: List all service member backup contacts
      operationId: indexServiceMemberBackupContacts
      tags:
        - backup_contacts
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        200:
          description: list of service member backup contacts
          schema:
            $ref: '#/definitions/IndexServiceMemberBackupContactsPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized to see this backup contact
        404:
          description: contact not found
        500:
          description: internal server error
  /backup_contacts/{backupContactId}:
    get:
      summary: Returns the given service member backup contact
      description: Returns the given service member backup contact
      operationId: showServiceMemberBackupContact
      tags:
        - backup_contacts
      parameters:
        - in: path
          name: backupContactId
          type: string
          format: uuid
          required: true
          description: UUID of the service member backup contact
      responses:
        200:
          description: the instance of the service member backup contact
          schema:
            $ref: '#/definitions/ServiceMemberBackupContactPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: backup contact not found
        500:
          description: internal server error
    put:
      summary: Updates a service member backup contact
      description: Any fields sent in this request will be set on the backup contact referenced
      operationId: updateServiceMemberBackupContact
      tags:
        - backup_contacts
      parameters:
        - in: body
          name: updateServiceMemberBackupContactPayload
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceMemberBackupContactPayload'
        - in: path
          name: backupContactId
          type: string
          format: uuid
          required: true
          description: UUID of the service member backup contact
      responses:
        201:
          description: updated instance of backup contact
          schema:
            $ref: '#/definitions/ServiceMemberBackupContactPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: backup contact not found
        500:
          description: internal server error
  /duty_stations:
    get:
      summary: Returns the duty stations matching the search query
      description: Returns the duty stations matching the search query
      operationId: searchDutyStations
      tags:
        - duty_stations
      parameters:
        - in: query
          name: search
          type: string
          format: string
          required: true
          description: Search string for duty stations
      responses:
        200:
          description: the instance of the service member backup contact
          schema:
            $ref: '#/definitions/DutyStationsPayload'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized
        404:
          description: matching duty station not found
        500:
          description: internal server error
  /queues/{queueType}:
    get:
      summary: Show all moves in a queue
      description: Show all moves in a queue
      operationId: showQueue
      tags:
        - queues
      parameters:
        - in: path
          name: queueType
          type: string
          enum:
          - new
          - troubleshooting
          - ppm
          required: true
          description: Queue type to show
      responses:
        200:
          description: list all moves in the specified queue
          schema:
            type: array
            items:
              $ref: '#/definitions/MoveQueueItem'
        400:
          description: invalid request
        401:
          description: request requires user authentication
        403:
          description: user is not authorized to access this queue
